{"mappings":"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","sources":["node_modules/notiflix/build/notiflix-notify-aio.js","src/js/countryConnections.js","node_modules/@swc/helpers/lib/_define_property.js","src/js/transportPanel.js","src/js/map.js","src/js/meansOfTransport.js","src/js/translations.js"],"sourcesContent":["/*\n* Notiflix Notify AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // NOTIFY: Default Settings: begin\n  var typesNotify = {\r\n    Success: 'Success',\r\n    Failure: 'Failure',\r\n    Warning: 'Warning',\r\n    Info: 'Info',\r\n  };\r\n  var newNotifySettings;\r\n  var notifySettings = {\r\n    wrapID: 'NotiflixNotifyWrap', // can not customizable\r\n    overlayID: 'NotiflixNotifyOverlay', // can not customizable\r\n    width: '280px',\r\n    position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 110,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\r\n    fontAwesomeIconSize: '34px',\r\n\n    success: {\r\n      background: '#32c682',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-success',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-check-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n\n    failure: {\r\n      background: '#ff5549',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-failure',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-times-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n\n    warning: {\r\n      background: '#eebf31',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-warning',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n\n    info: {\r\n      background: '#26c0d3',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-info',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-info-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n  };\n  // NOTIFY: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // NOTIFY: Get Internal CSS Codes: begin\n  var notifyGetInternalCSSCodes = function () {\r\n    var notifyCSS = '[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}';\r\n    return notifyCSS || null;\r\n  };\n  // NOTIFY: Get Internal CSS Codes: end\n\n  // NOTIFY: Create: begin\n  var notifyCreateCounter = 0;\r\n  var notifyCreate = function (notifyType, message, callbackOrOptions, options) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newNotifySettings) {\r\n      Notiflix.Notify.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newNotifySettingsBackup = commonExtendOptions(true, newNotifySettings, {});\r\n\n    // check callbackOrOptions and options: begin\r\n    if ((typeof callbackOrOptions === 'object' && !Array.isArray(callbackOrOptions)) || (typeof options === 'object' && !Array.isArray(options))) {\r\n      // new options\r\n      var newOptions = {};\r\n      if (typeof callbackOrOptions === 'object') {\r\n        newOptions = callbackOrOptions;\r\n      } else if (typeof options === 'object') {\r\n        newOptions = options;\r\n      }\r\n\n      // extend new settings with the new options\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, newOptions);\r\n    }\r\n    // check callbackOrOptions and options: end\r\n\n    // notify type\r\n    var theType = newNotifySettings[notifyType.toLocaleLowerCase('en')];\r\n\n    // notify counter\r\n    notifyCreateCounter++;\r\n\n    // check the message: begin\r\n    if (typeof message !== 'string') {\r\n      message = 'Notiflix ' + notifyType;\r\n    }\r\n    // check the message: end\r\n\n    // if plainText is true => HTML tags not allowed: begin\r\n    if (newNotifySettings.plainText) {\r\n      message = commonGetPlaintext(message); // message plain text\r\n    }\r\n    // if plainText is true => HTML tags not allowed: end\r\n\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: begin\r\n    if (!newNotifySettings.plainText && message.length > newNotifySettings.messageMaxLength) {\r\n      // extend settings for error massege\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, { closeButton: true, messageMaxLength: 150 });\r\n      // error message\r\n      message = 'Possible HTML Tags Error: The \"plainText\" option is \"false\" and the notification content length is more than the \"messageMaxLength\" option.';\r\n    }\r\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: end\r\n\n    // check message max length: begin\r\n    if (message.length > newNotifySettings.messageMaxLength) {\r\n      message = message.substring(0, newNotifySettings.messageMaxLength) + '...';\r\n    }\r\n    // check message max length: end\r\n\n    // font awesome icon style: begin\r\n    if (newNotifySettings.fontAwesomeIconStyle === 'shadow') {\r\n      theType.fontAwesomeIconColor = theType.background;\r\n    }\r\n    // font awesome icon style: end\r\n\n    // if cssAnimaion is false => duration: begin\r\n    if (!newNotifySettings.cssAnimation) {\r\n      newNotifySettings.cssAnimationDuration = 0;\r\n    }\r\n    // if cssAnimaion is false => duration: end\r\n\n    // notify wrap: begin\r\n    var ntflxNotifyWrap = window.document.getElementById(notifySettings.wrapID) || window.document.createElement('div');\r\n    ntflxNotifyWrap.id = notifySettings.wrapID;\r\n    ntflxNotifyWrap.style.width = newNotifySettings.width;\r\n    ntflxNotifyWrap.style.zIndex = newNotifySettings.zindex;\r\n    ntflxNotifyWrap.style.opacity = newNotifySettings.opacity;\r\n\n    // wrap position: begin\r\n    if (newNotifySettings.position === 'center-center') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n      ntflxNotifyWrap.classList.add('nx-flex-center-center');\r\n      ntflxNotifyWrap.style.maxHeight = 'calc((100vh - ' + newNotifySettings.distance + ') - ' + newNotifySettings.distance + ')';\r\n      ntflxNotifyWrap.style.display = 'flex';\r\n      ntflxNotifyWrap.style.flexWrap = 'wrap';\r\n      ntflxNotifyWrap.style.flexDirection = 'column';\r\n      ntflxNotifyWrap.style.justifyContent = 'center';\r\n      ntflxNotifyWrap.style.alignItems = 'center';\r\n      ntflxNotifyWrap.style.pointerEvents = 'none';\r\n    } else if (newNotifySettings.position === 'center-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'center-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'right-bottom') {\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n    } else if (newNotifySettings.position === 'left-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    } else if (newNotifySettings.position === 'left-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n    } else { // 'right-top' or else\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    }\r\n    // wrap position: end\r\n\n    // if background overlay is true: begin\r\n    if (newNotifySettings.backOverlay) {\r\n      var ntflxNotifyOverlay = window.document.getElementById(notifySettings.overlayID) || window.document.createElement('div');\r\n      ntflxNotifyOverlay.id = notifySettings.overlayID;\r\n      ntflxNotifyOverlay.style.width = '100%';\r\n      ntflxNotifyOverlay.style.height = '100%';\r\n      ntflxNotifyOverlay.style.position = 'fixed';\r\n      ntflxNotifyOverlay.style.zIndex = newNotifySettings.zindex - 1;\r\n      ntflxNotifyOverlay.style.left = 0;\r\n      ntflxNotifyOverlay.style.top = 0;\r\n      ntflxNotifyOverlay.style.right = 0;\r\n      ntflxNotifyOverlay.style.bottom = 0;\r\n      ntflxNotifyOverlay.style.background = theType.backOverlayColor || newNotifySettings.backOverlayColor;\r\n      ntflxNotifyOverlay.className = newNotifySettings.cssAnimation ? 'nx-with-animation' : '';\r\n      ntflxNotifyOverlay.style.animationDuration = newNotifySettings.cssAnimation ? newNotifySettings.cssAnimationDuration + 'ms' : '';\r\n\n      if (!window.document.getElementById(notifySettings.overlayID)) {\r\n        window.document.body.appendChild(ntflxNotifyOverlay);\r\n      }\r\n    }\r\n    // if background overlay is true: end\r\n\n    if (!window.document.getElementById(notifySettings.wrapID)) {\r\n      window.document.body.appendChild(ntflxNotifyWrap);\r\n    }\r\n    // notify wrap: end\r\n\n    // notify content: begin\r\n    var ntflxNotify = window.document.createElement('div');\r\n    ntflxNotify.id = newNotifySettings.ID + '-' + notifyCreateCounter;\r\n    ntflxNotify.className = newNotifySettings.className + ' ' + theType.childClassName + ' ' + (newNotifySettings.cssAnimation ? 'nx-with-animation' : '') + ' ' + (newNotifySettings.useIcon ? 'nx-with-icon' : '') + ' nx-' + newNotifySettings.cssAnimationStyle + ' ' + (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function' ? 'nx-with-close-button' : '') + ' ' + (typeof callbackOrOptions === 'function' ? 'nx-with-callback' : '') + ' ' + (newNotifySettings.clickToClose ? 'nx-notify-click-to-close' : '');\r\n    ntflxNotify.style.fontSize = newNotifySettings.fontSize;\r\n    ntflxNotify.style.color = theType.textColor;\r\n    ntflxNotify.style.background = theType.background;\r\n    ntflxNotify.style.borderRadius = newNotifySettings.borderRadius;\r\n    ntflxNotify.style.pointerEvents = 'all';\r\n\n    // rtl: begin\r\n    if (newNotifySettings.rtl) {\r\n      ntflxNotify.setAttribute('dir', 'rtl');\r\n      ntflxNotify.classList.add('nx-rtl-on');\r\n    }\r\n    // rtl: end\r\n\n    // font-family: begin\r\n    ntflxNotify.style.fontFamily = '\"' + newNotifySettings.fontFamily + '\", ' + defaultFontFamily;\r\n    // font-family: end\r\n\n    // use css animation: begin\r\n    if (newNotifySettings.cssAnimation) {\r\n      ntflxNotify.style.animationDuration = newNotifySettings.cssAnimationDuration + 'ms';\r\n    }\r\n    // use css animation: end\r\n\n    // close button element: begin\r\n    var closeButtonHTML = '';\r\n    if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n      closeButtonHTML = '<span class=\"nx-close-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\"/></g></svg></span>';\r\n    }\r\n    // close buttpon element: end\r\n\n    // use icon: begin\r\n    if (newNotifySettings.useIcon) {\r\n      // use font awesome\r\n      if (newNotifySettings.useFontAwesome) {\r\n        ntflxNotify.innerHTML = '<i style=\"color:' + theType.fontAwesomeIconColor + '; font-size:' + newNotifySettings.fontAwesomeIconSize + ';\" class=\"nx-message-icon nx-message-icon-fa ' + theType.fontAwesomeClassName + ' ' + (newNotifySettings.fontAwesomeIconStyle === 'shadow' ? 'nx-message-icon-fa-shadow' : 'nx-message-icon-fa-basic') + '\"></i><span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n      // use notiflix icon\r\n      else {\r\n        var svgIcon = '';\r\n        if (notifyType === typesNotify.Success) {  // success\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Failure) { // failure\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Warning) { // warning\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Info) { // info\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\"/></g></svg>';\r\n        }\r\n        ntflxNotify.innerHTML = svgIcon + '<span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n    }\r\n    // without icon\r\n    else {\r\n      ntflxNotify.innerHTML = '<span class=\"nx-message\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n    }\r\n    // use icon: end\r\n    // notify content: end\r\n\n    // notify append or prepend: begin\r\n    if (newNotifySettings.position === 'left-bottom' || newNotifySettings.position === 'right-bottom') { // the new one will be first\r\n      var notifyWrap = window.document.getElementById(notifySettings.wrapID);\r\n      notifyWrap.insertBefore(ntflxNotify, notifyWrap.firstChild);\r\n    } else {\r\n      window.document.getElementById(notifySettings.wrapID).appendChild(ntflxNotify);\r\n    }\r\n    // notify append or prepend: end\r\n\n    // remove by timeout or click: begin\r\n    var eachNotifyElement = window.document.getElementById(ntflxNotify.id);\r\n    if (eachNotifyElement) {\r\n      // timeout variables\r\n      var timeoutHide;\r\n      var timeoutRemove;\r\n\n      // hide notify elm and hide overlay: begin\r\n      var hideNotifyElementsAndOverlay = function () {\r\n        eachNotifyElement.classList.add('nx-remove');\r\n        var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n        if (removeOverlay && ntflxNotifyWrap.childElementCount <= 0) {\r\n          removeOverlay.classList.add('nx-remove');\r\n        }\r\n        clearTimeout(timeoutHide);\r\n      };\r\n      // hide notify elm and hide overlay: end\r\n\n      // remove notify elm and wrapper: begin\r\n      var removeNotifyElmentsAndWrapper = function () {\r\n        if (eachNotifyElement && eachNotifyElement.parentNode !== null) {\r\n          eachNotifyElement.parentNode.removeChild(eachNotifyElement);\r\n        }\r\n        if (ntflxNotifyWrap.childElementCount <= 0 && ntflxNotifyWrap.parentNode !== null) { // if childs count === 0 remove wrap\r\n          ntflxNotifyWrap.parentNode.removeChild(ntflxNotifyWrap);\r\n          var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n          if (removeOverlay && removeOverlay.parentNode !== null) {\r\n            removeOverlay.parentNode.removeChild(removeOverlay);\r\n          }\r\n        }\r\n        clearTimeout(timeoutRemove);\r\n      };\r\n      // remove notify elm and wrapper: end\r\n\n      // if has close button and callbackOrOptions is not a function: begin\r\n      if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        var closeButtonElm = window.document.getElementById(ntflxNotify.id).querySelector('span.nx-close-button');\r\n        closeButtonElm.addEventListener('click', function () {\r\n          hideNotifyElementsAndOverlay();\r\n          var clickToCloseTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(clickToCloseTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if has close button and callbackOrOptions is not a function: end\r\n\n      // if callbackOrOptions or click to close: begin\r\n      if (typeof callbackOrOptions === 'function' || newNotifySettings.clickToClose) {\r\n        eachNotifyElement.addEventListener('click', function () {\r\n          if (typeof callbackOrOptions === 'function') {\r\n            callbackOrOptions();\r\n          }\r\n          hideNotifyElementsAndOverlay();\r\n          var callbackTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(callbackTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if callbackOrOptions or click to close: end\r\n\n      // else auto remove: begin\r\n      if (!newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        // auto remove: begin\r\n        var autoRemove = function () {\r\n          timeoutHide = setTimeout(function () {\r\n            hideNotifyElementsAndOverlay();\r\n          }, newNotifySettings.timeout);\r\n          timeoutRemove = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n          }, newNotifySettings.timeout + newNotifySettings.cssAnimationDuration);\r\n        };\r\n        autoRemove();\r\n        // auto remove: end\r\n\n        // pause auto remove: begin\r\n        if (newNotifySettings.pauseOnHover) {\r\n          eachNotifyElement.addEventListener('mouseenter', function () {\r\n            eachNotifyElement.classList.add('nx-paused');\r\n            clearTimeout(timeoutHide);\r\n            clearTimeout(timeoutRemove);\r\n          });\r\n          eachNotifyElement.addEventListener('mouseleave', function () {\r\n            eachNotifyElement.classList.remove('nx-paused');\r\n            autoRemove();\r\n          });\r\n        }\r\n        // pause auto remove: end\r\n      }\r\n      // else auto remove: end\r\n    }\r\n    // remove by timeout or click: end\r\n\n    // notify - show only the last one: begin\r\n    if (newNotifySettings.showOnlyTheLastOne && notifyCreateCounter > 0) {\r\n      var allNotifyElmNotTheLastOne = window.document.querySelectorAll('[id^=' + newNotifySettings.ID + '-]:not([id=' + newNotifySettings.ID + '-' + notifyCreateCounter + '])');\r\n      for (var i = 0; i < allNotifyElmNotTheLastOne.length; i++) {\r\n        var eachNotifyElmNotLastOne = allNotifyElmNotTheLastOne[i];\r\n        if (eachNotifyElmNotLastOne.parentNode !== null) {\r\n          eachNotifyElmNotLastOne.parentNode.removeChild(eachNotifyElmNotLastOne);\r\n        }\r\n      }\r\n    }\r\n    // notify - show only the last one: end\r\n\n    // extend new settings with the backup settings\r\n    newNotifySettings = commonExtendOptions(true, newNotifySettings, newNotifySettingsBackup);\r\n\n  };\n  // NOTIFY: Create: end\n\n  var Notiflix = {\n    Notify: {\r\n      // Init\r\n      init: function (userNotifyOptions) {\r\n        // extend options\r\n        newNotifySettings = commonExtendOptions(true, notifySettings, userNotifyOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(notifyGetInternalCSSCodes, 'NotiflixNotifyInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userNotifyExtendOptions) {\r\n        // if initialized already\r\n        if (newNotifySettings) {\r\n          newNotifySettings = commonExtendOptions(true, newNotifySettings, userNotifyExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Notify module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Success\r\n      success: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Success, message, callbackOrOptions, options);\r\n      },\r\n      // Failure\r\n      failure: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Failure, message, callbackOrOptions, options);\r\n      },\r\n      // Warning\r\n      warning: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Warning, message, callbackOrOptions, options);\r\n      },\r\n      // Info\r\n      info: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Info, message, callbackOrOptions, options);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Notify: Notiflix.Notify });\n  } else {\n    return { Notify: Notiflix.Notify };\n  }\n\n});","\nexport let countryConnections = {\n    land: {\n        poland:{\n            direct:{\n                \"germany\": 573,\n                \"eastPrussia\": 382,\n                \"czechoslovakia\": 637,\n                \"latvia\": 670,\n                \"lithuania\": 409,\n                \"romania\": 1301,\n                \"ussr\": 1264\n            },\n            transit:{\n                france: {\n                    distance: 1594,\n                    route: [\"germany\"]\n                },\n                spain: {\n                    distance: 2859,\n                    route: [\"germany\",\"france\"]\n                }, \n                portugal:{\n                    distance: 3393,\n                    route: [\"germany\",\"france\",\"spain\"]\n                },\n                belgium:{\n                    distance: 1292,\n                    route: [\"germany\"]\n                },\n                netherland:{\n                    distance: 1193,\n                    route: [\"germany\"]\n                },\n                denmark:{\n                    distance: 1331,\n                    route: [\"germany\"]\n                },\n                switzerland:{\n                    distnace: 1443,\n                    route: [\"germany\"]\n                },\n                austria:{\n                    distance: 671,\n                    route: [\"czechoslovakia\"]\n                },\n                hungary:{\n                    distance: 783,\n                    route: [\"czechoslovakia\"]\n                },\n                yugoslavia:{\n                    distance: 1153,\n                    route: [\"czechoslovakia\",\"hungary\"]\n                },\n                albania:{\n                    distance: 1878,\n                    route:  [\"czechoslovakia\",\"hungary\",\"yugoslavia\"]\n                },\n                greece:{\n                    distance: 2244,\n                    route: [\"czechoslovakia\",\"hungary\",\"yugoslavia\"],\n                    distance1: 2464,\n                    alternativeRoute1: [\"romania\",\"bulgaria\"]\n                },\n                turkey:{\n                    distance: 2374,\n                    route: [\"romania\",\"bulgaria\"],\n                    distance1: 2464,\n                    alternativeRoute1: [\"czechoslovakia\",\"hungary\",\"serbia\",\"bulgaria\"]\n                },\n                bulgaria:{\n                    distance: 1674,\n                    route: [\"romania\"]\n                },\n                italy:{\n                    distance: 1783,\n                    route: [\"czechoslovakia\",\"austria\"]\n                },\n                estonia:{\n                    distance: 976,\n                    route: [\"lithuania\",\"latvia\"],\n                    distance1: 1350,\n                    alternativeRoute1: [\"latvia\"]\n                },\n                finland:{\n                    distance: 1556,\n                    route: [\"lithuania\",\"latvia\",\"ussr\"],\n                    distance1: 1726,\n                    alternativeRoute1: [\"ussr\"]\n                },\n                sweden:{\n                    distance: 3212,\n                    route:[\"ussr\",\"finland\"]\n                },\n                norway:{\n                    distance: 3441,\n                    route:[\"ussr\",\"finland\",\"sweden\"]\n                }\n            }\n        \n        },\n        germany:{\n            direct:{\n                \"denmark\": 766,\n                \"netherland\": 655,\n                \"belgium\": 754,\n                \"france\": 1110,\n                \"switzerland\": 959,\n                \"austria\": 987,\n                \"czechoslovakia\": 350,\n                \"poland\": 573,\n                \"lithuania\": 258 // from koningsberg\n            },\n            transit:{\n            }\n        },\n        france:{\n            direct:{\n                \"germany\": 1110,\n                \"spain\": 1275,\n                \"italy\": 1421,\n                \"belgium\": 313,\n                \"switzerland\": 571\n\n            },\n            transit:{\n\n            }\n        },\n        spain:{\n            direct:{\n                \"france\": 1275,\n                \"portugal\": 612\n\n            },\n            transit:{\n                \n            }\n        },\n        portugal:{\n            direct:{\n                \"spain\": 612\n            },\n            transit:{\n                \n            }\n        },\n        italy:{\n            direct:{\n                \"france\" : 1421,\n                \"switzerland\" : 924,\n                \"austria\" : 1122,\n                \"yugoslavia\" : 1277\n            },\n            transit:{\n                \n            }\n        },\n        yugoslavia:{\n            direct:{\n            \"italy\"   : 1277,\n            \"austria\" : 763,\n            \"greece\"  : 1094,\n            \"hungary\" : 378,\n            \"romania\" : 593,\n            \"bulgaria\": 392,\n            \"albania\" : 628\n            },\n            transit:{\n                \n            }\n        },\n        switzerland:{\n            direct:{\n                \"germany\" : 959,\n                \"france\" : 571,\n                \"italy\" : 924,\n                \"austria\" : 887\n            },\n            transit:{\n                \n            }\n        },\n        austria:{\n            direct:{\n                \"germany\" : 987,\n                \"switzerland\" : 887,\n                \"hungary\" : 243,\n                \"yugoslavia\" : 763,\n                \"czechoslovakia\" : 291,\n                \"italy\" : 1122\n            },\n            transit:{\n                \n            }\n        },\n        czechoslovakia:{\n            direct:{\n                \"poland\" : 637,\n                \"germany\" : 350,\n                \"austria\" : 291,\n                \"hungary\" : 525,\n                \"romania\" : 1540\n            },\n            transit:{\n                \n            }\n        },\n        hungary:{\n            direct:{\n                \"czechoslovakia\" : 525,\n                \"austria\" : 243,\n                \"romania\" : 836,\n                \"yugoslavia\" : 378 \n            },\n            transit:{\n                \n            }\n        },\n        romania:{\n            direct:{\n                \"czechoslovakia\" : 1540,\n                \"ussr\" : 1809,\n                \"poland\": 1301,\n                \"hungary\" : 836,\n                \"yugoslavia\": 593,\n                \"bulgaria\" : 356\n            },\n            transit:{\n                \n            }\n        },\n        bulgaria:{\n            direct:{\n                \"turkey\" : 550,\n                \"romania\": 356,\n                \"greece\" : 792,\n                \"yugoslavia\" : 392\n            },\n            transit:{\n                \n            }\n        },\n        albania:{\n            direct:{\n                \"yugoslavia\" : 628,\n                \"greece\" : 730\n            },\n            transit:{\n                \n            }\n        },\n        greece:{\n            direct:{\n                \"yugoslavia\" : 1094,\n                \"turkey\": 1094,\n                \"albania\" : 730,\n                \"bulgaria\": 792\n            },\n            transit:{\n                \n            }\n        },\n        turkey:{ //from stambul\n            direct:{\n                \"ussr\" : 3637,\n                \"bulgaria\" : 550,\n                \"greece\" : 1094\n            },\n            transit:{\n                \n            }\n        },\n        ussr:{\n            direct:{\n                \"finland\" : 1088,\n                \"estonia\" : 1025,\n                \"latvia\" : 925,\n                \"poland\" : 1264,\n                \"romania\" : 1809,\n                \"turkey\" : 3637,\n                \"norway\" : 4661\n            },\n            transit:{\n                \n            }\n        },\n        estonia:{\n            direct:{\n                \"latvia\" : 308,\n                \"ussr\" : 1025\n            },\n            transit:{\n                \n            }\n        },\n        latvia:{\n            direct:{\n                \"estonia\" : 308,\n                \"ussr\" : 925,\n                \"poland\" : 670,\n                \"lithuania\" : 267,\n            },\n            transit:{\n                \n            }\n        },\n        lithuania:{\n            direct:{\n                \"latvia\" : 267,\n                \"germany\" : 258, //koningsberg\n                \"poland\" : 409\n            },\n            transit:{\n                \n            }\n        },\n        finland:{\n            direct:{\n                \"norway\" : 1991,\n                \"sweden\" : 1762,\n                \"ussr\" : 1088,\n            },\n            transit:{\n                \n            }\n        },\n        sweden:{\n            direct:{\n                \"norway\" : 522,\n                \"finland\" : 1762,\n                \"denmark\" : 658,\n            },\n            transit:{\n                \n            }\n        },\n        norway:{\n            direct:{\n                \"sweden\" : 522,\n                \"finland\" : 1991,\n                \"ussr\" : 4661\n            },\n            transit:{\n                \n            }\n        },\n        ireland:{\n            direct:{\n                \"greatBritain\" : 166//belfast\n            },\n            transit:{\n                \n            }\n        },\n        ireland:{\n            direct:{\n                \"greatBritain\" : 166//belfast\n            },\n            transit:{\n                \n            }\n        },\n        denmark:{\n            direct:{\n                \"germany\" : 766,\n                \"sweden\" : 658\n            },\n            transit:{\n                \n            }\n        },\n        greatBritain:{\n            direct:{\n                \"ireland\" : 166//belfast\n            },\n            transit:{\n                \n            }\n        },belgium:{\n            direct:{\n                \"netherland\" : 210,\n                \"france\" : 313,\n                \"germany\" : 754\n            },\n            transit:{\n\n            }\n        },\n        netherland:{\n            direct:{\n                \"belgium\" : 210,\n                \"germany\" : 655\n            },\n            transit:{\n\n            }\n        },\n    },\n    sea:{\n        poland:{ //gdańsk\n            \"sweden\": 638,\n            \"norway\": 996,\n            \"denmark\": 507,\n            \"greatBritain\": 1979,\n            \"lithuania\": 216,\n            \"latvia\": 614,\n            \"estonia\": 751,\n            \"ussr\": 1046,\n            \"finland\": 781,\n            \"germany\": 803,\n            \"netherland\": 1551,\n            \"belgium\": 1796,\n            \"france\": 2027,\n            \"spain\": 2940,\n            \"portugal\": 3524,\n            \"italy\": 5602,\n            \"yugoslavia\": 6789,\n            \"albania\": 6404,\n            \"greece\": 6776,\n            \"turkey\": 7367,\n            \"bulgaria\": 7643,\n            \"romania\": 7730,\n            \"iceland\": 2824,\n            \"ireland\" : 2346\n        },\n        sweden:{ //Sztokholm\n            \"poland\": 638,\n            \"norway\": 1285,\n            \"denmark\": 790,\n            \"greatBritain\": 2268, //southhampton\n            \"lithuania\": 490, //klaipeda\n            \"latvia\": 492, //riga \n            \"estonia\": 401,\n            \"ussr\": 713, //leningrad\n            \"finland\": 438,\n            \"germany\": 1087, //hamburg\n            \"netherland\": 1840,\n            \"belgium\": 2085, //anwerp\n            \"france\": 2316, //cherburg\n            \"spain\": 3229, //bilbao\n            \"portugal\": 3813, //lisboa\n            \"italy\": 5891, //genoa\n            \"yugoslavia\": 7078, //split\n            \"albania\": 6693, //vlore\n            \"greece\": 7065, //pireus\n            \"turkey\": 7656, //istanbul\n            \"bulgaria\": 7932, //varna\n            \"romania\": 8019, //costantza\n            \"iceland\": 3113, //ryjkavik\n            \"ireland\" : 2631 //dublin\n        },\n        finland:{ // Helsinki\n            \"poland\": 781,\n            \"sweden\": 438,\n            \"denmark\": 1027,\n            \"greatBritain\": 2505,\n            \"lithuania\": 624,\n            \"latvia\": 585,\n            \"estonia\": 88,\n            \"ussr\": 316,\n            \"norway\": 1516, \n            \"germany\": 1335,\n            \"netherland\": 2077,\n            \"belgium\": 2322,\n            \"france\": 2553,\n            \"spain\": 3446,\n            \"portugal\": 4050,\n            \"italy\": 6128,\n            \"yugoslavia\": 7315,\n            \"albania\": 6930,\n            \"greece\": 7302,\n            \"turkey\": 7893,\n            \"bulgaria\": 8169,\n            \"romania\": 8256,\n            \"iceland\": 3350,\n            \"ireland\" : 2865\n        },\n        denmark:{ // Kopenhaga\n            \"poland\": 507,\n            \"sweden\": 790,\n            \"finland\": 1027,\n            \"greatBritain\": 1487,\n            \"lithuania\": 598,\n            \"latvia\": 885,\n            \"estonia\": 987,\n            \"ussr\": 1294,\n            \"norway\": 503,\n            \"germany\": 466,\n            \"netherland\": 1059,\n            \"belgium\": 1303,\n            \"france\": 1535,\n            \"spain\": 2448,\n            \"portugal\": 3031,\n            \"italy\": 5109,\n            \"yugoslavia\": 6296,\n            \"albania\": 5911,\n            \"greece\": 6283,\n            \"turkey\": 6874,\n            \"bulgaria\": 7150,\n            \"romania\": 7237,\n            \"iceland\": 2331,\n            \"ireland\" : 1861\n        },\n        greatBritain:{ // Southampton\n            \"poland\": 1979,\n            \"sweden\": 2268,\n            \"finland\": 2505,\n            \"denmark\": 1487,\n            \"lithuania\": 2074, \n            \"latvia\": 2355,\n            \"estonia\": 2466,\n            \"ussr\": 2766,\n            \"norway\": 1401, \n            \"germany\": 935,\n            \"netherland\": 518,\n            \"belgium\": 475,\n            \"france\": 155,\n            \"spain\": 1020,\n            \"portugal\": 1603,\n            \"italy\": 3681,\n            \"yugoslavia\": 4868,\n            \"albania\": 4483,\n            \"greece\": 4855,\n            \"turkey\": 5446,\n            \"bulgaria\": 5722,\n            \"romania\": 5809,\n            \"iceland\": 2342,\n            \"ireland\" : 722\n        },\n        lithuania:{ // Kłajpeda\n            \"poland\": 216,\n            \"sweden\": 490,\n            \"finland\": 624,\n            \"denmark\": 598,\n            \"greatBritain\": 2074, \n            \"latvia\": 430, \n            \"estonia\": 576,\n            \"ussr\": 872,\n            \"norway\": 1056, \n            \"germany\": 888,\n            \"netherland\": 1622,\n            \"belgium\": 1863,\n            \"france\": 2091,\n            \"spain\": 2991,\n            \"portugal\": 3566,\n            \"italy\": 5613,\n            \"yugoslavia\": 6783,\n            \"albania\": 6403,\n            \"greece\": 6770,\n            \"turkey\": 7352,\n            \"bulgaria\": 7624,\n            \"romania\": 7710,\n            \"iceland\": 2876,\n            \"ireland\" : 2440\n        },\n        latvia:{ // Ryga\n            \"poland\": 614,\n            \"sweden\": 492,\n            \"finland\": 585,\n            \"denmark\": 885,\n            \"greatBritain\": 2355, \n            \"lithuania\": 430, \n            \"estonia\": 531,\n            \"ussr\": 834,\n            \"norway\": 1357, \n            \"germany\": 1168,\n            \"netherland\": 1899,\n            \"belgium\": 2140,\n            \"france\": 2368,\n            \"spain\": 3268,\n            \"portugal\": 3843,\n            \"italy\": 5891,\n            \"yugoslavia\": 7060,\n            \"albania\": 6681,\n            \"greece\": 7048,\n            \"turkey\": 7630,\n            \"bulgaria\": 7902,\n            \"romania\": 7988,\n            \"iceland\": 3153,\n            \"ireland\" : 2717\n        },\n        estonia:{ // Talin\n            \"poland\": 751,\n            \"sweden\": 401,\n            \"finland\": 88,\n            \"denmark\": 987,\n            \"greatBritain\": 2466, \n            \"lithuania\": 576, \n            \"latvia\": 531,\n            \"ussr\": 341,\n            \"norway\": 1483, \n            \"germany\": 1277,\n            \"netherland\": 2009,\n            \"belgium\": 2250,\n            \"france\": 2478,\n            \"spain\": 3378,\n            \"portugal\": 3952,\n            \"italy\": 6000,\n            \"yugoslavia\": 7170,\n            \"albania\": 6790,\n            \"greece\": 7157,\n            \"turkey\": 7739,\n            \"bulgaria\": 8011,\n            \"romania\": 8097,\n            \"iceland\": 3263,\n            \"ireland\" : 2826\n        },\n        ussr:{ //from leningrad\n            \"poland\": 1046,\n            \"sweden\": 713,\n            \"finland\": 316,\n            \"denmark\": 1294,\n            \"greatBritain\": 2766, \n            \"lithuania\": 872, \n            \"latvia\": 834,\n            \"estonia\": 341,\n            \"norway\": 1787, \n            \"germany\": 1584,\n            \"netherland\": 2304,\n            \"belgium\": 2545,\n            \"france\": 2774,\n            \"spain\": 3673,\n            \"portugal\": 4248,\n            \"italy\": 6296,\n            \"yugoslavia\": 7466,\n            \"albania\": 7086,\n            \"greece\": 7453,\n            \"turkey\": 8035,\n            \"bulgaria\": 8265,\n            \"romania\": 8393,\n            \"iceland\": 3558,\n            \"ireland\" : 3122\n        },\n        norway:{ // Oslo\n            \"poland\": 996,\n            \"sweden\": 1285,\n            \"denmark\": 503,\n            \"greatBritain\": 1401,\n            \"lithuania\": 1072,\n            \"latvia\": 1377,\n            \"estonia\": 1483,\n            \"ussr\": 1787,\n            \"finland\": 1516,\n            \"germany\": 824,\n            \"netherland\": 970,\n            \"belgium\": 1216,\n            \"france\": 1450,\n            \"spain\": 2363,\n            \"portugal\": 2946,\n            \"italy\": 5024,\n            \"yugoslavia\": 6211,\n            \"albania\": 5826,\n            \"greece\": 6198,\n            \"turkey\": 6789,\n            \"bulgaria\": 7065,\n            \"romania\": 7152,\n            \"iceland\": 2183,\n            \"ireland\" : 1713\n        },\n        germany:{ // Hamburg\n            \"poland\": 803,\n            \"sweden\": 1087,\n            \"finland\": 1335,\n            \"denmark\": 466,\n            \"greatBritain\": 935,\n            \"lithuania\": 888,\n            \"latvia\": 1168,\n            \"estonia\": 1277,\n            \"ussr\": 1584,\n            \"norway\": 824,\n            \"netherland\": 492,\n            \"belgium\": 739,\n            \"france\": 969,\n            \"spain\": 1868,\n            \"portugal\": 2443,\n            \"italy\": 4491,\n            \"yugoslavia\": 5661,\n            \"albania\": 5281,\n            \"greece\": 5648,\n            \"turkey\": 6230,\n            \"bulgaria\": 6502,\n            \"romania\": 6588,\n            \"iceland\": 2252,\n            \"ireland\" : 1607\n        },\n        netherland:{ // Amsterdam\n            \"poland\": 1551,\n            \"sweden\": 1840,\n            \"finland\": 2077,\n            \"denmark\": 1059,\n            \"greatBritain\": 518,\n            \"lithuania\": 1622,\n            \"latvia\": 1899,\n            \"estonia\": 2009,\n            \"ussr\": 2304,\n            \"norway\": 970,\n            \"germany\": 492,\n            \"belgium\": 326,\n            \"france\": 558,\n            \"spain\": 1458,\n            \"portugal\": 2033,\n            \"italy\": 4080,\n            \"yugoslavia\": 5250,\n            \"albania\": 4870,\n            \"greece\": 5237,\n            \"turkey\": 5819,\n            \"bulgaria\": 6091,\n            \"romania\": 6177,\n            \"iceland\": 2120,\n            \"ireland\" : 1197\n        },\n        belgium:{ // Antwerpia\n            \"poland\": 1796,\n            \"sweden\": 2085,\n            \"finland\": 2322,\n            \"denmark\": 1303,\n            \"greatBritain\": 475,\n            \"lithuania\": 1863,\n            \"latvia\": 2140,\n            \"estonia\": 2250,\n            \"ussr\": 2545,\n            \"norway\": 1216,\n            \"germany\": 739,\n            \"netherland\": 326,\n            \"france\": 516,\n            \"spain\": 1416,\n            \"portugal\": 1991,\n            \"italy\": 4038,\n            \"yugoslavia\": 5208,\n            \"albania\": 4828,\n            \"greece\": 5195,\n            \"turkey\": 5777,\n            \"bulgaria\": 6049,\n            \"romania\": 6135,\n            \"iceland\": 2279,\n            \"ireland\" : 1155\n        },\n        france:{ //from cherbourg\n            \"poland\": 2027,\n            \"sweden\": 2316,\n            \"finland\": 2553,\n            \"denmark\": 1535,\n            \"greatBritain\": 155,\n            \"lithuania\": 2091,\n            \"latvia\": 2368,\n            \"estonia\": 2478,\n            \"ussr\": 2774,\n            \"norway\": 1450,\n            \"germany\": 969,\n            \"netherland\": 558,\n            \"belgium\": 516,\n            \"spain\": 919,\n            \"portugal\": 1494,\n            \"italy\": 3542,\n            \"yugoslavia\": 4712,\n            \"albania\": 4332,\n            \"greece\": 4699,\n            \"turkey\": 5271,\n            \"bulgaria\": 5553,\n            \"romania\": 5639,\n            \"iceland\": 2263,\n            \"ireland\" : 678\n        },\n        spain:{ //from bilbao\n            \"poland\": 2940,\n            \"sweden\": 3229,\n            \"finland\": 3446,\n            \"denmark\": 2448,\n            \"greatBritain\": 1020,\n            \"lithuania\": 2991,\n            \"latvia\": 3268,\n            \"estonia\": 3378,\n            \"ussr\": 3673,\n            \"norway\": 2363,\n            \"germany\": 1868,\n            \"netherland\": 1458,\n            \"belgium\": 1416,\n            \"france\": 919,\n            \"portugal\": 1069,\n            \"italy\": 3117,\n            \"yugoslavia\": 4286,\n            \"albania\": 3907,\n            \"greece\": 4274,\n            \"turkey\": 4856,\n            \"bulgaria\": 5128,\n            \"romania\": 5214,\n            \"iceland\": 2660,\n            \"ireland\" : 1153\n        },\n        portugal:{ // Lizbona\n            \"poland\": 3524,\n            \"sweden\": 3813,\n            \"finland\": 4050,\n            \"denmark\": 3031,\n            \"greatBritain\": 1603,\n            \"lithuania\": 3566,\n            \"latvia\": 3843,\n            \"estonia\": 3952,\n            \"ussr\": 4248,\n            \"norway\": 2946,\n            \"germany\": 2443,\n            \"netherland\": 2033,\n            \"belgium\": 1991,\n            \"france\": 1494,\n            \"spain\": 1069,\n            \"italy\": 2091,\n            \"yugoslavia\": 3261,\n            \"albania\": 2881,\n            \"greece\": 3248,\n            \"turkey\": 3830,\n            \"bulgaria\": 4102,\n            \"romania\": 4188,\n            \"iceland\": 2993,\n            \"ireland\" : 1677\n        },\n        italy:{ //from genoa\n            \"poland\": 5602,\n            \"sweden\": 5891,\n            \"finland\": 6128,\n            \"denmark\": 5109,\n            \"greatBritain\": 3681,\n            \"lithuania\": 5613,\n            \"latvia\": 5891,\n            \"estonia\": 6000,\n            \"ussr\": 6296,\n            \"norway\": 5024,\n            \"germany\": 4491,\n            \"netherland\": 4080,\n            \"belgium\": 4038,\n            \"france\": 3542,\n            \"spain\": 3117,\n            \"portugal\": 2091,\n            \"yugoslavia\": 1735,\n            \"albania\": 1355,\n            \"greece\": 1773,\n            \"turkey\": 2345,\n            \"bulgaria\": 2617,\n            \"romania\": 2702,\n            \"iceland\": 5062,\n            \"ireland\" : 3728\n        },\n        yugoslavia:{ //from split\n            \"poland\": 6789,\n            \"sweden\": 7078,\n            \"finland\": 7315,\n            \"denmark\": 6296,\n            \"greatBritain\": 4868,\n            \"lithuania\": 6783,\n            \"latvia\": 7060,\n            \"estonia\": 7170,\n            \"ussr\": 7466,\n            \"norway\": 6211,\n            \"germany\": 5661,\n            \"netherland\": 5250,\n            \"belgium\": 5208,\n            \"france\": 4712,\n            \"spain\": 4286,\n            \"portugal\": 3261,\n            \"italy\": 1735,\n            \"albania\": 494,\n            \"greece\": 1237,\n            \"turkey\": 1808,\n            \"bulgaria\": 2080,\n            \"romania\": 2166,\n            \"iceland\": 6232,\n            \"ireland\" : 4898\n        },\n        albania:{ // Vlore\n            \"poland\": 6404,\n            \"sweden\": 6693,\n            \"finland\": 6930,\n            \"denmark\": 5911,\n            \"greatBritain\": 4483,\n            \"lithuania\": 6403,\n            \"latvia\": 6681,\n            \"estonia\": 6790,\n            \"ussr\": 7086,\n            \"norway\": 5826,\n            \"germany\": 5281,\n            \"netherland\": 4870,\n            \"belgium\": 4828,\n            \"france\": 4332,\n            \"spain\": 3907,\n            \"portugal\": 2881,\n            \"italy\": 1335,\n            \"yugoslavia\": 494,\n            \"greece\": 803,\n            \"turkey\": 1374,\n            \"bulgaria\": 1646,\n            \"romania\": 1731,\n            \"iceland\": 5852,\n            \"ireland\" : 4518\n        },\n        greece:{ //from pireus\n            \"poland\": 6776,\n            \"sweden\": 7065,\n            \"finland\": 7302,\n            \"denmark\": 6283,\n            \"greatBritain\": 4855,\n            \"lithuania\": 6770,\n            \"latvia\": 7048,\n            \"estonia\": 7157,\n            \"ussr\": 7453,\n            \"norway\": 6198,\n            \"germany\": 5648,\n            \"netherland\": 5237,\n            \"belgium\": 5195,\n            \"france\": 4699,\n            \"spain\": 4274,\n            \"portugal\": 3248,\n            \"italy\": 1773,\n            \"yugoslavia\": 1237,\n            \"albania\": 803,\n            \"turkey\": 642,\n            \"bulgaria\": 914,\n            \"romania\": 1000,\n            \"iceland\": 6219,\n            \"ireland\" : 4885\n        },\n        turkey:{ //from istanbul\n            \"poland\": 7367,\n            \"sweden\": 7656,\n            \"finland\": 7893,\n            \"denmark\": 6874,\n            \"greatBritain\": 5446,\n            \"lithuania\": 7352,\n            \"latvia\": 7630,\n            \"estonia\": 7739,\n            \"ussr\": 8035,\n            \"norway\": 6789,\n            \"germany\": 6230,\n            \"netherland\": 5237,\n            \"belgium\": 5819,\n            \"france\": 5777,\n            \"spain\": 5271,\n            \"portugal\": 4856,\n            \"italy\": 3830,\n            \"yugoslavia\": 2345,\n            \"albania\": 1808,\n            \"greece\": 1374,\n            \"bulgaria\": 271,\n            \"romania\": 357,\n            \"iceland\": 6801,\n            \"ireland\" : 5467\n        },\n        bulgaria:{ //from varna\n            \"poland\": 7643,\n            \"sweden\": 7932,\n            \"finland\": 8169,\n            \"denmark\": 7150,\n            \"greatBritain\": 5722,\n            \"lithuania\": 7624,\n            \"latvia\": 7902,\n            \"estonia\": 8011,\n            \"ussr\": 8265,\n            \"norway\": 7065,\n            \"germany\": 6502,\n            \"netherland\": 6091,\n            \"belgium\": 6049,\n            \"france\": 5553,\n            \"spain\": 5128,\n            \"portugal\": 4102,\n            \"italy\": 2617,\n            \"yugoslavia\": 2080,\n            \"albania\": 1646,\n            \"greece\": 914,\n            \"turkey\": 271,\n            \"romania\": 138,\n            \"iceland\": 7073,\n            \"ireland\" : 5739\n        },\n        romania:{ // Kostancja\n            \"poland\": 7730,\n            \"sweden\": 8019,\n            \"finland\": 8256,\n            \"denmark\": 7237,\n            \"greatBritain\": 5809,\n            \"lithuania\": 7710,\n            \"latvia\": 7988,\n            \"estonia\": 8097,\n            \"ussr\": 8393,\n            \"norway\": 7152,\n            \"germany\": 6588,\n            \"netherland\": 6177,\n            \"belgium\": 6135,\n            \"france\": 5639,\n            \"spain\": 5214,\n            \"portugal\": 4188,\n            \"italy\": 2702,\n            \"yugoslavia\": 2166,\n            \"albania\": 1731,\n            \"greece\": 1000,\n            \"turkey\": 357,\n            \"bulgaria\": 138,\n            \"iceland\": 7159,\n            \"ireland\" : 5825\n        },\n        iceland:{ //Reykiavik\n            \"poland\": 2824,\n            \"sweden\": 3113,\n            \"finland\": 3350,\n            \"denmark\": 2331,\n            \"greatBritain\": 2342,\n            \"lithuania\": 2876,\n            \"latvia\": 3153,\n            \"estonia\": 3263,\n            \"ussr\": 3558,\n            \"norway\": 2183,\n            \"germany\": 2252,\n            \"netherland\": 2252,\n            \"belgium\": 2279,\n            \"france\": 2263,\n            \"spain\": 2660,\n            \"portugal\": 2993,\n            \"italy\": 5062,\n            \"yugoslavia\": 6232,\n            \"albania\": 5852,\n            \"greece\": 6219,\n            \"turkey\": 6801,\n            \"bulgaria\": 7073,\n            \"romania\": 7159,\n            \"ireland\" : 1635\n        },\n        ireland:{ //Dublin\n            \"poland\": 2346,\n            \"sweden\": 2631,\n            \"finland\": 2865,\n            \"denmark\": 1861,\n            \"greatBritain\": 722,\n            \"lithuania\": 2440, \n            \"latvia\": 2717,\n            \"estonia\": 2826,\n            \"ussr\": 3122,\n            \"norway\": 1713, \n            \"germany\": 1607,\n            \"netherland\": 1197,\n            \"belgium\": 1155,\n            \"france\": 678,\n            \"spain\": 1153,\n            \"portugal\": 1677,\n            \"italy\": 3728,\n            \"yugoslavia\": 4898,\n            \"albania\": 4518,//\n            \"greece\": 4885,\n            \"turkey\": 5467,\n            \"bulgaria\": 5739,\n            \"romania\": 5825,\n            \"iceland\": 1635 \n        }\n    }\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import {clickedCountryName, listObjects, hideActionForCountryList, toggleCountryPanelListClicked, toggleClickedCreateTransport,cleanCurrentRoute,currentRoute,currentRouteTranslated,lastClickedCountryTag,dateValue} from './map';\nimport {selectedLanguage} from './translations';\nimport {countryConnections} from './countryConnections';\nimport {meansOfTransportList,additionalTransportCost} from './meansOfTransport'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst createTransport = document.querySelector(\"#createTransport\")\nconst createTransportPanel = $(\".createTransportPanel\")[0];\nconst countryStartNameValue = $(\".countryStartNameValue\")[0];\nconst createTransportPanelSwitchOff = $(\".createTransportPanelSwitchOff\")[0];\n\nconst wares = $(\".wares\")[0];\nconst truckOption = document.getElementById(\"truck\");\nconst busOption = document.getElementById(\"bus\");\nconst transportTypeList = document.getElementById(\"transportTypeList\");\n\nconst blockageForInfoNotifyTime = 5000;\nexport let blockageForInfoNotify = false;\nconst endCountryOfTheRoute = $(\".endCountryOfTheRoute\")[1];\nlet currentEndCountryOfTheRoute;\n\nconst route = $(\".route\")[0];\nlet temporaryRouteValues = [];\nlet startedCountry;\nconst originNameOfWares = new Map();\n\nconst goodCostInStartedCountryValue = $(\".goodCostInStartedCountryValue\")[0];\nconst goodCostInEndCountryValue = $(\".goodCostInEndCountryValue\")[0];\nconst availableQtyValue = $(\".availableQtyValue\")[0];\nlet selectedWare;\n\nlet endCountryObject;\nlet goodPriceInEndCountry;\nconst howManyToTransportValue = document.getElementById(\"howManyToTransportValue\");\nconst transportTypeValue = document.getElementById(\"transportTypeValue\");\n\nlet type;\nlet lastTransportType;\nlet typeDetail;\nlet calculetedRouteDistance = 0;\n\nlet distanceRoute = [];\nconst routeDistanceValue = $(\".routeDistanceValue\")[0];\nconst bigCountry = [\"ussr\",\"germany\",\"france\",\"italy\",\"spain\",\"sweden\",\"norwnpmay\",\"poland\",\"greatBritain\"];\nlet clickedCountryTags = [];\n\nconst originalNameOfVehicles = new Map(); // to future use for translate for example ship names\nconst meanOfTransport = document.querySelector(\".meanOfTransport\");\nconst singularCostValue = document.querySelector(\".singularCostValue\");\n\nconst calculatedCostValueTag = document.querySelector(\".calculatedCostValue\");\nlet availableGoodQuantity;\nconst capacityValue = document.querySelector(\".capacityValue\");\nconst neccesseryQtyValue = document.querySelector(\".neccesseryQtyValue\");\n\nconst speedValue = document.querySelector(\".speedValue\");\nlet speedValueOfSelectedTransport;\nlet capacityOfSelectedTransport;\nlet neededTransportUnits = 0;\n\nconst earnings = document.getElementById(\"earnings\");\nconst incomeValue = document.querySelector(\".incomeValue\");\nconst profitValue = document.querySelector(\".profitValue\");\nlet calculatedIncomeValue;\n\nlet calculatedProfitValue;\nlet calculatedCostValue;\nlet goodPriceInStartedCountry;\nconst transportTypeImg = document.querySelector(\".transportTypeImg\");\n\nconst transportTypeData = document.querySelector(\".transportTypeData\")\n\n\nlet transportType =  {\n    land:{\n        bus: true,\n        railway: false,\n        truck: false\n    },\n    sea:{\n        maritime: false\n    },\n    air:{\n        plane: false,\n        airship: false\n    }\n}\n\nlet lastActiveTransportType = [\"land\",\"bus\"];\n\n\n\ncreateTransport.addEventListener(\"click\", \nfunction(){ \n    hideActionForCountryList();\n    toggleCountryPanelListClicked();\n    toggleClickedCreateTransport();\n    cleanCurrentRoute();\n\n    setProperTransportBasedOnGoods();\n\n    startedCountry = clickedCountryName;\n    addAvaiableGoodOptions();\n    countryStartNameValue.innerHTML = selectedLanguage[clickedCountryName];\n\n    createTransportPanel.style.visibility = \"visible\";\n    highlightCountry(startedCountry,lastClickedCountryTag);\n\n});\n\nexport function addAvaiableGoodOptions(){\n\n    let myObject = listObjects[clickedCountryName];\n    const availableGoodOption = $(\".availableGoodOption\");\n    availableGoodOption.remove();\n    let passengers = document.createElement('option');\n\n    passengers.classList.add('availableGoodOption');\n    passengers.value = selectedLanguage.passengers;\n    passengers.innerHTML = selectedLanguage.passengers;\n    wares.appendChild(passengers);\n\n    let availableGoods = myObject.goodsAvailability;\n\n    for(let availableGood in availableGoods){\n\n        originNameOfWares.set(selectedLanguage[availableGood],availableGood)\n\n        let availableGoodName = selectedLanguage[availableGood];\n        let selectedGoodOption = document.createElement('option');\n        selectedGoodOption.classList.add('availableGoodOption');\n        selectedGoodOption.value = availableGoodName;\n\n        selectedGoodOption.innerHTML = availableGoodName;\n        wares.appendChild(selectedGoodOption);\n    }\n}\n\ncreateTransportPanelSwitchOff.addEventListener('click',function(){\n    createTransportPanel.style.visibility = \"hidden\";\n    earnings.style.visibility = \"hidden\";\n    cleanCurrentRoute();\n    toggleClickedCreateTransport();\n    cleanRouteDistance();\n\n    currentEndCountryOfTheRoute = null;\n    endCountryOfTheRoute.innerHTML = \"\";\n    goodPriceInEndCountry = 0;\n    goodCostInEndCountryValue.innerHTML = 0\n\n    howManyToTransportValue.value = 0;\n    availableQtyValue.innerHTML = 0;\n\n    goodCostInStartedCountryValue.innerHTML = \"\";\n    wares.value = selectedLanguage[\"passengers\"];\n\n})\n\nexport function buildRoute(firstClickedCountryName,event){\n    \n    if(startedCountry == firstClickedCountryName){\n        let notifyFailureValue = startCountryCannotBeAPartOfRoute(startedCountry);\n        Notify.failure(notifyFailureValue);\n    }\n    else if(!currentRoute.includes(firstClickedCountryName)){\n        let selectedTransportTypeToTransfer\n            //land type:\n            if(lastActiveTransportType[0] == \"land\"){\n                selectedTransportTypeToTransfer = \"land\";\n                if(currentRoute.length == 0){\n                    let startLandRouteCountry = countryConnections.land[startedCountry].direct \n\n                    //check startedCountry neighbors\n                    if(startLandRouteCountry[firstClickedCountryName] != null){\n                        addToRoute(firstClickedCountryName,startedCountry,selectedTransportTypeToTransfer,event);\n                    } else{\n                        let notANeighbors = notANeighborsMessage(startedCountry,firstClickedCountryName)\n                        Notify.failure(notANeighbors);\n                    }\n                    \n                }else{\n                    let lastCountryInRoute = currentRoute[currentRoute.length - 1];\n                    let lastCountryInRouteConnections = countryConnections.land[lastCountryInRoute].direct\n\n                    if(lastCountryInRouteConnections[firstClickedCountryName] != null){\n                        addToRoute(firstClickedCountryName,startedCountry,selectedTransportTypeToTransfer,event);\n                    }else{\n                        let notANeighbors = notANeighborsMessage(lastCountryInRoute,firstClickedCountryName)\n                        Notify.failure(notANeighbors);\n                    }  \n                }\n            } else if(lastActiveTransportType[0] == \"sea\"){\n                selectedTransportTypeToTransfer = \"sea\";\n                let startSeaRouteCountry = countryConnections.sea[startedCountry]\n                if(currentRoute.length > 0){\n                    let maritimeRouteFailure = selectedLanguage.maritimeRouteOverSize;\n                    blockInfoNotify();\n                    Notify.failure(maritimeRouteFailure);\n                }\n                else if(startSeaRouteCountry[firstClickedCountryName] != null){\n                    addToRoute(firstClickedCountryName,startedCountry,selectedTransportTypeToTransfer,event);\n                }else if(!listObjects[firstClickedCountryName].accessToWaterReservoirs){\n                    let withoutAccessToSeaMessage = withoutAccessToSea(firstClickedCountryName);\n                    Notify.failure(withoutAccessToSeaMessage);\n                }\n            }\n    } else if(firstClickedCountryName == currentRoute[currentRoute.length - 1]){\n        removeLastElementFromRoute(event,firstClickedCountryName);\n    } else{\n        let notifyFailureValue = countryAlreadyInRoute(firstClickedCountryName)\n        Notify.failure(notifyFailureValue)\n    }\n}\n\nfunction countryAlreadyInRoute(firstClickedCountryName){\n    blockInfoNotify();\n    return selectedLanguage.country + \": <strong>\" + selectedLanguage[firstClickedCountryName] + \"</strong>, \" + selectedLanguage.alreadyAddedToRoute\n}\n\nfunction startCountryCannotBeAPartOfRoute(startedCountry){\n    blockInfoNotify();\n    return selectedLanguage.cannotAddCountry + \": <strong>\" + selectedLanguage[startedCountry] + \"</strong> \" + selectedLanguage.toRouteBecauseItIsTheStartingCountry\n}\n\nfunction notANeighborsMessage(startedCountry,firstClickedCountryName){\n    blockInfoNotify();\n    return \"<strong>\" +selectedLanguage[startedCountry] + \"</strong> \" + selectedLanguage.isNotANeighborOf +\": <strong><i>\" +  selectedLanguage[firstClickedCountryName] + \"</i></strong>\";\n}\n\nfunction withoutAccessToSea(firstClickedCountryName){\n    blockInfoNotify();\n    return \"<strong>\" + selectedLanguage[firstClickedCountryName] + \"</strong> \" + selectedLanguage.doNotHaveAccessToSea\n}\n\nfunction alreadyAllCountriesDeletedFromRoute(){\n    blockInfoNotify();\n    return selectedLanguage.alreadyAllCountriesDeletedFromRoute;\n}\n\nexport function translateCurrentRoute(currentRoute){\n    cleanCurrentRoute();\n    if(temporaryRouteValues.length>0){\n        currentRoute = temporaryRouteValues;\n    }\n    if(currentRoute.length>0){\n        for(let nbrInArray in currentRoute){\n            let countryName = currentRoute[nbrInArray];\n            currentRouteTranslated.push(selectedLanguage[countryName])\n                if(!temporaryRouteValues.includes(countryName)){\n                temporaryRouteValues.push(countryName)\n            }\n            route.innerHTML = currentRouteTranslated;\n        }\n    }\n    //translate typeOfTransportValue\n    transportTypeValue.innerHTML = selectedLanguage[lastActiveTransportType[0]];\n\n\n}\n\nwares.addEventListener(\"change\",function(){\n\n    setProperTransportBasedOnGoods();  \n    calculateCostValue()\n    setProperMeansOfTransport(transportTypeList.value);  \n    selectedWare = originNameOfWares.get(wares.value);\n    let startCountryObject = listObjects[startedCountry];\n    \n    availableGoodQuantity = startCountryObject.goodsAvailability[selectedWare];\n    goodPriceInStartedCountry = startCountryObject.goodCosts[selectedWare];\n    \n    goodCostInStartedCountryValue.innerHTML = goodPriceInStartedCountry;\n    availableQtyValue.innerHTML = availableGoodQuantity;\n    howManyToTransportValue.max = availableGoodQuantity;\n\n        if(currentEndCountryOfTheRoute !=null){\n        endCountryObject = listObjects[currentEndCountryOfTheRoute];\n        goodPriceInEndCountry = endCountryObject.goodCosts[selectedWare];\n        goodCostInEndCountryValue.innerHTML = goodPriceInEndCountry;\n    }\n        if(howManyToTransportValue.value > availableGoodQuantity){\n        howManyToTransportValue.value = availableGoodQuantity;\n    }\n});\n\nhowManyToTransportValue.addEventListener(\"change\",function(){\n    if(howManyToTransportValue.value>availableGoodQuantity){\n        howManyToTransportValue.value = availableGoodQuantity;\n    }\n    if(howManyToTransportValue.value<0){\n        howManyToTransportValue.value = 0;\n    }\n    \n    calculateCostValue();\n})\n\ntransportTypeList.addEventListener(\"change\",function(){\n    originNameOfSelectedTransport = getObjKeysByObjectAndValue(selectedLanguage,transportTypeList.value)[0];\n    let lastActiveTransportBeforeChange = lastActiveTransportType[0];\n    \n    checkWhichTransportType(originNameOfSelectedTransport);\n    setProperMeansOfTransport(transportTypeList.value);\n    calculateCostValue();\n    \n    if(lastActiveTransportBeforeChange != lastActiveTransportType[0]){\n         cleanCurrentRoute();\n         resetCostsAndEarnings();\n         distanceRoute = [];\n         calculetedRouteDistance = 0;\n         routeDistanceValue.innerHTML = calculetedRouteDistance;\n     \n         for(let i=0; i < clickedCountryTags.length; i++){\n             clickedCountryTags[i].parentElement.classList.remove(\"inRouteBigCountry\");\n             clickedCountryTags[i].classList.remove(\"inRouteBorderBigCountry\");\n             clickedCountryTags[i].parentElement.classList.remove(\"inRoute\");\n             clickedCountryTags[i].classList.remove(\"inRouteBorder\");\n         };\n\n         clickedCountryTags = [];\n\n        currentEndCountryOfTheRoute = null;\n        endCountryOfTheRoute.innerHTML = \"\";\n        goodPriceInEndCountry = 0;\n        goodCostInEndCountryValue.innerHTML = 0;\n        \n\n    }\n})\n\nfunction blockInfoNotify(){\n    blockageForInfoNotify = true;\n    setTimeout(allowToDisplayInfoNotify, blockageForInfoNotifyTime);\n}\n\nfunction allowToDisplayInfoNotify(){\n    blockageForInfoNotify = false;\n}\n\nfunction setProperMeansOfTransport(transportTypeName){\n    let passengersTranslation = selectedLanguage[\"passengers\"];\n    let truckTranslation = selectedLanguage[\"truck\"];\n    let busTranslation = selectedLanguage[\"bus\"]; \n    let maritimeTranslation = selectedLanguage[\"maritime\"]; \n    let railwayTranslation = selectedLanguage[\"railway\"];\n\n    const transportModel = $(\".transportModel\");\n    transportModel.remove();\n\n    if(transportTypeName == truckTranslation){\n        let vechicles = meansOfTransportList[dateValue.year].vechicles.truck\n        for(let vehicle in vechicles){\n            addOptionsToMeanOfTransport(vehicle);\n        }\n    } else if(transportTypeName == busTranslation){\n        let buses = meansOfTransportList[dateValue.year].vechicles.bus\n        for(let bus in buses){\n            addOptionsToMeanOfTransport(bus);\n        }\n\n    } else if(transportTypeName == maritimeTranslation){\n            if(wares.value == passengersTranslation){\n                let passengerShips = meansOfTransportList[dateValue.year].maritime.passangerShips\n                for(let passengerShip in passengerShips){\n                    addOptionsToMeanOfTransport(passengerShip);\n                }\n            } else {\n                let loadShips = meansOfTransportList[dateValue.year].maritime.loadShips\n                for(let loadShip in loadShips){\n                    addOptionsToMeanOfTransport(loadShip);\n                }\n            }\n\n    } else if(transportTypeName == railwayTranslation){\n        if(wares.value == passengersTranslation){\n            let passengerRailways = meansOfTransportList[dateValue.year].trains.passengerTrains\n            for(let passengerRailway in passengerRailways){\n                addOptionsToMeanOfTransport(passengerRailway);\n                \n            }\n        } else {\n            let loadRailways = meansOfTransportList[dateValue.year].trains.loadTrains\n            for(let loadRailway in loadRailways){\n                addOptionsToMeanOfTransport(loadRailway);\n            }\n        }\n    }\n\n    \n}\n\nfunction setProperTransportBasedOnGoods(){\n    let passengersTranslation = selectedLanguage[\"passengers\"];\n    let truckTranslation = selectedLanguage[\"truck\"];\n    let busTranslation = selectedLanguage[\"bus\"];\n    let railwayTranslation = selectedLanguage[\"railway\"];\n\n    if(transportTypeList.value == railwayTranslation){\n        lastActiveTransportType = [\"land\",\"railway\"];\n        setProperMeansOfTransport(selectedLanguage[\"railway\"]);\n        calculateCostValue();\n    }  \n\n    if(wares.value == passengersTranslation || wares.value == \"\"){ \n        truckOption.style.display = \"none\"\n        busOption.style.display = \"\"\n        if(transportTypeList.value == truckTranslation){\n            transportTypeList.value = busTranslation\n            lastActiveTransportType = [\"land\",\"bus\"];\n            setProperMeansOfTransport(selectedLanguage[\"bus\"]);\n            calculateCostValue();\n        }\n    } else {\n        truckOption.style.display = \"\"\n        busOption.style.display = \"none\"\n        if(transportTypeList.value == busTranslation){\n            transportTypeList.value = truckTranslation\n            lastActiveTransportType = [\"land\",\"truck\"];\n            setProperMeansOfTransport(selectedLanguage[\"truck\"]);\n            calculateCostValue();\n        } \n    }\n};\n\nfunction addToRoute(firstClickedCountryName,startedCountry,selectedTransportTypeToTransfer,event){\n\n    currentRoute.push(firstClickedCountryName);\n    clickedCountryTags.push(event.target)\n    currentRouteTranslated.push(selectedLanguage[firstClickedCountryName]);\n    route.innerHTML = currentRouteTranslated;\n    currentEndCountryOfTheRoute = currentRoute[currentRoute.length - 1];\n\n    endCountryOfTheRoute.innerHTML = selectedLanguage[currentEndCountryOfTheRoute];\n    endCountryObject = listObjects[currentEndCountryOfTheRoute];\n    goodPriceInEndCountry = endCountryObject.goodCosts[selectedWare];\n    goodCostInEndCountryValue.innerHTML = goodPriceInEndCountry;\n\n    highlightCountry(firstClickedCountryName,event.target);\n    //calculate route distance\n    let distance\n    if(currentRoute.length == 1){ //first country connected\n        if(selectedTransportTypeToTransfer ==\"land\"){\n            distance = countryConnections.land[startedCountry].direct[firstClickedCountryName];\n            calculetedRouteDistance += distance ;\n            distanceRoute.push(distance);\n            routeDistanceValue.innerHTML = calculetedRouteDistance;\n            \n            \n        } else if(selectedTransportTypeToTransfer ==\"sea\"){\n            distance = countryConnections.sea[startedCountry][firstClickedCountryName];\n            calculetedRouteDistance += distance ;\n            distanceRoute.push(distance)\n            routeDistanceValue.innerHTML = calculetedRouteDistance;\n        }\n\n    }else{ //next country connected\n        distance = countryConnections.land[currentRoute[currentRoute.length - 2]].direct[firstClickedCountryName];\n        calculetedRouteDistance += distance \n        distanceRoute.push(distance);\n        routeDistanceValue.innerHTML = calculetedRouteDistance;\n    }\n    \n    calculateCostValue();\n};\n\nfunction checkWhichTransportType(selectedTransportType){\n    if(transportType.land[selectedTransportType] != null){\n        transportType.land[selectedTransportType] = true;\n\n        type = lastActiveTransportType[0];\n        lastTransportType = transportType[type];\n        typeDetail = lastActiveTransportType[1];\n\n        lastTransportType[typeDetail] = false;\n        lastActiveTransportType = [\"land\",selectedTransportType];\n        transportTypeValue.innerHTML = selectedLanguage.land;\n\n        // return typeDetail;\n    } else if(transportType.sea[selectedTransportType] != null){\n        transportType.sea[selectedTransportType] = true;\n\n        type = lastActiveTransportType[0];\n        lastTransportType = transportType[type];\n        typeDetail = lastActiveTransportType[1];\n\n        lastTransportType[typeDetail] = false;\n        lastActiveTransportType = [\"sea\",selectedTransportType];\n        transportTypeValue.innerHTML = selectedLanguage.maritime;\n\n        // return typeDetail;\n\n    } else if(transportType.air[selectedTransportType] != null){\n        transportType.air[selectedTransportType] = true;\n\n        type = lastActiveTransportType[0];\n        lastTransportType = transportType[type];\n        typeDetail = lastActiveTransportType[1];\n        \n        lastTransportType[typeDetail] = false;\n        lastActiveTransportType = [\"air\",selectedTransportType];\n        transportTypeValue.innerHTML = selectedLanguage.air;\n\n        // return typeDetail;\n    }\n};\n\nfunction getObjKeysByObjectAndValue(obj, value) {\n    return Object.keys(obj).filter(key => obj[key] === value);\n  };\n\n  function cleanRouteDistance(){\n    distanceRoute = [];\n    calculetedRouteDistance = 0;\n    routeDistanceValue.innerHTML = calculetedRouteDistance;\n\n    for(let i=0; i < clickedCountryTags.length; i++){\n        clickedCountryTags[i].parentElement.classList.remove(\"inRouteBigCountry\");\n        clickedCountryTags[i].classList.remove(\"inRouteBorderBigCountry\");\n        clickedCountryTags[i].parentElement.classList.remove(\"inRoute\");\n        clickedCountryTags[i].classList.remove(\"inRouteBorder\");\n    };\n\n    clickedCountryTags = [];\n\n    lastClickedCountryTag.parentElement.classList.remove(\"inRouteBigCountry\");\n    lastClickedCountryTag.classList.remove(\"inRouteBorderBigCountry\");\n    lastClickedCountryTag.parentElement.classList.remove(\"inRoute\");\n    lastClickedCountryTag.classList.remove(\"inRouteBorder\");\n\n   \n  };\n\n\n  function removeLastElementFromRoute(event,firstClickedCountryName){\n        if(distanceRoute.length > 0){\n        const distanceForLastCountryInRoute = distanceRoute[distanceRoute.length - 1];\n\n        distanceRoute.pop();\n        currentRoute.pop();\n        currentRouteTranslated.pop();\n        clickedCountryTags.pop();\n        highlightCountryOff(firstClickedCountryName,event.target)\n\n        if(currentRoute[currentRoute.length - 1] == null){\n            endCountryOfTheRoute.innerHTML = \"\";\n            goodCostInEndCountryValue.innerHTML = 0;\n        } else{\n            currentEndCountryOfTheRoute = currentRoute[currentRoute.length - 1]; \n            endCountryOfTheRoute.innerHTML = selectedLanguage[currentEndCountryOfTheRoute];\n        }\n        calculetedRouteDistance -= distanceForLastCountryInRoute;\n        routeDistanceValue.innerHTML = calculetedRouteDistance;\n        route.innerHTML = currentRouteTranslated;     \n        calculateCostValue();\n    } else{\n        Notify.failure(alreadyAllCountriesDeletedFromRoute());\n    }\n  };\n\n  function highlightCountry(firstClickedCountryName,tagToHighlight){\n    if(bigCountry.includes(firstClickedCountryName)){\n        tagToHighlight.parentElement.classList.add(\"inRouteBigCountry\");\n        tagToHighlight.classList.add(\"inRouteBorderBigCountry\");\n    } else{\n        tagToHighlight.parentElement.classList.add(\"inRoute\");\n        tagToHighlight.classList.add(\"inRouteBorder\");\n    }\n  };\n\n  function highlightCountryOff(firstClickedCountryName,tagToHighlightOff){\n    if(bigCountry.includes(firstClickedCountryName)){\n        tagToHighlightOff.parentElement.classList.remove(\"inRouteBigCountry\");\n        tagToHighlightOff.classList.remove(\"inRouteBorderBigCountry\");\n    } else{\n        tagToHighlightOff.parentElement.classList.remove(\"inRoute\")\n        tagToHighlightOff.classList.remove(\"inRouteBorder\")\n    }\n  };\n\n  function addOptionsToMeanOfTransport(optionValue){\n    // originalNameOfVehicles.set(selectedLanguage[vehicle],vehicle)\n    let selectedGoodOption = document.createElement('option');\n    selectedGoodOption.classList.add('transportModel');\n    selectedGoodOption.value = optionValue;\n\n    selectedGoodOption.innerHTML = optionValue;\n    meanOfTransport.appendChild(selectedGoodOption);\n  };\n  \n\n  meanOfTransport.addEventListener(\"change\",function(){    \n    calculateCostValue();\n  })\n\n  function calculateCostValue(){\n    \n    let mainTransportTypeName;\n    let middleTransportTypeName;\n    if(lastActiveTransportType[1] == \"bus\" || lastActiveTransportType[1] == \"truck\"){\n        mainTransportTypeName = \"vechicles\"\n        middleTransportTypeName = lastActiveTransportType[1];\n    } else if(lastActiveTransportType[1] == \"railway\"){\n            mainTransportTypeName = \"trains\"\n            if(wares.value == selectedLanguage.passengers){\n                middleTransportTypeName = \"passengerTrains\"\n            } else {\n                middleTransportTypeName = \"loadTrains\"\n            }\n\n    }else if(lastActiveTransportType[1] == \"maritime\"){\n        mainTransportTypeName = lastActiveTransportType[1]\n        if(wares.value == selectedLanguage.passengers){\n            middleTransportTypeName = \"passangerShips\"\n        } else {\n            middleTransportTypeName = \"loadShips\"\n        }\n    }\n\n    displayTransportTypeCapacity(mainTransportTypeName,middleTransportTypeName);\n    displayTransportTypeSpeed(mainTransportTypeName,middleTransportTypeName);\n    calculateNeededTransportUnits();\n\n    let selectedTransportTypeCost = meansOfTransportList[dateValue.year][mainTransportTypeName][middleTransportTypeName][meanOfTransport.value].cost;\n    singularCostValue.innerHTML = selectedTransportTypeCost;\n    calculatedCostValue = selectedTransportTypeCost * calculetedRouteDistance * neededTransportUnits;\n    calculatedCostValueTag.innerHTML = calculatedCostValue;\n\n    calculateEarnings();\n    displayEarningPanel();\n\n    setPoperTransportTypeImage();\n  };\n\n  function displayTransportTypeCapacity(mainTransportTypeName,middleTransportTypeName){\n    if(middleTransportTypeName == \"bus\" || middleTransportTypeName == \"passangerShips\" || middleTransportTypeName == \"passengerTrains\"){\n        capacityOfSelectedTransport = meansOfTransportList[dateValue.year][mainTransportTypeName][middleTransportTypeName][meanOfTransport.value].passengers\n        capacityValue.innerHTML = capacityOfSelectedTransport\n    } else {\n        capacityOfSelectedTransport = meansOfTransportList[dateValue.year][mainTransportTypeName][middleTransportTypeName][meanOfTransport.value].payLoad\n        capacityValue.innerHTML = capacityOfSelectedTransport\n    }\n  };\n\n  function displayTransportTypeSpeed(mainTransportTypeName,middleTransportTypeName){\n    speedValueOfSelectedTransport = meansOfTransportList[dateValue.year][mainTransportTypeName][middleTransportTypeName][meanOfTransport.value].speed;\n    speedValue.innerHTML = speedValueOfSelectedTransport\n  };\n\n  function calculateEarnings(){\n   \n    if(!isNaN(howManyToTransportValue.value) && !isNaN(goodPriceInStartedCountry) && !isNaN(goodPriceInEndCountry)){\n    calculatedIncomeValue = (goodPriceInEndCountry - goodPriceInStartedCountry) * howManyToTransportValue.value;\n    incomeValue.innerHTML = calculatedIncomeValue;\n    };\n\n    if(!isNaN(calculatedIncomeValue) && !isNaN(calculatedCostValue)){\n     calculatedProfitValue = calculatedIncomeValue - calculatedCostValue;\n     profitValue.innerHTML = calculatedProfitValue;\n    };\n  };\n\n  function displayEarningPanel(){\n    if(calculatedIncomeValue != null && calculatedIncomeValue != 0){\n        earnings.style.visibility = \"visible\"\n        if(calculatedProfitValue > 0){ //if calculatedProfitValue is bigger than 0 then mark background color on green\n            earnings.classList.remove(\"earningsMinus\");\n            earnings.classList.add(\"earningsPlus\");\n        } else{ //otherwise in red \n            earnings.classList.remove(\"earningsPlus\");\n            earnings.classList.add(\"earningsMinus\");\n        }\n    } else {\n        earnings.style.visibility = \"hidden\"\n    }\n    \n  };\n\n  function calculateNeededTransportUnits(){\n    neededTransportUnits = howManyToTransportValue.value / capacityOfSelectedTransport ;\n    if(Math.ceil(neededTransportUnits) == 0){\n        neededTransportUnits = 1;\n    } else{\n        neededTransportUnits =  Math.ceil(neededTransportUnits);\n    };\n    neccesseryQtyValue.innerHTML = neededTransportUnits;\n  };\n\n  function resetCostsAndEarnings(){\n    calculatedCostValue = 0;\n    calculatedCostValueTag.innerHTML = calculatedCostValue;\n    calculatedProfitValue = 0;\n    profitValue.innerHTML = calculatedProfitValue;\n\n    calculatedIncomeValue = 0;\n    incomeValue.innerHTML = calculatedIncomeValue;\n    displayEarningPanel();\n  };\n\n  function setPoperTransportTypeImage(){\n    let transportTypeValue = transportTypeList.value;\n    console.log(transportTypeValue);\n    if(selectedLanguage[\"bus\"] == transportTypeValue){\n        transportTypeImg.src = \"/bus-icon.04337034.png\"\n        transportTypeData.style.backgroundColor = \"#c34f7f\"\n    } else if(selectedLanguage[\"railway\"] == transportTypeValue){\n        transportTypeImg.src = \"/train-icon.8bd23904.png\"\n        transportTypeData.style.backgroundColor = \"#c40856\"\n    } else if(selectedLanguage[\"truck\"] == transportTypeValue){\n        transportTypeImg.src = \"/truck-icon.57ecb994.png\"\n        transportTypeData.style.backgroundColor = \"#863859\"\n    } else if(selectedLanguage[\"maritime\"] == transportTypeValue){\n        transportTypeImg.src = \"/ship-icon.dfd19004.png\"\n        transportTypeData.style.backgroundColor = \"#6c58da\"\n    }\n  }\n\n\n  /////TODO add logic with passangers\n  /////////TODO add efect rolling on for transport panel\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport {selectedLanguage, refreshObjectsTranslation} from './translations'\nimport {buildRoute,blockageForInfoNotify} from './transportPanel'\n\n\nlet selectedCountryName;\nlet selectedCountry;\nlet specialitiesList = \"\";\nlet pulsingInterval;\n\nlet pauseClicked = false;\nlet firstClickedCountryName;\nexport let clickedCountryName = 'poland'; \nlet smallFlagSrc;\n\nlet clickedPositionY;\nlet clickedPositionX;\nlet controlPanelWidth;\nlet controlPanelHeight;\n\nexport let clickedCreateTransport = false;\nexport let currentRoute = [];\nexport let currentRouteTranslated = [];\nconst route = $(\".route\")[0];\n\nlet timeWatch = document.querySelector(\"#timeWatch\");\nexport let lastClickedCountryTag;\n\nlet pulsingIntervalCounter;\nexport let dateValue = {\n      day: \"1\",\n      month: \"1\",\n      year: \"1935\"\n}\n\nlet time = {\n    hour: 0\n}\n\n// Confirm.init({\n//   width: '350px',\n//   position: 'right-center',\n//   timeout: 3000,\n//   info: {\n//     background: '#2b1675',\n//   },\n// });\n\nNotify.init({\n  width: '350px',\n  position: 'right-bottom',\n  timeout: 5000,\n  plainText: false,\n  showOnlyTheLastOne: true,\n  info: {\n    background: '#2b1675',\n  },\n  failure: {\n    background: '#751b1b'\n}\n});\n\n\n\n    let goods ={\n      main: {\n            1: selectedLanguage.coal,\n            2: selectedLanguage.steel,\n            3: selectedLanguage.aluminium,\n            4: selectedLanguage.copper,\n            5: selectedLanguage.lead,\n            6: selectedLanguage.grain,\n            7: selectedLanguage.oil\n      },\n      additional: {\n        1: selectedLanguage.wine,\n        2: selectedLanguage.fish,\n        3: selectedLanguage.flour,\n        4: selectedLanguage.clothes\n      },\n      specific: {\n        1: selectedLanguage.zinc,\n        2: selectedLanguage.wolfram,\n        3: selectedLanguage.ideas,\n        4: selectedLanguage.mechanicalParts,\n        5: selectedLanguage.chrome,\n        6: selectedLanguage.nickel,\n        7: selectedLanguage.forestGoods\n      }\n    }\n\n    let date = {\n      fontSize: 35,\n      height: 30,\n      \n    }\n\nexport let countries = {\n     norway: {\n      height: 330,\n      width: 290.4,\n      neighbors :{\n        1 : \"sweden\",\n        2 : \"finland\",\n        3 : \"ussr\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      specialities: {\n          1: goods.additional[2]\n        },  \n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 2.9\n      },\n\n       sweden: {\n        height: 427.45,\n        width: 354.8,\n        neighbors :{\n          1 : \"norway\",\n          2 : \"finland\",\n          3 : \"denmark\",\n        },\n        accessToWaterReservoirs : true,\n        balticSea: true,\n        blackSea: false,\n        otherSea: true,\n        specialities: {\n            1: goods.specific[2],\n            2: goods.main[4],\n            3: goods.main[2]\n          },  \n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5,\n            chrome : 1,\n            nickel: 2,\n            forestGoods: 50\n          },\n          population: 6.2\n        },\n\n       finland: {\n          height: 257.1,\n          width: 275,\n          neighbors :{\n            1 : \"norway\",\n            2 : \"sweden\",\n            3 : \"ussr\",\n          },\n          accessToWaterReservoirs : true,\n          balticSea: true,\n          blackSea: false,\n          otherSea: false,\n          specialities: {\n              1: goods.specific[6],\n              2: goods.additional[2]\n            },  \n            goodCosts: {\n              coal: 30,\n              steel: 70,\n              aluminium: 80,\n              copper: 60,\n              lead: 50,\n              grain: 5,\n              oil: 100,\n              wine: 35,\n              fish: 5,\n              flour: 10,\n              clothes: 20,\n              zinc: 75,\n              wolfram: 100,\n              mechanicalParts: 150,\n              chrome : 5,\n              nickel: 3,\n              forestGoods: 20\n            },\n            goodsAvailability: {\n              coal: 100,\n              steel: 80,\n              aluminium: 50,\n              copper: 120,\n              lead: 80,\n              grain: 1000,\n              oil: 300,\n              wine: 50,\n              fish: 70,\n              flour: 80,\n              clothes: 90,\n              zinc: 15,\n              wolfram: 40,\n              mechanicalParts: 5,\n              chrome : 1,\n              nickel: 2,\n              forestGoods: 50\n            },\n            population: 3.5\n          },\n\n          latvia: {\n            height: 86.1,\n            width: 170,\n            neighbors :{\n              1 : \"estonia\",\n              2 : \"ussr\",\n              3 : \"poland\",\n              4 : \"lithuania\",\n            },\n            accessToWaterReservoirs : true,\n            balticSea: true,\n            blackSea: false,\n            otherSea: false,\n            specialities: {\n                1: goods.specific[7]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150,\n                chrome : 5,\n                nickel: 3,\n                forestGoods: 20\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5,\n                chrome : 1,\n                nickel: 2,\n                forestGoods: 50\n              },\n              population: 1.9\n            },\n\n            estonia: {\n              height: 82.5,\n              width: 150,\n              neighbors :{\n                1 : \"latvia\",\n                2 : \"ussr\"\n              },\n              accessToWaterReservoirs : true,\n              balticSea: true,\n              blackSea: false,\n              otherSea: false,\n              specialities: {\n                1: goods.additional[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5,\n                  chrome : 1,\n                  nickel: 2,\n                  forestGoods: 50\n                },\n                population: 1.1\n              },\n\n              romania: {\n                height: 178.75,\n                width: 250,\n                neighbors :{\n                  1 : \"czechoslovakia\",\n                  2 : \"ussr\",\n                  3 : \"poland\",\n                  4 : \"hungary\",\n                  5 : \"yugoslavia\",\n                  6 : \"bulgaria\"\n                },\n                accessToWaterReservoirs : true,\n                balticSea: false,\n                blackSea: true,\n                otherSea: false,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5,\n                    chrome : 1,\n                    nickel: 2,\n                    forestGoods: 50\n                  },\n                  population: 15\n                }\n\n                , hungary: {\n                  height: 96,\n                  width: 160,\n                  neighbors :{\n                    1 : \"czechoslovakia\",\n                    2 : \"austria\",\n                    3 : \"romania\",\n                    4 : \"yugoslavia\"\n                  },\n                  accessToWaterReservoirs : false,\n                  balticSea: false,\n                  blackSea: false,\n                  otherSea: false,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150,\n                      chrome : 5,\n                      nickel: 3,\n                      forestGoods: 20\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5,\n                      chrome : 1,\n                      nickel: 2,\n                      forestGoods: 50\n                    },\n                    population: 8.9\n                  }\n\n          , turkey: {\n          height: 188.9,\n          width: 385,\n          neighbors :{\n            1 : \"ussr\",\n            2 : \"bulgaria\",\n            3 : \"greece\"\n          },\n          accessToWaterReservoirs : true,\n          balticSea: false,\n          blackSea: true,\n          otherSea: true,\n          specialities: {\n              1: goods.specific[2],\n              2: goods.specific[3],\n              3: goods.main[2]\n            },  \n            goodCosts: {\n              coal: 30,\n              steel: 70,\n              aluminium: 80,\n              copper: 60,\n              lead: 50,\n              grain: 5,\n              oil: 100,\n              wine: 35,\n              fish: 5,\n              flour: 10,\n              clothes: 20,\n              zinc: 75,\n              wolfram: 100,\n              mechanicalParts: 150,\n              chrome : 5,\n              nickel: 3,\n              forestGoods: 20\n            },\n            goodsAvailability: {\n              coal: 100,\n              steel: 80,\n              aluminium: 50,\n              copper: 120,\n              lead: 80,\n              grain: 1000,\n              oil: 300,\n              wine: 50,\n              fish: 70,\n              flour: 80,\n              clothes: 90,\n              zinc: 15,\n              wolfram: 40,\n              mechanicalParts: 5,\n              chrome : 1,\n              nickel: 2,\n              forestGoods: 50\n            },\n            population: 16.2\n          }\n\n\n          , yugoslavia: {\n            height: 184.8,\n            width: 220,\n            neighbors :{\n              1 : \"italy\",\n              2 : \"austria\",\n              3 : \"greece\",\n              4 : \"hungary\",\n              5 : \"romania\",\n              6 : \"bulgaria\",\n              7 : \"albania\"\n            },\n            accessToWaterReservoirs : true,\n            balticSea: false,\n            blackSea: false,\n            otherSea: true,\n            specialities: {\n                1: goods.specific[2],\n                2: goods.specific[3],\n                3: goods.main[2]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150,\n                chrome : 5,\n                nickel: 3,\n                forestGoods: 20\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5,\n                chrome : 1,\n                nickel: 2,\n                forestGoods: 50\n              },\n              population: 14\n            }\n\n            , greece: {\n              height: 230 ,\n              width: 220,\n              neighbors :{\n                1 : \"turkey\",\n                2 : \"yugoslavia\",\n                3 : \"bulgaria\",\n                4 : \"albania\"\n              },\n              specialities: {\n                  1: goods.specific[2],\n                  2: goods.specific[3],\n                  3: goods.main[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5,\n                  chrome : 1,\n                  nickel: 2,\n                  forestGoods: 50\n                },\n                population: 6.8\n              }\n\n              , italy: {\n                height: 330,\n                width: 290.4,\n                neighbors :{\n                  1 : \"france\",\n                  2 : \"switzerland\",\n                  3 : \"austria\",\n                  4 : \"yugoslavia\"\n                },\n                accessToWaterReservoirs : true,\n                balticSea: false,\n                blackSea: false,\n                otherSea: true,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5,\n                    chrome : 1,\n                    nickel: 2,\n                    forestGoods: 50\n                  },\n                  population: 42\n                }\n\n          , spain: {\n              height: 263,\n              width: 311 ,\n              neighbors :{\n                1 : \"france\",\n                2 : \"portugal\"\n              },\n              accessToWaterReservoirs : true,\n              balticSea: false,\n              blackSea: false,\n              otherSea: true,\n              specialities: {\n                  1: goods.specific[2],\n                  2: goods.specific[3],\n                  3: goods.main[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5,\n                  chrome : 1,\n                  nickel: 2,\n                  forestGoods: 50\n                },\n                population: 24\n              }\n\n              , portugal: {\n                height: 155,\n                width: 83.7,\n                neighbors :{\n                  1 : \"spain\"\n                },\n                accessToWaterReservoirs : true,\n                balticSea: false,\n                blackSea: false,\n                otherSea: true,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5,\n                    chrome : 1,\n                    nickel: 2,\n                    forestGoods: 50\n                  },\n                  population: 7.1\n                }\n\n                , bulgaria: {\n                  height: 114.7,\n                  width: 155,\n                  neighbors :{\n                    1 : \"turkey\",\n                    2 : \"romania\",\n                    3 : \"greece\",\n                    4 : \"yugoslavia\"\n                  },\n                  accessToWaterReservoirs : true,\n                  balticSea: false,\n                  blackSea: true,\n                  otherSea: false,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150,\n                      chrome : 5,\n                      nickel: 3,\n                      forestGoods: 20\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5,\n                      chrome : 1,\n                      nickel: 2,\n                      forestGoods: 50\n                    },\n                    population: 6.3\n                  }\n\n   , ussr: {\n    height: 830,\n    width: 398,\n    neighbors :{\n      1 : \"finland\",\n      2 : \"estonia\",\n      3 : \"latvia\",\n      4 : \"poland\",\n      5 : \"romania\",\n      6 : \"turkey\",\n      7 : \"norway\"\n    },\n    accessToWaterReservoirs : true,\n    balticSea: true,\n    blackSea: true,\n    otherSea: false,\n    specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.specific[3],\n        4: goods.main[7]\n      },  \n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150,\n        chrome : 5,\n        nickel: 3,\n        forestGoods: 20\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5,\n        chrome : 1,\n        nickel: 2,\n        forestGoods: 50\n      },\n      population: 159\n    }\n\n    , germany: {\n      height:  260.4,\n      width: 420 ,\n      neighbors :{\n        1 : \"denmark\",\n        2 : \"netherland\",\n        3 : \"belgium\",\n        4 : \"france\",\n        5 : \"switzerland\",\n        6 : \"austria\",\n        7 : \"czechoslovakia\",\n        8 : \"poland\",\n        9 : \"lithuania\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: true,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.specific[3]\n      },\n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150,\n        chrome : 5,\n        nickel: 3,\n        forestGoods: 20\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5,\n        chrome : 1,\n        nickel: 2,\n        forestGoods: 50\n      },\n      population: 74\n    }\n\n   , lithuania: {\n    height: 101, \n    width: 134, \n    neighbors :{\n      1 : \"latvia\",\n      2 : \"germany\",\n      3 : \"poland\"\n    },\n    accessToWaterReservoirs : true,\n    balticSea: true,\n    blackSea: false,\n    otherSea: false,\n    specialities: {\n      1: goods.main[6],\n      2: goods.main[7],\n      3: goods.additional[3]\n      },\n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150,\n        chrome : 5,\n        nickel: 3,\n        forestGoods: 20\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5,\n        chrome : 1,\n        nickel: 2,\n        forestGoods: 50\n      },\n      population: 2\n    }\n\n    , poland: {\n      height: 298,\n      width: 286,\n      neighbors :{\n        1 : \"latvia\",\n        2 : \"germany\",\n        3 : \"lithuania\",\n        4 : \"czechoslovakia\",\n        5 : \"ussr\",\n        6 : \"romania\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: true,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.main[6],\n        2: goods.main[7],\n        3: goods.additional[3]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 30\n      }\n\n    , czechoslovakia: {\n      height: 105.9,\n      width: 325,\n      neighbors :{\n        1 : \"poland\",\n        2 : \"germany\",\n        3 : \"austria\",\n        4 : \"hungary\",\n        5 : \"romania\"\n      },\n      accessToWaterReservoirs : false,\n      balticSea: false,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.main[2],\n        2: goods.main[4],\n        3: goods.specific[4]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 13\n    }\n\n    , greatBritain: {\n      height: 400,\n      width: 286,\n      neighbors :{\n        1 : \"ireland\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.additional[2],\n        4: goods.specific[1]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 180,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n      population: 47\n    }\n\n    , austria: {\n      height: 79.2,\n      width: 180,\n      neighbors :{\n        1 : \"germany\",\n        2 : \"switzerland\",\n        3 : \"hungary\",\n        4 : \"yugoslavia\",\n        5 : \"czechoslovakia\",\n        6 : \"italy\"\n      },\n      accessToWaterReservoirs : false,\n      balticSea: false,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.additional[3]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 6.8\n    }\n\n    , france: {\n      height: 365,\n      width: 324.8,\n      neighbors :{\n        1 : \"germany\",\n        2 : \"switzerland\",\n        3 : \"belgium\",\n        4 : \"spain\",\n        5 : \"italy\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.main[5],\n        4: goods.additional[1]\n        },\n        goodCosts: {\n          coal: 35,\n          steel: 75,\n          aluminium: 85,\n          copper: 65,\n          lead: 53,\n          grain: 3,\n          oil: 120,\n          wine: 20,\n          fish: 7,\n          flour: 12,\n          clothes: 18,\n          zinc: 78,\n          wolfram: 150,\n          mechanicalParts: 177,\n          chrome : 550,\n          nickel: 333,\n          forestGoods: 22\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 42\n    }\n\n    , denmark: {\n      height: 110,\n      width: 105.6,\n      neighbors :{\n        1 : \"germany\",\n        2 : \"sweden\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: true,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 3.7\n    }\n\n    ,iceland: {\n      height: 123.5,\n      width: 260,\n      neighbors :{\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 0.5\n    }\n\n    , belgium: {\n      height: 78.7,\n      width: 100,\n      neighbors :{\n        1 : \"netherland\",\n        2 : \"france\",\n        3 : \"germany\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 8.3\n    }\n\n    , netherland: {\n      height: 100,\n      width: 89,\n      neighbors :{\n        1 : \"belgium\",\n        2 : \"germany\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 8.3\n    }\n\n    , albania: {\n      height: 80,\n      width: 45.6,\n      neighbors :{\n        1 : \"yugoslavia\",\n        2 : \"greece\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1\n    }\n\n    , switzerland: {\n      height: 54,\n      width: 100,\n      neighbors :{\n        1 : \"germany\",\n        2 : \"france\",\n        3 : \"italy\",\n        4 : \"austria\"\n      },\n      accessToWaterReservoirs : false,\n      balticSea: false,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 4.1\n    }\n\n    ,sicily: {\n      height: 54.2,\n      width: 80,\n      neighbors :{\n        1 : \"italy\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 4\n    }\n\n    ,sardynia: {\n      height: 80,\n      width: 53.6,\n      neighbors :{\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1\n    }\n\n    ,corsica: {\n      height: 55,\n      width: 34.65,\n      neighbors :{\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 0.2\n    }\n\n    ,algieria: {\n      height: 95.2,\n      width: 280,\n      neighbors :{\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 7\n    }\n\n \n    ,irelandNorth: {\n      height: 50.4,\n      width: 70,\n      neighbors :{\n        1 : \"ireland\",\n        2 : \"greatBritain\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1.3\n    }\n\n    ,ireland: {\n      height: 155,\n      width: 139.5,\n      neighbors :{\n        1 : \"greatBritain\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 3\n    }\n\n    ,easternPrussia: {\n      height: 81.5,\n      width: 100 ,\n      neighbors :{\n        1 : \"poland\",\n        2 : \"lithuania\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: true,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 2.5\n    }\n  }\n\n    const polishMapLocation = $(\".polishMapLocation\")[0];\n    let polishMap = document.querySelector(\".polishMap\");\n\n    const lithuanianMapLocation = $(\".lithuanianMapLocation\")[0];\n    let lithuaniaMap = document.querySelector(\".lithuaniaMap\");\n\n    const ussrMapLocation = $(\".ussrMapLocation\")[0];\n    let ussrMap = document.querySelector(\".ussrMap\");\n\n    const czechoslovakiaMapLocation = $(\".czechoslovakiaMapLocation\")[0];\n    let czechoslovakiaMap = document.querySelector(\".czechoslovakiaMap\");\n\n    const austriaMapLocation = $(\".austriaMapLocation\")[0];\n    let austriaMap = document.querySelector(\".austriaMap\");\n\n    const germanyMapLocation = $(\".germanyMapLocation\")[0];\n    let germanyMap = document.querySelector(\".germanyMap\");\n\n    const easternPrussiaMapLocation = $(\".easternPrussiaMapLocation\")[0];\n    let easternPrussiaMap = document.querySelector(\".easternPrussiaMap\");\n\n    const franceMapLocation = $(\".franceMapLocation\")[0];\n    let franceMap = document.querySelector(\".franceMap\");\n\n    const greatBritainMapLocation = $(\".greatBritainMapLocation\")[0];\n    let greatBritainMap = document.querySelector(\".greatBritainMap\");\n\n    const norwayMapLocation = $(\".norwayMapLocation\")[0];\n    let norwayMap = document.querySelector(\".norwayMap\");\n\n    const swedenMapLocation = $(\".swedenMapLocation\")[0];\n    let swedenMap = document.querySelector(\".swedenMap\");\n\n    const finlandMapLocation = $(\".finlandMapLocation\")[0];\n    let finlandMap = document.querySelector(\".finlandMap\");\n\n    const estoniaMapLocation = $(\".estoniaMapLocation\")[0];\n    let estoniaMap = document.querySelector(\".estoniaMap\");\n\n    const latviaMapLocation = $(\".latviaMapLocation\")[0];\n    let latviaMap = document.querySelector(\".latviaMap\");\n\n    const denmarkMapLocation = $(\".denmarkMapLocation\")[0];\n    let denmarkMap = document.querySelector(\".denmarkMap\");\n\n    const icelandMapLocation = $(\".icelandMapLocation\")[0];\n    let icelandMap = document.querySelector(\".icelandMap\");\n\n    const belgiumMapLocation = $(\".belgiumMapLocation\")[0];\n    let belgiumMap = document.querySelector(\".belgiumMap\");\n\n    const netherlandMapLocation = $(\".netherlandMapLocation\")[0];\n    let netherlandMap = document.querySelector(\".netherlandMap\");\n\n    const hungaryMapLocation = $(\".hungaryMapLocation\")[0];\n    let hungaryMap = $(\".hungaryMap\")[0];\n\n    const romaniaMapLocation = $(\".romaniaMapLocation\")[0];\n    let romaniaMap = document.querySelector(\".romaniaMap\");\n\n    const bulgariaMapLocation = $(\".bulgariaMapLocation\")[0];\n    let bulgariaMap = document.querySelector(\".bulgariaMap\");\n\n    const yugoslaviaMapLocation = $(\".yugoslaviaMapLocation\")[0];\n    let yugoslaviaMap = document.querySelector(\".yugoslaviaMap\");\n\n    const albaniaMapLocation = $(\".albaniaMapLocation\")[0];\n    let albaniaMap = document.querySelector(\".albaniaMap\");\n\n    const greeceMapLocation = $(\".greeceMapLocation\")[0];\n    let greeceMap = document.querySelector(\".greeceMap\");\n\n    const turkeyMapLocation = $(\".turkeyMapLocation\")[0];\n    let turkeyMap = document.querySelector(\".turkeyMap\");\n\n    const italyMapLocation = $(\".italyMapLocation\")[0];\n    let italyMap = document.querySelector(\".italyMap\");\n\n    const sicilyMapLocation = $(\".sicilyMapLocation\")[0];\n    let sicilyMap = document.querySelector(\".sicilyMap\");\n\n    const sardyniaMapLocation = $(\".sardyniaMapLocation\")[0];\n    let sardyniaMap = document.querySelector(\".sardyniaMap\");\n\n    const corsicaMapLocation = $(\".corsicaMapLocation\")[0];\n    let corsicaMap = document.querySelector(\".corsicaMap\");\n\n    const algieriaMapLocation = $(\".algieriaMapLocation\")[0];\n    let algieriaMap = document.querySelector(\".algieriaMap\");\n\n    const switzerlandMapLocation = $(\".switzerlandMapLocation\")[0];\n    let switzerlandMap = document.querySelector(\".switzerlandMap\");\n\n    const spainMapLocation = $(\".spainMapLocation\")[0];\n    let spainMap = document.querySelector(\".spainMap\");\n\n    const portugalMapLocation = $(\".portugalMapLocation\")[0];\n    let portugalMap = document.querySelector(\".portugalMap\");\n\n    const irelandNorthMapLocation = $(\".irelandNorthMapLocation\")[0];\n    let irelandNorthMap = document.querySelector(\".irelandNorthMap\");\n\n    const irelandMapLocation = $(\".irelandMapLocation\")[0];\n    let irelandMap = document.querySelector(\".irelandMap\");\n    \n    const dateValueOnMap = document.querySelector(\".dateValue\");\n    const dateOnMap = document.querySelector(\".date\");\n    \n    let resolutionBodyX = window.screen.width\n    let resolutionBodyY = window.screen.height\n    let resolution = $(\"#mainNav\").width();\n    let factor;\n\n    let italyTerritories = [\"Italy\",\"Sardynia\",\"Sicily\"];\n    let franceTerritories = [\"France\",\"Algieria\",\"Corsica\"];\n    let denmarkTerritories = [\"Denmark\",\"Iceland\"];\n    let greatBritainTerritories = [\"GB\",\"IrelandNorth\"];\n    let irishTerritories = [\"Ireland\"];\n    let germanyTerritories = [\"Germany\",\"EasternPrussia\"];\n\n    calculateResoluctionFactor(resolution)\n    recalculateCountriesPositionsBasedOnResolution(factor)\n\n    window.addEventListener(\"resize\",function(){\n      resolution = $(\"#mainNav\").width();\n      calculateResoluctionFactor(resolution)\n      recalculateCountriesPositionsBasedOnResolution(factor)\n    })\n\n    ////Portugal\n    portugalMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"portugal\"\n      smallFlagSrc = \"/Portugal-icon.7b1944da.png\"\n        if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n    portugalMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"portugal\";\n          countrySpecialities(selectedCountryName)\n      });\n\n    ////Spain\n    spainMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"spain\"\n      smallFlagSrc = \"/Spain-icon.36bb6066.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n    spainMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"spain\";\n          countrySpecialities(selectedCountryName)\n      });\n    \n    ////Poland\n    polishMap.addEventListener(\"click\", \n    function(){ \n        // alert(\"You chosen Poland, good move!\"); \n        firstClickedCountryName = \"poland\"\n        smallFlagSrc = \"/Poland-icon.532b2fd1.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n      }\n    );\n    polishMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"poland\";\n          countrySpecialities(selectedCountryName)\n      });\n\n          ////Norway\n    norwayMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"norway\"\n      smallFlagSrc = \"/Norway-icon.4a8c8a5e.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n    norwayMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"norway\";\n          countrySpecialities(selectedCountryName)\n      });\n\n      ////Sweden\n    swedenMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"sweden\"\n      smallFlagSrc = \"/Sweden-icon.da710607.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n    swedenMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"sweden\";\n          countrySpecialities(selectedCountryName)\n      });\n\n      ////Finland\n      finlandMap.addEventListener(\"click\", \n      function(){ \n        firstClickedCountryName = \"finland\"\n        smallFlagSrc = \"/Finland-icon.779ab3d0.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n        }\n      );\n\n      finlandMap.addEventListener(\"mouseover\", \n      function(){ \n            selectedCountryName = \"finland\";\n            countrySpecialities(selectedCountryName)\n        });\n\n      ////Latvia\n      latviaMap.addEventListener(\"click\", \n      function(){ \n        firstClickedCountryName = \"latvia\"\n        smallFlagSrc = \"/Latvia-Flag-icon.1009b424.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n        }\n      );\n\n      latviaMap.addEventListener(\"mouseover\", \n      function(){ \n            selectedCountryName = \"latvia\";\n            countrySpecialities(selectedCountryName)\n        });\n\n      ////Estonia\n      estoniaMap.addEventListener(\"click\", \n      function(){ \n        firstClickedCountryName = \"estonia\"\n        smallFlagSrc = \"/Estonia-icon.039201d6.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n        }\n      );\n\n      estoniaMap.addEventListener(\"mouseover\", \n      function(){ \n            selectedCountryName = \"estonia\";\n            countrySpecialities(selectedCountryName)\n        });\n      \n\n    ////Germany\n    germanyMap.addEventListener(\"click\", \n    function(){ \n      // alert(\"You chosen Germany, bad move!\"); \n      firstClickedCountryName = \"germany\"\n      smallFlagSrc = \"/German-Reich-icon.d05c90e8.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n\n    germanyMap.addEventListener(\"mouseover\", \n    function(){ \n          checkGermanTerritoriesMouseover();\n          selectedCountryName = \"germany\";\n          countrySpecialities(selectedCountryName);\n      });\n\n      germanyMap.addEventListener(\"mouseout\", \n      function(){ \n            checkGermanTerritoriesMouseout();\n        });\n\n////EasternPrussia\n    easternPrussiaMap.addEventListener(\"click\", \n    function(){ \n      if(germanyTerritories.includes(\"EasternPrussia\")){\n        firstClickedCountryName = \"germany\"\n        smallFlagSrc = \"/German-Reich-icon.d05c90e8.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n      } else{\n        firstClickedCountryName = \"easternPrussia\"\n        smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n      }\n  }\n    );\n\n    easternPrussiaMap.addEventListener(\"mouseover\", \n    function(){ \n      if(germanyTerritories.includes(\"EasternPrussia\")){\n          checkGermanTerritoriesMouseover();\n          selectedCountryName = \"germany\";\n          countrySpecialities(selectedCountryName);\n        } else {\n          $(easternPrussiaMap).addClass(\"mediumMapOnYellow\");\n          selectedCountryName = \"easternPrussia\";\n          countrySpecialities(selectedCountryName);\n        }\n      });\n\n      easternPrussiaMap.addEventListener(\"mouseout\", \n      function(){ \n        if(germanyTerritories.includes(\"EasternPrussia\")){\n            checkGermanTerritoriesMouseout();\n        } else{\n          $(easternPrussiaMap).removeClass(\"mediumMapOnYellow\");\n        }\n        });\n\n\n    ////USSR\n    ussrMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"ussr\"\n      smallFlagSrc = \"/ussr.2fdc3809.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n     }\n    );\n\n    ussrMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"ussr\";\n      countrySpecialities(selectedCountryName)\n      });\n\n\n    ///Czechoslovakia\n    czechoslovakiaMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"czechoslovakia\"\n      smallFlagSrc = \"/Czech-Republic-icon.7f214b3b.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n    }\n    );\n\n    czechoslovakiaMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"czechoslovakia\";\n          countrySpecialities(selectedCountryName)\n    \n      });\n\n    ////Austria\n    austriaMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"austria\"\n      smallFlagSrc = \"/Austria-icon.41c64192.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n    }\n    );\n\n    austriaMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"austria\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    ////France\n    franceMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"france\"\n      smallFlagSrc = \"/France-icon.2690ec9f.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n    });\n\n    franceMap.addEventListener(\"mouseover\", \n    function(){ \n      checkFrenchTerritoriesMouseover();\n      selectedCountryName = \"france\";\n      countrySpecialities(selectedCountryName)\n      });\n\n      franceMap.addEventListener(\"mouseout\", \n      function(){ \n        checkFrenchTerritoriesMouseout();\n        });\n\n    ////Lithuania\n    lithuaniaMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"lithuania\"\n      smallFlagSrc = \"/Lithuania-icon.4c393325.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n    });\n\n    lithuaniaMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"lithuania\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    ////Denmark\n    denmarkMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"denmark\"\n      smallFlagSrc = \"/Denmark-icon.5e272e41.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        } \n    });\n\n    denmarkMap.addEventListener(\"mouseover\", \n    function(){ \n      checkDannishTerritoriesMouseover();\n      selectedCountryName = \"denmark\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    denmarkMap.addEventListener(\"mouseout\", \n    function(){ \n      checkDannishTerritoriesMouseout();\n      });\n   \n\n ////Iceland\n icelandMap.addEventListener(\"click\", \n function(){ \n  if(denmarkTerritories.includes(\"Iceland\")){\n    firstClickedCountryName = \"denmark\"\n    smallFlagSrc = \"/Denmark-icon.5e272e41.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else {\n    firstClickedCountryName = \"iceland\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\n icelandMap.addEventListener(\"mouseover\", \n function(){ \n  if(denmarkTerritories.includes(\"Iceland\")){\n  checkDannishTerritoriesMouseover();\n   selectedCountryName = \"denmark\";\n  } else{\n    $(icelandMap).addClass(\"mediumMapOnYellow\");\n    selectedCountryName = \"iceland\";\n  }\n   countrySpecialities(selectedCountryName)\n   });\n\n   icelandMap.addEventListener(\"mouseout\", \n   function(){ \n    if(denmarkTerritories.includes(\"Iceland\")){\n      checkDannishTerritoriesMouseout();;\n      } else{\n        $(icelandMap).removeClass(\"mediumMapOnYellow\");\n      }\n      \n     });\n\n ////Belgium - benelux\n belgiumMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"belgium\"\n  smallFlagSrc = \"/Belgium-icon.b3905659.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n}\n );\n\n belgiumMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"belgium\";\n   countrySpecialities(selectedCountryName)\n   });\n\n    ////Netherland - benelux\n netherlandMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"netherland\"\n  smallFlagSrc = \"/Netherlands-icon.f7101548.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\n netherlandMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"netherland\";\n   countrySpecialities(selectedCountryName)\n   });\n\n  ////Hungary \n hungaryMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"hungary\"\n  smallFlagSrc = \"/Hungary-icon.c113b3fb.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n });\n\n hungaryMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"hungary\";\n   countrySpecialities(selectedCountryName)\n   });\n\n ////Romania \n romaniaMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"romania\"\n  smallFlagSrc = \"/Romania-icon.0e037d14.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\n romaniaMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"romania\";\n   countrySpecialities(selectedCountryName)\n   });\n\n ////Bulgaria \n bulgariaMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"bulgaria\"\n  smallFlagSrc = \"/Bulgaria-icon.3b362cd7.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    } \n});\n\n bulgariaMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"bulgaria\";\n   countrySpecialities(selectedCountryName)\n   });\n\n////Yugoslavia \n yugoslaviaMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"yugoslavia\"\n  smallFlagSrc = \"/Yugoslavia-Flag-icon.40aaaf55.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    } \n});\n\n yugoslaviaMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"yugoslavia\";\n   countrySpecialities(selectedCountryName)\n});\n\n////Albania \nalbaniaMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"albania\"\n  smallFlagSrc = \"/Albania-Flag-icon.d5ddd13c.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    } \n});\n\nalbaniaMap.addEventListener(\"mouseover\", \nfunction(){ \n  selectedCountryName = \"albania\";\n  countrySpecialities(selectedCountryName)\n});\n\n////Greece \ngreeceMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"greece\"\n  smallFlagSrc = \"/Greece-icon.cfb72f5d.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\ngreeceMap.addEventListener(\"mouseover\", \nfunction(){ \n  selectedCountryName = \"greece\";\n  countrySpecialities(selectedCountryName)\n});\n\n////Turkey \nturkeyMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"turkey\"\n  smallFlagSrc = \"/Turkey-icon.722b7d32.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\nturkeyMap.addEventListener(\"mouseover\", \nfunction(){ \n  selectedCountryName = \"turkey\";\n  countrySpecialities(selectedCountryName)\n});\n\n////Italy \nitalyMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"italy\"\n  smallFlagSrc = \"/Italy-icon.a50e5bdf.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\nitalyMap.addEventListener(\"mouseover\", \nfunction(){ \n  checkItalianTerritoriesMouseover();\n  selectedCountryName = \"italy\";\n  countrySpecialities(selectedCountryName)\n});\n\nitalyMap.addEventListener(\"mouseout\", \nfunction(){ \n  checkItalianTerritoriesMouseout();\n});\n\n////Sicily \nsicilyMap.addEventListener(\"click\", \nfunction(){ \n  if(italyTerritories.includes(\"Sicily\")){\n    firstClickedCountryName = \"italy\"\n    smallFlagSrc = \"/Italy-icon.a50e5bdf.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else {\n    firstClickedCountryName = \"sicily\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\nsicilyMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(italyTerritories.includes(\"Sicily\")){\n  checkItalianTerritoriesMouseover();\n  selectedCountryName = \"italy\";\n} else {\n  $(sicilyMap).addClass(\"smallMapOnViolet\");\n  selectedCountryName = \"sicily\";\n}\n  countrySpecialities(selectedCountryName)\n});\n\nsicilyMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(italyTerritories.includes(\"Sicily\")){\n    checkItalianTerritoriesMouseout();\n  } else {\n    $(sicilyMap).removeClass(\"smallMapOnViolet\");\n  }\n  \n});\n\n////Sardynia \nsardyniaMap.addEventListener(\"click\", \nfunction(){\n  if(italyTerritories.includes(\"Sardynia\")){\n    firstClickedCountryName = \"italy\"\n    smallFlagSrc = \"/Italy-icon.a50e5bdf.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else {\n    firstClickedCountryName = \"sardynia\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\nsardyniaMap.addEventListener(\"mouseover\", \nfunction(){ \n    if(italyTerritories.includes(\"Sardynia\")){\n    checkItalianTerritoriesMouseover();\n    selectedCountryName = \"italy\";\n    countrySpecialities(selectedCountryName)\n  } else {\n    $(sardyniaMap).addClass(\"smallMapOnViolet\");\n    selectedCountryName = \"sardynia\";\n    countrySpecialities(selectedCountryName)\n  }\n});\n\nsardyniaMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(italyTerritories.includes(\"Sardynia\")){\n  checkItalianTerritoriesMouseout();\n  } else {\n    $(sardyniaMap).removeClass(\"smallMapOnViolet\");\n  }\n});\n\n////Corsica \ncorsicaMap.addEventListener(\"click\", \nfunction(){ \n  if(franceTerritories.includes(\"Corsica\")){\n    firstClickedCountryName = \"france\"\n    smallFlagSrc = \"/France-icon.2690ec9f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      } \n  } else {\n    firstClickedCountryName = \"corsica\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\ncorsicaMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(franceTerritories.includes(\"Corsica\")){\n    checkFrenchTerritoriesMouseover();\n    selectedCountryName = \"france\";\n    countrySpecialities(selectedCountryName)\n  } else{\n    $(corsicaMap).addClass(\"smallMapOnYellow\");\n    selectedCountryName = \"corsica\";\n    countrySpecialities(selectedCountryName)\n  }\n\n});\n\n\ncorsicaMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(franceTerritories.includes(\"Corsica\")){\n    checkFrenchTerritoriesMouseout();\n  } else {\n    $(corsicaMap).removeClass(\"smallMapOnYellow\");\n  }\n});\n\n////Algieria \nalgieriaMap.addEventListener(\"click\", \nfunction(){ \n  if(franceTerritories.includes(\"Algieria\")){\n    firstClickedCountryName = \"france\"\n    smallFlagSrc = \"/France-icon.2690ec9f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else {\n    firstClickedCountryName = \"algieria\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n\n});\n\nalgieriaMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(franceTerritories.includes(\"Algieria\")){\n    checkFrenchTerritoriesMouseover();\n    selectedCountryName = \"france\";\n    countrySpecialities(selectedCountryName)\n  } else {\n    $(algieriaMap).addClass(\"smallMapOnYellow\");\n    selectedCountryName = \"algieria\";\n    countrySpecialities(selectedCountryName)\n  }\n  \n});\n\nalgieriaMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(franceTerritories.includes(\"Algieria\")){\n  checkFrenchTerritoriesMouseout();\n  } else {\n    $(algieriaMap).removeClass(\"smallMapOnYellow\");\n  }\n});\n\n///Switzerland\nswitzerlandMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"switzerland\"\n  smallFlagSrc = \"/Switzerland-Flag-icon.791820a4.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\nswitzerlandMap.addEventListener(\"mouseover\", \nfunction(){ \n  selectedCountryName = \"switzerland\";\n  countrySpecialities(selectedCountryName)\n});\n\n\n      \n\n  ////GB\ngreatBritainMap.addEventListener(\"click\", \n  function(){ \n    firstClickedCountryName = \"greatBritain\"\n    smallFlagSrc = \"/United-Kingdom-icon.9151695f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  });\n\n  greatBritainMap.addEventListener(\"mouseover\", \n  function(){ \n  checkBritishTerritoriesMouseover();\n  selectedCountryName = \"greatBritain\";\n  countrySpecialities(selectedCountryName)\n  });\n\n  greatBritainMap.addEventListener(\"mouseout\", \n  function(){ \n    checkBritishTerritoriesMouseout();\n});\n\n//Ireland\nirelandMap.addEventListener(\"click\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"Ireland\")){\n    firstClickedCountryName = \"greatBritain\"\n    smallFlagSrc = \"/United-Kingdom-icon.9151695f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else{\n    firstClickedCountryName = \"ireland\"\n    smallFlagSrc = \"/Ireland-icon.c30a36d6.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\nirelandMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"Ireland\")){\n    checkBritishTerritoriesMouseover();\n    selectedCountryName = \"greatBritain\";\n    countrySpecialities(selectedCountryName)\n  } else {\n    $(irelandMap).addClass(\"bigMapOnViolet\");\n    selectedCountryName = \"ireland\";\n    countrySpecialities(selectedCountryName)\n  } \n});\n\nirelandMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"Ireland\")){\n  checkBritishTerritoriesMouseout();\n  } else {\n    $(irelandMap).removeClass(\"bigMapOnViolet\");\n  }\n});\n\n\n//Northern Ireland\nirelandNorthMap.addEventListener(\"click\", \nfunction(){\n  \n  if(greatBritainTerritories.includes(\"IrelandNorth\")){\n    firstClickedCountryName = \"greatBritain\"\n    smallFlagSrc = \"/United-Kingdom-icon.9151695f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else{\n    firstClickedCountryName = \"irelandNorth\"\n    smallFlagSrc = \"/Ulster-icon.653d30c0.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n\n });\n\nirelandNorthMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"IrelandNorth\")){\n    checkBritishTerritoriesMouseover();\n    selectedCountryName = \"greatBritain\";\n    countrySpecialities(selectedCountryName)\n  } else if(irishTerritories.includes(\"IrelandNorth\")){\n    selectedCountryName = \"ireland\";\n  } else{\n    $(irelandNorthMap).addClass(\"smallMapOnYellow\");\n    selectedCountryName = \"irelandNorth\";\n    countrySpecialities(selectedCountryName)\n  } \n});\n\nirelandNorthMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"IrelandNorth\")){\n  checkBritishTerritoriesMouseout();\n  } else {\n    $(irelandNorthMap).removeClass(\"smallMapOnYellow\");\n  }\n});\n\n\n\n    function recalculateCountriesPositionsBasedOnResolution(){\n  \n      polishMapLocation.style.height = (factor * countries.poland.height) + \"px\";\n      polishMapLocation.style.width = (factor * countries.poland.width) + \"px\";\n\n      lithuanianMapLocation.style.height = (factor * countries.lithuania.height) + \"px\";\n      lithuanianMapLocation.style.width = (factor * countries.lithuania.width) + \"px\";\n\n      germanyMapLocation.style.height = (factor * countries.germany.height) + \"px\";\n      germanyMapLocation.style.width = (factor * countries.germany.width) + \"px\";\n\n      ussrMapLocation.style.height = (factor * countries.ussr.height) + \"px\";\n      ussrMapLocation.style.width = (factor * countries.ussr.width) + \"px\";\n\n      czechoslovakiaMapLocation.style.height = (factor * countries.czechoslovakia.height) + \"px\";\n      czechoslovakiaMapLocation.style.width = (factor * countries.czechoslovakia.width) + \"px\";\n\n      greatBritainMapLocation.style.height = (factor * countries.greatBritain.height) + \"px\";\n      greatBritainMapLocation.style.width = (factor * countries.greatBritain.width) + \"px\";\n      \n      austriaMapLocation.style.height = (factor * countries.austria.height) + \"px\";\n      austriaMapLocation.style.width = (factor * countries.austria.width) + \"px\";\n\n      franceMapLocation.style.height = (factor * countries.france.height) + \"px\";\n      franceMapLocation.style.width = (factor * countries.france.width) + \"px\";\n\n      norwayMapLocation.style.height = (factor * countries.norway.height) + \"px\";\n      norwayMapLocation.style.width = (factor * countries.norway.width) + \"px\";\n\n      swedenMapLocation.style.height = (factor * countries.sweden.height) + \"px\";\n      swedenMapLocation.style.width = (factor * countries.sweden.width) + \"px\";\n\n      finlandMapLocation.style.height = (factor * countries.finland.height) + \"px\";\n      finlandMapLocation.style.width = (factor * countries.finland.width) + \"px\";\n\n      estoniaMapLocation.style.height = (factor * countries.estonia.height) + \"px\";\n      estoniaMapLocation.style.width = (factor * countries.estonia.width) + \"px\";\n\n      latviaMapLocation.style.height = (factor * countries.latvia.height) + \"px\";\n      latviaMapLocation.style.width = (factor * countries.latvia.width) + \"px\";\n\n      denmarkMapLocation.style.height = (factor * countries.denmark.height) + \"px\";\n      denmarkMapLocation.style.width = (factor * countries.denmark.width) + \"px\";\n\n      icelandMapLocation.style.height = (factor * countries.iceland.height) + \"px\";\n      icelandMapLocation.style.width = (factor * countries.iceland.width) + \"px\";\n\n      belgiumMapLocation.style.height = (factor * countries.belgium.height) + \"px\";\n      belgiumMapLocation.style.width = (factor * countries.belgium.width) + \"px\";\n      \n      netherlandMapLocation.style.height = (factor * countries.netherland.height) + \"px\";\n      netherlandMapLocation.style.width = (factor * countries.netherland.width) + \"px\";\n\n      hungaryMapLocation.style.height = (factor * countries.hungary.height) + \"px\";\n      hungaryMapLocation.style.width = (factor * countries.hungary.width) + \"px\";\n\n      romaniaMapLocation.style.height = (factor * countries.romania.height) + \"px\";\n      romaniaMapLocation.style.width = (factor * countries.romania.width) + \"px\";\n\n      bulgariaMapLocation.style.height = (factor * countries.bulgaria.height) + \"px\";\n      bulgariaMapLocation.style.width = (factor * countries.bulgaria.width) + \"px\";\n\n      yugoslaviaMapLocation.style.height = (factor * countries.yugoslavia.height) + \"px\";\n      yugoslaviaMapLocation.style.width = (factor * countries.yugoslavia.width) + \"px\";\n\n      albaniaMapLocation.style.height = (factor * countries.albania.height) + \"px\";\n      albaniaMapLocation.style.width = (factor * countries.albania.width) + \"px\";\n\n      greeceMapLocation.style.height = (factor * countries.greece.height) + \"px\";\n      greeceMapLocation.style.width = (factor * countries.greece.width) + \"px\";\n      \n      turkeyMapLocation.style.height = (factor * countries.turkey.height) + \"px\";\n      turkeyMapLocation.style.width = (factor * countries.turkey.width) + \"px\";\n\n      italyMapLocation.style.height = (factor * countries.italy.height) + \"px\";\n      italyMapLocation.style.width = (factor * countries.italy.width) + \"px\";\n\n      sicilyMapLocation.style.height = (factor * countries.sicily.height) + \"px\";\n      sicilyMapLocation.style.width = (factor * countries.sicily.width) + \"px\";\n\n      sardyniaMapLocation.style.height = (factor * countries.sardynia.height) + \"px\";\n      sardyniaMapLocation.style.width = (factor * countries.sardynia.width) + \"px\";\n\n      corsicaMapLocation.style.height = (factor * countries.corsica.height) + \"px\";\n      corsicaMapLocation.style.width = (factor * countries.corsica.width) + \"px\";\n\n      algieriaMapLocation.style.height = (factor * countries.algieria.height) + \"px\";\n      algieriaMapLocation.style.width = (factor * countries.algieria.width) + \"px\";\n\n      switzerlandMapLocation.style.height = (factor * countries.switzerland.height) + \"px\";\n      switzerlandMapLocation.style.width = (factor * countries.switzerland.width) + \"px\";\n\n      spainMapLocation.style.height = (factor * countries.spain.height) + \"px\";\n      spainMapLocation.style.width = (factor * countries.spain.width) + \"px\";\n\n      portugalMapLocation.style.height = (factor * countries.portugal.height) + \"px\";\n      portugalMapLocation.style.width = (factor * countries.portugal.width) + \"px\";\n\n      irelandNorthMapLocation.style.height = (factor * countries.irelandNorth.height) + \"px\";\n      irelandNorthMapLocation.style.width = (factor * countries.irelandNorth.width) + \"px\";\n\n      irelandMapLocation.style.height = (factor * countries.ireland.height) + \"px\";\n      irelandMapLocation.style.width = (factor * countries.ireland.width) + \"px\";\n      \n      easternPrussiaMapLocation.style.height = (factor * countries.easternPrussia.height) + \"px\";\n      easternPrussiaMapLocation.style.width = (factor * countries.easternPrussia.width) + \"px\";\n\n      \n      dateValueOnMap.style.fontSize = (factor * date.fontSize) + \"px\"\n      dateOnMap.style.fontSize = (factor * date.height) + \"px\"\n    }\n\n    function calculateResoluctionFactor(){\n      factor = resolution / 1887 ;\n    }\n\n    function countrySpecialities(selectedCountryName){\n      selectedCountry = refreshObjectsTranslation(selectedCountryName);\n      specialitiesList = \"\";\n      for(let specNbr in selectedCountry.specialities){\n        if(specNbr < Object.keys(selectedCountry.specialities).length){\n        specialitiesList += selectedCountry.specialities[specNbr] + \", \"\n      } else {\n        specialitiesList += selectedCountry.specialities[specNbr]\n      }\n      }\n     let notifyInfoValue = notifyInfo(selectedCountry)\n     if(!blockageForInfoNotify){\n        Notify.info(notifyInfoValue)\n     }\n    }\n\n    function notifyInfo(selectedCountry){\n    return  \"<b>\" + selectedLanguage[selectedCountryName] + \"</b>\" + \": <br> \" + selectedLanguage.population + \": \" + selectedCountry.population + \" \" + selectedLanguage.milionShortcut\n            + \"<br>\" + selectedLanguage.specialization + \": \" + specialitiesList\n    }\n\n    function checkItalianTerritoriesMouseover(){\n      if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sicily\") && italyTerritories.includes(\"Sardynia\")){\n        $(italyMap).addClass(\"italyMapOn\")\n        $(sicilyMap).addClass(\"smallMapOnViolet\");\n        $(sardyniaMap).addClass(\"smallMapOnViolet\");\n      }\n      else if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sicily\")){\n        $(italyMap).addClass(\"italyMapOn\")\n        $(sicilyMap).addClass(\"smallMapOnViolet\");\n      } else if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sardynia\")){\n        $(italyMap).addClass(\"italyMapOn\")\n        $(sardyniaMap).addClass(\"smallMapOnViolet\");\n      }  else if(italyTerritories.includes(\"Italy\")){\n        $(italyMap).addClass(\"italyMapOn\")\n      }\n    }\n\n    function checkItalianTerritoriesMouseout(){\n      if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sicily\") && italyTerritories.includes(\"Sardynia\")){\n        $(italyMap).removeClass(\"italyMapOn\")\n        $(sicilyMap).removeClass(\"smallMapOnViolet\");\n        $(sardyniaMap).removeClass(\"smallMapOnViolet\");\n      }   else if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sicily\")){\n        $(italyMap).removeClass(\"italyMapOn\")\n        $(sicilyMap).removeClass(\"smallMapOnViolet\");\n      } else if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sardynia\")){\n        $(italyMap).removeClass(\"italyMapOn\")\n        $(sardyniaMap).removeClass(\"smallMapOnViolet\");\n      }else if(italyTerritories.includes(\"Italy\")){\n        $(italyMap).removeClass(\"italyMapOn\")\n      }\n    }\n\n    function checkFrenchTerritoriesMouseover(){\n    \n      if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\") && franceTerritories.includes(\"Algieria\")){\n        $(franceMap).addClass(\"hugeMapOnYellow\")\n        $(corsicaMap).addClass(\"smallMapOnYellow\");\n        $(algieriaMap).addClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\")){\n        $(franceMap).addClass(\"hugeMapOnYellow\")\n        $(corsicaMap).addClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\")){\n        $(franceMap).addClass(\"hugeMapOnYellow\")\n        $(algieriaMap).addClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\")){\n        $(franceMap).addClass(\"hugeMapOnYellow\")\n      }\n    }\n\n    function checkFrenchTerritoriesMouseout(){\n      if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\") && franceTerritories.includes(\"Algieria\")){\n        $(franceMap).removeClass(\"hugeMapOnYellow\")\n        $(corsicaMap).removeClass(\"smallMapOnYellow\");\n        $(algieriaMap).removeClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\")){\n        $(franceMap).removeClass(\"hugeMapOnYellow\")\n        $(corsicaMap).removeClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\")){\n        $(franceMap).removeClass(\"hugeMapOnYellow\")\n        $(algieriaMap).removeClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\")){\n        $(franceMap).removeClass(\"hugeMapOnYellow\")\n      }\n    }\n\n    function checkDannishTerritoriesMouseover(){\n      if(denmarkTerritories.includes(\"Denmark\") && denmarkTerritories.includes(\"Iceland\")){\n        $(denmarkMap).addClass(\"mediumMapOnYellow\")\n        $(icelandMap).addClass(\"mediumMapOnYellow\");\n      } else if(denmarkTerritories.includes(\"Denmark\")){\n        $(denmarkMap).addClass(\"mediumMapOnYellow\")\n      }\n    }\n\n    function checkDannishTerritoriesMouseout(){\n      if(denmarkTerritories.includes(\"Denmark\") && denmarkTerritories.includes(\"Iceland\")){\n      $(denmarkMap).removeClass(\"mediumMapOnYellow\")\n      $(icelandMap).removeClass(\"mediumMapOnYellow\");\n      }\n      else if(denmarkTerritories.includes(\"Denmark\")){\n        $(denmarkMap).removeClass(\"mediumMapOnYellow\")\n      }\n    }\n\n    function checkBritishTerritoriesMouseover(){\n      if(greatBritainTerritories.includes(\"GB\") && greatBritainTerritories.includes(\"IrelandNorth\")){\n        $(greatBritainMap).addClass(\"hugeMapOnYellow\")\n        $(irelandNorthMap).addClass(\"mediumMapOnYellow\");\n        }\n        else if(greatBritainTerritories.includes(\"GB\")){\n          $(greatBritainMap).addClass(\"hugeMapOnYellow\")\n        }\n    }\n\n    function checkBritishTerritoriesMouseout(){\n      if(greatBritainTerritories.includes(\"GB\") && greatBritainTerritories.includes(\"IrelandNorth\")){\n        $(greatBritainMap).removeClass(\"hugeMapOnYellow\")\n        $(irelandNorthMap).removeClass(\"mediumMapOnYellow\");\n        }\n        else if(greatBritainTerritories.includes(\"GB\")){\n          $(greatBritainMap).removeClass(\"hugeMapOnYellow\")\n        }\n    }\n\n    function checkGermanTerritoriesMouseover(){\n      if(germanyTerritories.includes(\"Germany\") && germanyTerritories.includes(\"EasternPrussia\")){\n        $(germanyMap).addClass(\"hugeMapOnYellow\")\n        $(easternPrussiaMap).addClass(\"mediumMapOnYellow\");\n        }\n        else if(germanyTerritories.includes(\"Germany\")){\n          $(germanyMap).addClass(\"hugeMapOnYellow\")\n        }\n    }\n\n    function checkGermanTerritoriesMouseout(){\n      if(germanyTerritories.includes(\"Germany\") && germanyTerritories.includes(\"EasternPrussia\")){\n        $(germanyMap).removeClass(\"hugeMapOnYellow\")\n        $(easternPrussiaMap).removeClass(\"mediumMapOnYellow\");\n        }\n        else if(germanyTerritories.includes(\"Germany\")){\n          $(germanyMap).removeClass(\"hugeMapOnYellow\")\n        }\n    }\n\n    let start = document.querySelector(\"#start\");\n    const startContainer = document.querySelector(\"#startContainer\"); \n    const pause = document.querySelector(\"#pause\"); \n    const pauseContainer = document.querySelector(\"#pauseContainer\"); \n    const clockWheel = document.querySelector(\".hours-container\");  \n    const pauseLaunched = document.querySelector(\"#pauseLaunched\");\n\n    start.addEventListener(\"click\", \n    function(){ \n        startContainer.style.display = \"none\";\n        pauseContainer.style.display = \"\";\n        clockWheel.style.animationPlayState = 'running';\n        pauseLaunched.style.display = \"none\"\n        clearInterval(pulsingInterval);\n        calculateDateTimeInterval = setInterval(calculateDateTime,1000)\n        \n      }\n    );\n\n    pause.addEventListener(\"click\", \n    function(){ \n        startContainer.style.display = \"\";\n        pauseContainer.style.display = \"none\";\n        clockWheel.style.animationPlayState = 'paused';\n        pauseLaunched.style.display = \"inline-block\"\n        pulsingIntervalCounter = 0;\n        pulsingInterval = setInterval(pulsing, 1000);\n        clearInterval(calculateDateTimeInterval);\n        pauseClicked = true;\n      }\n    );\n\n    function pulsing(){\n        pulsingIntervalCounter++\n        if(pulsingIntervalCounter%2 ==0){\n          pauseLaunched.style.transform = 'scale(1)'\n      } else {\n        pauseLaunched.style.transform = 'scale(1.2)'  \n    \n      }\n    }\n\n    function calculateDateTime(){\n      time.hour++\n      let hourWatch;\n      if(time.hour < 10){\n        hourWatch = \"0\" + time.hour\n      } else {\n        hourWatch =  time.hour;\n      }\n\n      timeWatch.innerHTML = selectedLanguage.hour + \": \" + hourWatch;\n\n      if((time.hour==23 || time.hour== 11) && pauseClicked == true){\n        clockWheel.classList.add(\"animateDescriptor\");\n        setTimeout(function() { \n        clockWheel.classList.remove(\"animateDescriptor\");    \n      }, 1000); \n      pauseClicked = false;\n\n      }\n      if(time.hour==24){\n        time.hour = 0;\n        dateValue.day++;\n        changeDate(dateValue);\n          if((dateValue.month == 1 || dateValue.month == 3 || dateValue.month == 5 || dateValue.month == 7 || dateValue.month == 8 || dateValue.month == 10 || dateValue.month == 12) && dateValue == 31){\n            if(dateValue.month == 12){\n              dateValue.month = 1\n              dateValue.year++;\n              changeDate(dateValue);\n            } else{\n            dateValue.month++;\n            changeDate(dateValue);\n          }\n          } else if((dateValue.month == 4 || dateValue.month == 6 || dateValue.month == 9 || dateValue.month == 11) && dateValue.day ==30){\n            dateValue.month++;\n            changeDate(dateValue);\n          } else if(dateValue.month == 2 & dateValue.day == 28){\n            dateValue.month++;\n            changeDate(dateValue);\n          }\n      }\n  }\n  \n  function changeDate(dateValue){\n    let day;\n    let month;\n    if(dateValue.day < 10){\n      day = \"0\" + dateValue.day;\n    } else {\n      day = dateValue.day;\n    }\n    \n    if(dateValue.month < 10 ){\n      month = \"0\" + dateValue.month;\n    }\n    dateValueOnMap.innerHTML = day + \".\" + month + \".\" + dateValue.year;\n  }\n\n  const countryPanelList = document.querySelector(\".countryPanelList\");\n  const navHeight = document.querySelector('.nav').clientHeight;\n  const placeForFlag = document.querySelector(\"#placeForFlag\");  \n  const countryFlagActionCountry = $(\".countryFlagActionCountry\")[0]\n  export let countryPanelListClicked = false;\n\n  placeForFlag.addEventListener('click',function(){\n    hideActionForCountryList();\n    toggleCountryPanelListClicked();\n    // countryPanelListClicked = false;\n  })\n\n  function showList(event){\n    if(firstClickedCountryName == clickedCountryName){ //if second click is about the same country\n      hideActionForCountryList();\n    };\n\n    lastClickedCountryTag = event.target;\n    controlPanelWidth = $(\".countryPanelList\").width(); //Y\n    controlPanelHeight = $(\".countryPanelList\").height(); //X\n\n    //save displaying list on map\n    //width position\n    if(controlPanelWidth + event.clientY  + 20 > resolutionBodyY){\n      clickedPositionY = resolutionBodyY - controlPanelWidth ;\n    } else {\n      clickedPositionY = event.clientY + window.scrollY - controlPanelWidth;\n\n    }\n\n    //height position\n    if(controlPanelHeight + event.clientX + window.scrollX + 15 > resolution){\n      clickedPositionX = resolution - (controlPanelHeight*2.5)  - 10;\n    } else {\n      clickedPositionX = event.clientX + window.scrollX + (controlPanelHeight * 0,5) + 10;\n    }\n     \n      if(countryPanelListClicked && firstClickedCountryName == clickedCountryName){\n         countryPanelListClicked = false;\n      } else{\n          countryPanelListClicked = true;\n          countryPanelList.style.left = clickedPositionX + \"px\" //event.clientX + 20 + \"px\";\n          countryPanelList.style.transition = \"all 1.5s\";\n          countryPanelList.style.top = clickedPositionY + \"px\"//event.clientY + window.scrollY - controlPanelWidth + \"px\";\n          countryPanelList.style.visibility = \"visible\";\n          countryPanelList.style.opacity = \"1\";\n          placeForFlag.src = smallFlagSrc;\n          countryFlagActionCountry.style.transition = \"0.3s\"\n        }\n\n      clickedCountryName = firstClickedCountryName\n  }\n\nexport function hideActionForCountryList(){\n    countryPanelList.style.transition = \"opacity 1s ease-out\";\n    countryPanelList.style.opacity = \"0.5\";\n    countryPanelList.style.visibility = \"hidden\";\n    countryFlagActionCountry.style.transition = \"0s\"\n  }\nexport function toggleCountryPanelListClicked(){\n  if(countryPanelListClicked){\n    countryPanelListClicked = false;\n  } else {\n    countryPanelListClicked = true;\n  }\n}\n\nexport function toggleClickedCreateTransport(){\n  if(clickedCreateTransport){\n    clickedCreateTransport = false;\n  } else {\n    clickedCreateTransport = true;\n  }\n}\n\nexport function cleanCurrentRoute(){\n  currentRoute = [];\n  currentRouteTranslated = [];\n  route.innerHTML = \"\";\n}\n\n\nexport let listObjects = {\n    \"goods\" : goods,\n    \"ussr\" : countries.ussr,\n    \"germany\" : countries.germany,\n    \"lithuania\" : countries.lithuania,\n    \"poland\" : countries.poland,\n    \"czechoslovakia\" : countries.czechoslovakia,\n    \"greatBritain\" : countries.greatBritain,\n    \"austria\" : countries.austria,\n    \"france\" : countries.france,\n    \"norway\" : countries.norway,\n    \"finland\" : countries.finland,\n    \"sweden\" : countries.sweden,\n    \"latvia\" : countries.latvia,\n    \"estonia\" : countries.estonia,\n    \"romania\" : countries.romania,\n    \"hungary\" : countries.hungary,\n    \"yugoslavia\" : countries.yugoslavia,\n    \"bulgaria\" : countries.bulgaria,\n    \"turkey\" : countries.turkey,\n    \"greece\" : countries.greece,\n    \"italy\" : countries.italy,\n    \"spain\" : countries.spain,\n    \"portugal\" : countries.portugal,\n    \"denmark\" : countries.denmark,\n    \"belgium\" : countries.belgium,\n    \"netherland\" : countries.netherland,\n    \"albania\" : countries.albania,\n    \"iceland\" : countries.iceland,\n    \"switzerland\" : countries.switzerland,\n    \"sicily\" : countries.sicily,\n    \"sardynia\" : countries.sardynia,\n    \"corsica\" : countries.corsica,\n    \"algieria\" : countries.algieria,\n    \"irelandNorth\" : countries.irelandNorth,\n    \"ireland\" : countries.ireland,\n    \"easternPrussia\" : countries.easternPrussia\n}\n\n\n","export const meansOfTransportList = {\n    1935:{\n        vechicles:{\n                truck:{\n                        renaultTTD6:{\n                            payLoad: 15,\n                            cost: 1,\n                            speed: 20\n                        },\n                        renaultABG:{\n                            payLoad: 10,\n                            cost: 0.77,\n                            speed: 23\n                        },\n                        renaultYGDD:{\n                            payLoad: 6,\n                            cost: 0.47,\n                            speed: 21\n                        },\n                        VolvoLV80:{\n                            payLoad: 5,\n                            cost: 0.43,\n                            speed: 19\n                        }\n                    },\n                bus:{\n                    AECtypeQ:{\n                        passengers: 30,\n                        cost: 0.9,\n                        speed: 22\n                    },\n                    AMO4:{\n                        passengers: 22,\n                        cost: 0.8,\n                        speed: 20\n                    },\n                    LeylandTitan:{\n                        passengers: 51,\n                        cost: 1,\n                        speed: 20\n                    }\n                }  \n        },\n        maritime:{\n            passangerShips:{\n                    steamer:{\n                        passengers: 700,\n                        cost: 30,\n                        speed: 12\n                    },\n                    internalCombustion:{\n                        passengers: 1000,\n                        cost: 50,\n                        speed: 15\n                    }\n                },\n            loadShips:{\n                    steamer:{\n                        payLoad: 150,\n                        cost: 30,\n                        speed: 25\n                    },\n                    internalCombustion:{\n                        payLoad: 170,\n                        cost: 50,\n                        speed: 30\n                    }\n                }\n            },\n        trains:{\n                passengerTrains:{\n                    Mat34:{\n                        passengers: 150,\n                        cost: 30,\n                        speed: 50\n                    },\n                    LNERClassA4:{\n                        passengers: 140,\n                        cost: 29,\n                        speed: 48\n                    },\n                    DRGClassSVT137:{\n                        passengers: 130,\n                        cost: 28,\n                        speed: 46\n                    }\n\n                }, \n                loadTrains:{\n                    DRGClassSVT877:{\n                        payLoad: 300,\n                        cost: 50,\n                        speed: 30\n                    },\n                    DRGClass05:{\n                        payLoad: 250,\n                        cost: 45,\n                        speed: 25\n                    },\n                    Pm2:{\n                        payLoad: 220,\n                        cost: 44,\n                        speed: 15\n                    }\n                }\n            }\n    }\n}\n\nexport let additionalTransportCost = {\n    trucks: 0.3,\n    bus: 0.3,\n    passengerTrains: 10,\n    loadTrains: 10,\n    passangerShips: 150,\n    loadShips: 150\n}","import {clickedCountryName,currentRoute} from './map'\nimport {addAvaiableGoodOptions,translateCurrentRoute} from './transportPanel'\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\nconst languagesListTranslation = document.querySelector(\".languagesList\");\n\nlanguagesListTranslation.addEventListener(\"click\",function(e){\n    let index = Array.prototype.indexOf.call(languagesListTranslation.children, e.target);\n    \n    if(index == 0){\n        selectedLanguage = polish\n        toggleLanguage();\n    } else if(index == 1){\n        selectedLanguage = english\n        toggleLanguage();\n    } else if(index == 2){\n        selectedLanguage = russian\n        toggleLanguage();\n    }\n  });\n});\n\n\n\nconst   polish = {\n        specialization: \"Specjalizacja\",\n        population: \"Populacja\",\n        link0: \"Panel gracza\",\n        link1: \"Giełda\",\n        link2: \"Tabor\",\n        link3: \"Kraje\",\n        polish: \"Polski\",\n        english: \"Angielski\",\n        russian: \"Rosyjski\",\n        selectLanguage: \"Wybierz język\",\n        instruction: \"Instrukcja\",\n        myAchievements: \"Moje osiągnięcia\",\n        srcFlagTranslation: \"/pl2.d37abd68.png\",\n        chosenLanguageTranslation: \"Wybrany język\",\n        poland: \"Polska\",\n        germany: \"Niemcy\",\n        greatBritain: \"Wielka Brytania\",\n        norway: \"Norwegia\",\n        sweden: \"Szwecja\",\n        finland: \"Finlandia\",\n        ussr: \"ZSRR\",\n        czechoslovakia: \"Czechosłowacja\",\n        estonia: \"Estonia\",\n        latvia: \"Łotwa\",\n        lithuania: \"Litwa\",\n        romania: \"Rumunia\",\n        bulgaria: \"Bułgaria\",\n        greece: \"Grecja\",\n        albania: \"Albania\",\n        yugoslavia: \"Jugosławia\",\n        hungary: \"Węgry\",\n        austria: \"Austria\",\n        switzerland: \"Szwajcaria\",\n        italy: \"Włochy\",\n        france: \"Francja\",\n        spain: \"Hiszpania\",\n        portugal: \"Portugalia\",\n        turkey: \"Turcja\",\n        denmark: \"Dania\",\n        netherland: \"Holandia\",\n        belgium: \"Belgia\",\n        milionShortcut: \"mln\",\n        coal: \"Węgiel\",\n        steel: \"Stal\",\n        aluminium: \"Aluminium\",\n        copper: \"Miedź\",\n        lead: \"Ołów\",\n        grain: \"Zboże\",\n        oil: \"Ropa\",\n        wine: \"Wino\",\n        fish: \"Ryby\",\n        flour: \"Mąka\",\n        clothes: \"Ubrania\",\n        zinc: \"Cynk\",\n        wolfram: \"Wolfram\",\n        ideas: \"Idee\",\n        mechanicalParts: \"Częsci mechaniczne\",\n        mostAvailable: \"Najbardziej dostępne\",\n        theLeastAvailable : \"Najmniej dostępne\",\n        theMostExpensive : \"Najdroższe\",\n        theCheapest : \"Najtańsze\",\n        nickel: \"Nikiel\",\n        chrome: \"Chrom\",\n        forestGoods : \"Dobra leśne\",\n        iceland : \"Islandia\",\n        sicily : \"Sycylia\",\n        sardynia : \"Sardynia\",\n        corsica : \"Korsyka\",\n        algieria : \"Algieria\",\n        ireland : \"Irlandia\",\n        irelandNorth : \"Irlandia Północna\",\n        easternPrussia : \"Prusy wschodnie\",\n        pauseLaunched : \"Pauza\",\n        hour: \"Godzina\",\n        createTransport : \"Stwórz transport\",\n        countryMarket : \"Rynek krajowy\",\n        checkCountryDetails : \"Zobacz szczegóły kraju\",\n        truck : \"Ciężarowy\",\n        bus : \"Autobusowy\",\n        railway : \"Kolejowy\",\n        maritime : \"Morski\",\n        air : \"Lotniczy\",\n        countryStartName : \"Kraj początkowy\",\n        typeOfTransport : \"Typ transportu\",\n        wares : \"Towary\",\n        selectWare : \"Wybierz towar\",\n        passengers: \"Pasażerowie\",\n        country: \"Kraj\",\n        alreadyAddedToRoute: \"jest już dodany do trasy\",\n        cannotAddCountry: \"Nie można dodać kraju\",\n        toRouteBecauseItIsTheStartingCountry : \"do trasy ponieważ jest on krajem początkowym\",\n        routeBy : \"Trasa przez\",\n        endCountryOfTheRoute : \"Kraj końcowy trasy\",\n        availableQty : \"Dostępna ilość\",\n        goodCostInStartedCountry : \"Cena towaru w kraju startowym\" ,\n        goodCostInEndCountry : \"Cena towaru w kraju końcowym\",\n        howManyToTransport : \"Ile chcesz przetransportować\",\n        isNotANeighborOf: \"nie jest sąsiadem\",\n        land: \"Lądowy\",\n        transportType: \"Rodzaj transportu\",\n        sea: \"Morski\",\n        maritimeRouteOverSize: \"Trasa morska nie może być stworzona z więcej niż 2 krajów\",\n        doNotHaveAccessToSea: \"nie ma dostępu do morza\",\n        routeDistance: \"Długość trasy\",\n        distanceUnitValue: \"km\",\n        alreadyAllCountriesDeletedFromRoute: \"Wszystkie kraje zostały już wycofane z trasy\",\n        capacity: \"Ładowność\",\n        quantityNeeded : \"Potrzebna ilość\",\n        speedUnitKmH : \"km/h\",\n        speed : \"Prędkość\",\n        estimatedArrival: \"Szacowany czas przybycia\",\n        costFor: \"Koszt za\",\n        calculatedCost : \"Koszt wyliczony\",\n        income : \"Dochód\",\n        profit : \"Zysk\"\n        \n    }\n    \nconst   english = {\n        specialization: \"Specialization\",\n        population: \"Population\",\n        link0: \"Player panel\",\n        link1: \"Stock market\",\n        link2: \"Stock\",\n        link3: \"Countries\",\n        polish: \"Polish\",\n        english: \"English\",\n        russian: \"Russian\",\n        selectLanguage: \"Choose language\",\n        instruction: \"Manual\",\n        myAchievements: \"My Achievements\",\n        srcFlagTranslation: \"/gb2.cce89a59.png\",\n        chosenLanguageTranslation: \"Selected language\",\n        poland: \"Poland\",\n        germany: \"Germany\",\n        greatBritain: \"Great Britain\",\n        norway: \"Norway\",\n        sweden: \"Sweden\",\n        finland: \"Finland\",\n        ussr: \"USSR\",\n        czechoslovakia: \"Czechoslovakia\",\n        estonia: \"Estonia\",\n        latvia: \"Latvia\",\n        lithuania: \"Lithuania\",\n        romania: \"Romania\",\n        bulgaria: \"Bulgaria\",\n        greece: \"Greece\",\n        albania: \"Albania\",\n        yugoslavia: \"Yugoslavia\",\n        hungary: \"Hungary\",\n        austria: \"Austria\",\n        switzerland: \"Switzerland\",\n        italy: \"Italy\",\n        france: \"France\",\n        spain: \"Spain\",\n        portugal: \"Portugal\",\n        turkey: \"Turkey\",\n        denmark: \"Denmark\",\n        netherland: \"Netherland\",\n        belgium: \"Belgium\",\n        milionShortcut: \"mln\",\n        coal: \"Coal\",\n        steel: \"Steel\",\n        aluminium: \"Aluminium\",\n        copper: \"Copper\",\n        lead: \"Lead\",\n        grain: \"Grain\",\n        oil: \"Oil\",\n        wine: \"Wine\",\n        fish: \"Fish\",\n        flour: \"Flour\",\n        clothes: \"Clothes\",\n        zinc: \"Zinc\",\n        wolfram: \"Wolfram\",\n        ideas: \"Ideas\",\n        mechanicalParts: \"Mechanical parts\",\n        mostAvailable: \"Most Available\",\n        theLeastAvailable : \"The Least Available\",\n        theMostExpensive : \"The Most Expensive\",\n        theCheapest : \"The Cheapest\",\n        nickel: \"Nickel\",\n        chrome: \"Chrome\",\n        forestGoods : \"Forest goods\",\n        iceland : \"Iceland\",\n        sicily : \"Sicily\",\n        sardynia : \"Sardinia\",\n        corsica : \"Corsica\",\n        algieria : \"Algeria\",\n        ireland : \"Ireland\",\n        irelandNorth : \"Northern Ireland\",\n        easternPrussia : \"Eastern Prussia\",\n        pauseLaunched : \"Pause\",\n        hour: \"Hour\",\n        createTransport : \"Create transport\",\n        countryMarket : \"Country market\",\n        checkCountryDetails : \"Check country details\",\n        truck : \"Truck\",\n        bus : \"Bus\",\n        railway : \"Railway\",\n        maritime : \"Maritime\",\n        air : \"Air\",\n        countryStartName : \"Country start name\",\n        typeOfTransport : \"Type of transport\",\n        wares : \"Wares\",\n        selectWare : \"Select ware\",\n        passengers: \"Passengers\",\n        country: \"Country\",\n        alreadyAddedToRoute: \"already added to route\",\n        cannotAddCountry: \"Can't add country\",\n        toRouteBecauseItIsTheStartingCountry : \"to the route as it is the starting country\",\n        routeBy : \"Route by\",\n        endCountryOfTheRoute : \"End country of the route\",\n        availableQty : \"Available quantity\",\n        goodCostInStartedCountry : \"The price of the good in the starting country\" ,\n        goodCostInEndCountry : \"The price of the good in the end country\",\n        howManyToTransport : \"How many do you want to transport\",\n        isNotANeighborOf: \"is not a neighbor of\",\n        land: \"Land\",\n        transportType: \"Transport type\",\n        sea: \"Sea\",\n        maritimeRouteOverSize: \"The sea route cannot be composed of more than 2 countries\",\n        doNotHaveAccessToSea: \"do not have access to sea\",\n        routeDistance: \"Route distance\",\n        distanceUnitValue: \"km\",\n        alreadyAllCountriesDeletedFromRoute: \"Already all countries were deleted from route\",\n        capacity: \"Capacity\",\n        quantityNeeded : \"Quantity needed\",\n        speedUnitKmH : \"km/h\",\n        speed : \"Speed\",\n        estimatedArrival: \"Estimated arrival time\",\n        costFor: \"Cost for\",\n        calculatedCost : \"Calculated cost\",\n        income : \"Income\",\n        profit : \"Profit\"\n    }\n    \nconst   russian = {\n        specialization: \"Специализация\",\n        population: \"Население\",\n        link0: \"Панель игрока\",\n        link1: \"Фондовый рынок\",\n        link2: \"Запас\",\n        link3: \"Страны\",\n        polish: \"Польский\",\n        english: \"Английский\",\n        russian: \"Русский\",\n        selectLanguage: \"Выберите язык\",\n        instruction: \"Инструкция\",\n        myAchievements: \"мои достижения\",\n        srcFlagTranslation: \"/ru2.a879c3bc.png\",\n        chosenLanguageTranslation: \"Выбранный язык\",\n        poland: \"Польша\",\n        germany: \"Германия\",\n        greatBritain: \"Великобритания\",\n        norway: \"Норвегия\",\n        sweden: \"Швеция\",\n        finland: \"Финляндия\",\n        ussr: \"СССР\",\n        czechoslovakia: \"Чехословакия\",\n        estonia: \"Эстония\",\n        latvia: \"Латвия\",\n        lithuania: \"Литва\",\n        romania: \"Румыния\",\n        bulgaria: \"Болгария\",\n        greece: \"Греция\",\n        albania: \"Албания\",\n        yugoslavia: \"Yugoslavia\",\n        hungary: \"Венгрия\",\n        austria: \"Австрия\",\n        switzerland: \"Швейцария\",\n        italy: \"Италия\",\n        france: \"Франция\",\n        spain: \"Испания\",\n        portugal: \"Португалия\",\n        turkey: \"Турция\",\n        denmark: \"Дания\",\n        netherland: \"Нидерланды\",\n        belgium: \"бельгия\",\n        milionShortcut: \"млн\",\n        coal: \"каменный уголь\",\n        steel: \"стали\",\n        aluminium: \"Алюминий\",\n        copper: \"медь\",\n        lead: \"Oлов\",\n        grain: \"Зерновой\",\n        oil: \"Масло\",\n        wine: \"Вино\",\n        fish: \"Рыбы\",\n        flour: \"Мука\",\n        clothes: \"Одежда\",\n        zinc: \"Цинк\",\n        wolfram: \"Вольфрам\",\n        ideas: \"Идеи\",\n        mechanicalParts: \"Механические части\",\n        mostAvailable: \"Самый доступный\",\n        theLeastAvailable : \"Наименее доступный\",\n        theMostExpensive : \"Самый дорогой\",\n        theCheapest : \"Самый дешевый\",\n        nickel: \"никель\",\n        chrome: \"Хром\",\n        forestGoods : \"Лесные товары\",\n        iceland : \"Исландия\",\n        sicily : \"Сицилия\",\n        sardynia : \"Сардиния\",\n        corsica : \"Корсика\",\n        algieria : \"Алжир\",\n        ireland : \"Ирландия\",\n        irelandNorth : \"Северная Ирландия\",\n        easternPrussia : \"Восточная Пруссия\",\n        pauseLaunched : \"Пауза\",\n        hour: \"Час\",\n        createTransport : \"Создать транспорт\",\n        countryMarket : \"Загородный рынок\",\n        checkCountryDetails : \"Проверить информацию о стране\",\n        truck : \"Грузовая машина\",\n        bus : \"Автобус\",\n        railway : \"Железнодорожный\",\n        maritime : \"морской\",\n        air : \"Воздуха\",\n        countryStartName : \"Начальное название страны\",\n        typeOfTransport : \"Вид транспорта\",\n        wares : \"Товары\",\n        selectWare : \"Выберите продукт\",\n        passengers: \"Пассажиры\",\n        country: \"Страна\",\n        alreadyAddedToRoute: \"уже добавлено в маршрут\",\n        cannotAddCountry: \"Невозможно добавить страну\",\n        toRouteBecauseItIsTheStartingCountry : \"к маршруту, так как это стартовая страна\",\n        routeBy : \"Маршрут по\",\n        endCountryOfTheRoute : \"Kонечная страна маршрута\",\n        availableQty : \"Доступное количество\",\n        goodCostInStartedCountry : \"Цена товара в стартовой стране\" ,\n        goodCostInEndCountry : \"Цена товара в конечной стране\",\n        howManyToTransport : \"Сколько вы хотите перевезти\",\n        isNotANeighborOf: \"не является соседом\",\n        land: \"Земельные участки\",\n        transportType: \"Тип транспорта\",\n        sea: \"морской\",\n        maritimeRouteOverSize: \"Морской путь не может состоять более чем из 2 стран\",\n        doNotHaveAccessToSea: \"не имеют выхода к морю\",\n        routeDistance: \"Расстояние маршрута\",\n        distanceUnitValue: \"км\",\n        alreadyAllCountriesDeletedFromRoute: \"Уже все страны удалены из маршрута\",\n        capacity: \"Вместимость\",\n        quantityNeeded : \"Необходимое количество\",\n        speedUnitKmH : \"км/ч\",\n        speed : \"Скорость\",\n        estimatedArrival: \"Ожидаемое время прибытия\",\n        costFor: \"Стоимость для\",\n        calculatedCost : \"Расчетная стоимость\",\n        income : \"Доход\",\n        profit : \"Прибыль\"\n    }\n\nexport let selectedLanguage = polish;\n\n  function toggleLanguage(){\n      //////catch all ids on site\n   const chosenLanguage = document.getElementById(\"chosenLanguage\");\n   const tranlationPlayerPanel = document.getElementById(\"link0\");\n   const tranlationStockMarket = document.getElementById(\"link1\");\n   const tranlationStock = document.getElementById(\"link2\");\n   const translationCountries = document.getElementById(\"link3\");\n   const translationPolish = document.getElementById(\"polish\");\n   const translationEnglish = document.getElementById(\"english\");\n   const translationRussian = document.getElementById(\"russian\");\n   const translationSelectLanguage = document.getElementById(\"languages\");\n   const translationManual = document.getElementById(\"manual\");\n   const translationMyAchievements = document.getElementById(\"myAchievements\");\n   const pauseLaunched = document.getElementById(\"pauseLaunched\");\n   const createTransport = document.getElementById(\"createTransport\");\n   const countryMarket = document.getElementById(\"countryMarket\");\n   const checkCountryDetails = document.getElementById(\"checkCountryDetails\");\n\n   const truck = document.getElementById(\"truck\");\n   const bus = document.getElementById(\"bus\");\n   const railway = document.getElementById(\"railway\");\n   const maritime = document.getElementById(\"maritime\");\n   const air = document.getElementById(\"air\");\n   const countryStartName = $(\".countryStartName\")[0];\n   const typeOfTransport =  document.getElementById(\"typeOfTransport\")\n   const selectWare =  $(\".selectWare\")[1];  \n   const countryStartNameValue = $(\".countryStartNameValue\")[0];\n   const routeBy = $(\".routeBy\")[1];\n   const endCountryOfTheRoute = $(\".endCountryOfTheRoute\")[0];\n   const availableQty = $(\".availableQty\")[1];\n\n   const goodCostInEndCountry = $(\".goodCostInEndCountry\")[1];\n   const goodCostInStartedCountry = $(\".goodCostInStartedCountry\")[1];\n   const howManyToTransport = $(\".howManyToTransport\")[1];\n   const transportType = document.getElementById(\"transportType\");\n\n   const routeDistance = $(\".routeDistance\")[1];\n   const distanceUnit = $(\".distanceUnit\")[1];\n   const capacity = $(\".capacity\")[0];\n   const quantityNeeded =  $(\".neccesseryQty\")[0];\n   const speed =  $(\".speed\")[0];\n   const speedUnitKmH = $(\".speedUnitKmH\")[0];\n   const estimatedArrival = $(\".estimatedArrival\")[0];\n\n   const costFor = $(\".singularCost\")[0];\n   const calculatedCost = $(\".calculatedCost\")[0];\n   const income = $(\".income\")[0];\n   const profit = $(\".profit\")[0];\n\n    chosenLanguage.src = selectedLanguage.srcFlagTranslation;\n    chosenLanguage.title = selectedLanguage.chosenLanguageTranslation;\n    tranlationPlayerPanel.innerHTML = selectedLanguage.link0;\n    tranlationStockMarket.innerHTML = selectedLanguage.link1;\n    tranlationStock.innerHTML = selectedLanguage.link2;\n    translationCountries.innerHTML = selectedLanguage.link3;\n    translationPolish.innerHTML = selectedLanguage.polish;\n    translationEnglish.innerHTML = selectedLanguage.english;\n    translationRussian.innerHTML = selectedLanguage.russian;\n    translationSelectLanguage.innerHTML = selectedLanguage.selectLanguage;\n    translationManual.innerHTML = selectedLanguage.instruction;\n    translationMyAchievements.innerHTML = selectedLanguage.myAchievements;\n    pauseLaunched.innerHTML = selectedLanguage.pauseLaunched;\n    createTransport.innerHTML = selectedLanguage.createTransport;\n    countryMarket.innerHTML = selectedLanguage.countryMarket;\n    checkCountryDetails.innerHTML = selectedLanguage.checkCountryDetails;\n    countryStartNameValue.innerHTML = selectedLanguage[clickedCountryName];\n    \n    truck.innerHTML = selectedLanguage.truck;\n    bus.innerHTML = selectedLanguage.bus;\n    railway.innerHTML = selectedLanguage.railway;\n    maritime.innerHTML = selectedLanguage.maritime;\n    air.innerHTML = selectedLanguage.air;\n    countryStartName.innerHTML = selectedLanguage.countryStartName;\n    typeOfTransport.innerHTML = selectedLanguage.typeOfTransport;\n    selectWare.innerHTML = selectedLanguage.selectWare;\n    routeBy.innerHTML = selectedLanguage.routeBy;\n    endCountryOfTheRoute.innerHTML = selectedLanguage.endCountryOfTheRoute;\n    availableQty.innerHTML = selectedLanguage.availableQty;\n    goodCostInStartedCountry.innerHTML = selectedLanguage.goodCostInStartedCountry;\n    goodCostInEndCountry.innerHTML = selectedLanguage.goodCostInEndCountry;\n    howManyToTransport.innerHTML = selectedLanguage.howManyToTransport;\n    transportType.innerHTML = selectedLanguage.transportType;\n\n    routeDistance.innerHTML = selectedLanguage.routeDistance;\n    distanceUnit.innerHTML = selectedLanguage.distanceUnitValue;\n    capacity.innerHTML = selectedLanguage.capacity;\n    quantityNeeded.innerHTML = selectedLanguage.quantityNeeded;\n    speed.innerHTML = selectedLanguage.speed;\n    speedUnitKmH.innerHTML = selectedLanguage.speedUnitKmH;\n\n    estimatedArrival.innerHTML = selectedLanguage.estimatedArrival;\n    profit.innerHTML = selectedLanguage.profit;\n    costFor.innerHTML = selectedLanguage.costFor ;\n    calculatedCost.innerHTML = selectedLanguage.calculatedCost ;\n    income.innerHTML = selectedLanguage.income ;\n\n    \n    addAvaiableGoodOptions();\n    translateCurrentRoute(currentRoute);\n  }\n\n  export function refreshObjectsTranslation(searchedObject){\n   \n     goods ={\n        main: {\n              1: selectedLanguage.coal,\n              2: selectedLanguage.steel,\n              3: selectedLanguage.aluminium,\n              4: selectedLanguage.copper,\n              5: selectedLanguage.lead,\n              6: selectedLanguage.grain,\n              7: selectedLanguage.oil\n        },\n        additional: {\n          1: selectedLanguage.wine,\n          2: selectedLanguage.fish,\n          3: selectedLanguage.flour,\n          4: selectedLanguage.clothes\n        },\n        specific: {\n          1: selectedLanguage.zinc,\n          2: selectedLanguage.wolfram,\n          3: selectedLanguage.ideas,\n          4: selectedLanguage.mechanicalParts,\n          5: selectedLanguage.chrome,\n          6: selectedLanguage.nickel,\n          7: selectedLanguage.forestGoods\n        }\n      }\n  \n  \n      ussr = {\n      height: 400,\n      width: 310,\n      specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.specific[3],\n          4: goods.main[7]\n        }, \n        population: 159\n      }\n  \n    germany = {\n        height: 188,\n        width: 97,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.specific[3]\n        },\n        goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 74\n      }\n  \n      lithuania = {\n      height: 101, \n      width: 134, \n      specialities: {\n        1: goods.additional[2],\n        2: goods.additional[3]\n        },\n        goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 2\n      }\n  \n       poland = {\n        height: 298,\n        width: 286,\n        specialities: {\n          1: goods.main[6],\n          2: goods.main[7],\n          3: goods.additional[3]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 30\n        }\n  \n       czechoslovakia = {\n        height: 30,\n        width: 120,\n        specialities: {\n          1: goods.main[2],\n          2: goods.main[4],\n          3: goods.specific[4]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 13\n      }\n  \n       greatBritain = {\n        height: 150,\n        width: 120,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.additional[2],\n          4: goods.specific[1]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 47\n      }\n  \n       austria = {\n        height: 55,\n        width: 58,\n        specialities: {\n          1: goods.additional[3]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 6.8\n      }\n  \n       france = {\n        height: 180,\n        width: 180,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.main[5],\n          4: goods.additional[1]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 42\n      }\n\n      let norway = {\n        height: 200,\n        width: 68,\n        specialities: {\n            1: goods.additional[2]\n          },  \n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          population: 2.9\n        }\n\n        let sweden = {\n          height: 427.45,\n          width: 354.8,\n          specialities: {\n              1: goods.specific[2],\n              2: goods.main[4],\n              3: goods.main[2]\n            },  \n            goodCosts: {\n              coal: 30,\n              steel: 70,\n              aluminium: 80,\n              copper: 60,\n              lead: 50,\n              grain: 5,\n              oil: 100,\n              wine: 35,\n              fish: 5,\n              flour: 10,\n              clothes: 20,\n              zinc: 75,\n              wolfram: 100,\n              mechanicalParts: 150,\n              chrome : 5,\n              nickel: 3,\n              forestGoods: 20\n            },\n            goodsAvailability: {\n              coal: 100,\n              steel: 80,\n              aluminium: 50,\n              copper: 120,\n              lead: 80,\n              grain: 1000,\n              oil: 300,\n              wine: 50,\n              fish: 70,\n              flour: 80,\n              clothes: 90,\n              zinc: 15,\n              wolfram: 40,\n              mechanicalParts: 5,\n              chrome : 1,\n              nickel: 2,\n              forestGoods: 50\n            },\n            population: 6.2\n          }\n\n          let finland = {\n            height: 257.1,\n            width: 275,\n            specialities: {\n                1: goods.specific[6],\n                2: goods.additional[2]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150,\n                chrome : 5,\n                nickel: 3,\n                forestGoods: 20\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5\n              },\n              population: 3.5\n            }\n\n            let latvia = {\n              height: 86.1,\n              width: 170,\n              specialities: {\n                  1: goods.specific[7]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5,\n                  chrome : 1,\n                  nickel: 2,\n                  forestGoods: 50\n                },\n                population: 1.9\n              }\n    \n              let estonia = {\n                height: 82.5,\n                width: 150,\n                specialities: {\n                  1: goods.additional[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 1.1\n                }\n\n                let romania = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150,\n                      chrome : 5,\n                      nickel: 3,\n                      forestGoods: 20\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 15\n                  }\n                  let hungary = {\n                    height: 330,\n                    width: 290.4,\n                    specialities: {\n                        1: goods.specific[2],\n                        2: goods.specific[3],\n                        3: goods.main[2]\n                      },  \n                      goodCosts: {\n                        coal: 30,\n                        steel: 70,\n                        aluminium: 80,\n                        copper: 60,\n                        lead: 50,\n                        grain: 5,\n                        oil: 100,\n                        wine: 35,\n                        fish: 5,\n                        flour: 10,\n                        clothes: 20,\n                        zinc: 75,\n                        wolfram: 100,\n                        mechanicalParts: 150,\n                        chrome : 5,\n                        nickel: 3,\n                        forestGoods: 20\n                      },\n                      goodsAvailability: {\n                        coal: 100,\n                        steel: 80,\n                        aluminium: 50,\n                        copper: 120,\n                        lead: 80,\n                        grain: 1000,\n                        oil: 300,\n                        wine: 50,\n                        fish: 70,\n                        flour: 80,\n                        clothes: 90,\n                        zinc: 15,\n                        wolfram: 40,\n                        mechanicalParts: 5\n                      },\n                      population: 8.9\n                    }\n\n            let turkey = {\n            height: 330,\n            width: 290.4,\n            specialities: {\n                1: goods.specific[2],\n                2: goods.specific[3],\n                3: goods.main[2]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150,\n                chrome : 5,\n                nickel: 3,\n                forestGoods: 20\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5\n              },\n              population: 16.2\n            }\n\n\n            let yugoslavia = {\n              height: 330,\n              width: 290.4,\n              specialities: {\n                  1: goods.specific[2],\n                  2: goods.specific[3],\n                  3: goods.main[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5\n                },\n                population: 14\n              }\n\n              let greece = {\n                height: 330,\n                width: 290.4,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 6.8\n                }\n\n\n                let italy = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150,\n                      chrome : 5,\n                      nickel: 3,\n                      forestGoods: 20\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 42\n                  }\n\n            let spain = {\n                height: 330,\n                width: 290.4,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 24\n                }\n\n\n                let portugal = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 7.1\n                  }\n  \n                  let bulgaria = {\n                    height: 330,\n                    width: 290.4,\n                    specialities: {\n                        1: goods.specific[2],\n                        2: goods.specific[3],\n                        3: goods.main[2]\n                      },  \n                      goodCosts: {\n                        coal: 30,\n                        steel: 70,\n                        aluminium: 80,\n                        copper: 60,\n                        lead: 50,\n                        grain: 5,\n                        oil: 100,\n                        wine: 35,\n                        fish: 5,\n                        flour: 10,\n                        clothes: 20,\n                        zinc: 75,\n                        wolfram: 100,\n                        mechanicalParts: 150\n                      },\n                      goodsAvailability: {\n                        coal: 100,\n                        steel: 80,\n                        aluminium: 50,\n                        copper: 120,\n                        lead: 80,\n                        grain: 1000,\n                        oil: 300,\n                        wine: 50,\n                        fish: 70,\n                        flour: 80,\n                        clothes: 90,\n                        zinc: 15,\n                        wolfram: 40,\n                        mechanicalParts: 5\n                      },\n                      population: 6.3\n                    }\n                    \n                    let denmark = {\n                      height: 110,\n                      width: 105.6,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 3.7\n                    }\n              \n                    let belgium = {\n                      height: 110,\n                      width: 105.6,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 8.3\n                    }\n\n                    let netherland = {\n                      height: 110,\n                      width: 105.6,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 8.3\n                    }\n\n                    let albania = {\n                      height: 78.7,\n                      width: 100,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 1\n                    }\n\n                    iceland = {\n                      height: 123.5,\n                      width: 260,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 0.5\n                    }\n\n  \n\n    let switzerland = {\n      height: 80,\n      width: 45.6,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 4.1\n    }\n\n    sicily = {\n      height: 54.2,\n      width: 80,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 4\n    }\n\n    sardynia = {\n      height: 80,\n      width: 53.6,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1\n    }\n\n       sardynia = {\n      height: 80,\n      width: 53.6,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1\n    }\n\n    corsica = {\n      height: 55,\n      width: 34.65,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 0.2\n    }\n\n    algieria = {\n      height: 95.2,\n      width: 280,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 7\n    }\n\n    irelandNorth = {\n      height: 95.2,\n      width: 280,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1.3\n    }\n\n    ireland = {\n      height: 95.2,\n      width: 280,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 3\n    }\n\n    easternPrussia = {\n      height: 155,\n      width: 139.5,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 2.5\n    }\n    \n      listObjects = {\n        \"goods\" : goods,\n        \"ussr\" : ussr,\n        \"germany\" : germany,\n        \"lithuania\" : lithuania,\n        \"poland\" : poland,\n        \"czechoslovakia\" : czechoslovakia,\n        \"greatBritain\" : greatBritain,\n        \"austria\" : austria,\n        \"france\" : france,\n        \"norway\" : norway,\n        \"finland\" : finland,\n        \"sweden\" : sweden,\n        \"latvia\" : latvia,\n        \"estonia\" : estonia,\n        \"romania\" : romania,\n        \"hungary\" : hungary,\n        \"yugoslavia\" : yugoslavia,\n        \"bulgaria\" : bulgaria,\n        \"turkey\" : turkey,\n        \"greece\" : greece,\n        \"italy\" : italy,\n        \"spain\" : spain,\n        \"portugal\" : portugal,\n        \"denmark\" : denmark,\n        \"belgium\" : belgium,\n        \"netherland\" : netherland,\n        \"albania\" : albania,\n        \"iceland\" : iceland,\n        \"switzerland\" : switzerland,\n        \"sicily\" : sicily,\n        \"sardynia\" : sardynia,\n        \"corsica\" : corsica,\n        \"algieria\" : algieria,\n        \"irelandNorth\" : irelandNorth,\n        \"ireland\" : ireland,\n        \"easternPrussia\" : easternPrussia\n    }\n    \n    let myObject = listObjects[searchedObject];\n    return myObject\n  }\n\n"],"names":["root","factory","$parcel$global","window","$c72c4ee5f4be9835$exports","document","newNotifySettings","typesNotify","notifySettings","wrapID","overlayID","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","warning","info","commonConsoleError","message","console","error","commonCheckHeadOrBody","element","commonExtendOptions","extended","deep","i","Object","prototype","toString","call","arguments","merge","obj","prop","hasOwnProperty","length","notifyGetInternalCSSCodes","notifyCreateCounter","notifyCreate","notifyType","callbackOrOptions","options","Notiflix","Notify","init","newNotifySettingsBackup","Array","isArray","newOptions","html","htmlPool","theType","toLocaleLowerCase","createElement","innerHTML","textContent","innerText","substring","ntflxNotifyWrap","getElementById","id","style","zIndex","left","top","right","bottom","margin","classList","add","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","ntflxNotifyOverlay","height","animationDuration","body","appendChild","ntflxNotify","color","setAttribute","closeButtonHTML","svgIcon","notifyWrap","insertBefore","firstChild","eachNotifyElement","timeoutHide","timeoutRemove","hideNotifyElementsAndOverlay","removeOverlay","childElementCount","clearTimeout","removeNotifyElmentsAndWrapper","parentNode","removeChild","querySelector","addEventListener","clickToCloseTimeout","setTimeout","callbackTimeout","autoRemove","remove","allNotifyElmNotTheLastOne","querySelectorAll","eachNotifyElmNotLastOne","userNotifyOptions","getInternalCSSCodes","styleElementId","internalCSS","head","commonSetInternalCSSCodes","userNotifyExtendOptions","define","amd","$0dadba3bf39e36c2$var$_obj","defineProperty","$cec85eba0a352189$exports","value","default","key","enumerable","configurable","writable","$bae75c8f45fcb604$var$currentEndCountryOfTheRoute","$bae75c8f45fcb604$var$startedCountry","$bae75c8f45fcb604$var$selectedWare","$bae75c8f45fcb604$var$endCountryObject","$bae75c8f45fcb604$var$goodPriceInEndCountry","$bae75c8f45fcb604$var$type","$bae75c8f45fcb604$var$lastTransportType","$bae75c8f45fcb604$var$typeDetail","$bae75c8f45fcb604$var$availableGoodQuantity","$bae75c8f45fcb604$var$speedValueOfSelectedTransport","$bae75c8f45fcb604$var$capacityOfSelectedTransport","$bae75c8f45fcb604$var$calculatedIncomeValue","$bae75c8f45fcb604$var$calculatedProfitValue","$bae75c8f45fcb604$var$calculatedCostValue","$bae75c8f45fcb604$var$goodPriceInStartedCountry","$b5f18e0afda4243b$var$selectedCountryName","$b5f18e0afda4243b$var$selectedCountry","$0dadba3bf39e36c2$export$b0e5ad1dc5b27ce1","land","poland","direct","germany","eastPrussia","czechoslovakia","latvia","lithuania","romania","ussr","transit","france","route","spain","portugal","belgium","netherland","denmark","switzerland","distnace","austria","hungary","yugoslavia","albania","greece","distance1","alternativeRoute1","turkey","bulgaria","italy","estonia","finland","sweden","norway","ireland","greatBritain","$parcel$interopDefault","sea","iceland","$e59f609b6dcdba4a$export$498c0b85ef3043bd","vechicles","truck","renaultTTD6","payLoad","cost","speed","renaultABG","renaultYGDD","VolvoLV80","bus","AECtypeQ","passengers","AMO4","LeylandTitan","maritime","passangerShips","steamer","internalCombustion","loadShips","trains","passengerTrains","Mat34","LNERClassA4","DRGClassSVT137","loadTrains","DRGClassSVT877","DRGClass05","Pm2","$bae75c8f45fcb604$var$createTransport","$bae75c8f45fcb604$var$createTransportPanel","$","$bae75c8f45fcb604$var$countryStartNameValue","$bae75c8f45fcb604$var$createTransportPanelSwitchOff","$bae75c8f45fcb604$var$wares","$bae75c8f45fcb604$var$truckOption","$bae75c8f45fcb604$var$busOption","$bae75c8f45fcb604$var$transportTypeList","$bae75c8f45fcb604$export$f87b2b60c133b18c","$bae75c8f45fcb604$var$endCountryOfTheRoute","$bae75c8f45fcb604$var$route","$bae75c8f45fcb604$var$temporaryRouteValues","$bae75c8f45fcb604$var$originNameOfWares","Map","$bae75c8f45fcb604$var$goodCostInStartedCountryValue","$bae75c8f45fcb604$var$goodCostInEndCountryValue","$bae75c8f45fcb604$var$availableQtyValue","$bae75c8f45fcb604$var$howManyToTransportValue","$bae75c8f45fcb604$var$transportTypeValue","$bae75c8f45fcb604$var$calculetedRouteDistance","$bae75c8f45fcb604$var$distanceRoute","$bae75c8f45fcb604$var$routeDistanceValue","$bae75c8f45fcb604$var$bigCountry","$bae75c8f45fcb604$var$clickedCountryTags","$bae75c8f45fcb604$var$meanOfTransport","$bae75c8f45fcb604$var$singularCostValue","$bae75c8f45fcb604$var$calculatedCostValueTag","$bae75c8f45fcb604$var$capacityValue","$bae75c8f45fcb604$var$neccesseryQtyValue","$bae75c8f45fcb604$var$speedValue","$bae75c8f45fcb604$var$neededTransportUnits","$bae75c8f45fcb604$var$earnings","$bae75c8f45fcb604$var$incomeValue","$bae75c8f45fcb604$var$profitValue","$bae75c8f45fcb604$var$transportTypeImg","$bae75c8f45fcb604$var$transportTypeData","$bae75c8f45fcb604$var$transportType","railway","air","plane","airship","$bae75c8f45fcb604$var$lastActiveTransportType","$bae75c8f45fcb604$export$ee673f0af857f314","myObject","$b5f18e0afda4243b$export$5c77d18a3f2ab4f8","$b5f18e0afda4243b$export$cbd655e91ff55665","$eda45b33ab4d3afe$export$8d5a188d4295ebbb","availableGoods","goodsAvailability","availableGood","set","availableGoodName","selectedGoodOption","$bae75c8f45fcb604$export$cca2519918414f75","firstClickedCountryName","event","notifyFailureValue","startedCountry1","$bae75c8f45fcb604$var$blockInfoNotify","cannotAddCountry","toRouteBecauseItIsTheStartingCountry","$b5f18e0afda4243b$export$7ab18902d6f78b3d","includes","distanceForLastCountryInRoute","pop","$b5f18e0afda4243b$export$77947344de1fdbd9","tagToHighlightOff","parentElement","$bae75c8f45fcb604$var$highlightCountryOff","target","$bae75c8f45fcb604$var$calculateCostValue","alreadyAllCountriesDeletedFromRoute","$bae75c8f45fcb604$var$removeLastElementFromRoute","notifyFailureValue1","country","alreadyAddedToRoute","$bae75c8f45fcb604$var$countryAlreadyInRoute","selectedTransportTypeToTransfer","$bae75c8f45fcb604$var$addToRoute","notANeighbors","$bae75c8f45fcb604$var$notANeighborsMessage","lastCountryInRoute","notANeighbors1","startSeaRouteCountry","maritimeRouteFailure","maritimeRouteOverSize","accessToWaterReservoirs","withoutAccessToSeaMessage","doNotHaveAccessToSea","$bae75c8f45fcb604$var$withoutAccessToSea","startedCountry2","isNotANeighborOf","$bae75c8f45fcb604$export$2c5cc0bcea0e0314","currentRoute1","$b5f18e0afda4243b$export$6b159678945a080","nbrInArray","countryName","push","$bae75c8f45fcb604$var$allowToDisplayInfoNotify","$bae75c8f45fcb604$var$setProperMeansOfTransport","transportTypeName","passengersTranslation","truckTranslation","busTranslation","maritimeTranslation","railwayTranslation","$b5f18e0afda4243b$export$63afb81dba78b33e","year","vehicle","$bae75c8f45fcb604$var$addOptionsToMeanOfTransport","buses","passengerShips","passengerShip","loadShip","passengerRailways","passengerRailway","loadRailways","loadRailway","$bae75c8f45fcb604$var$setProperTransportBasedOnGoods","startedCountry3","goodCosts","$bae75c8f45fcb604$var$highlightCountry","tagToHighlight","optionValue","mainTransportTypeName","middleTransportTypeName","$bae75c8f45fcb604$var$displayTransportTypeCapacity","$bae75c8f45fcb604$var$displayTransportTypeSpeed","Math","ceil","$bae75c8f45fcb604$var$calculateNeededTransportUnits","transportTypeValue1","selectedTransportTypeCost","isNaN","$bae75c8f45fcb604$var$calculateEarnings","$bae75c8f45fcb604$var$displayEarningPanel","log","src","backgroundColor","visibility","$b5f18e0afda4243b$export$868558ff7add1989","$b5f18e0afda4243b$export$2ba9baf0d8cdee4c","$b5f18e0afda4243b$export$90bd2b5263e6d4bf","$b5f18e0afda4243b$export$2dd5afd9ae75e48b","$bae75c8f45fcb604$var$cleanRouteDistance","get","startCountryObject","max","originNameOfSelectedTransport","keys","filter","selectedTransportType","lastActiveTransportBeforeChange","$b5f18e0afda4243b$var$pulsingInterval","$b5f18e0afda4243b$var$firstClickedCountryName","$b5f18e0afda4243b$var$smallFlagSrc","$b5f18e0afda4243b$var$clickedPositionY","$b5f18e0afda4243b$var$clickedPositionX","$b5f18e0afda4243b$var$controlPanelWidth","$b5f18e0afda4243b$var$controlPanelHeight","$b5f18e0afda4243b$var$pulsingIntervalCounter","$b5f18e0afda4243b$var$specialitiesList","$b5f18e0afda4243b$var$pauseClicked","$b5f18e0afda4243b$export$1ae1184e010e3f7d","$b5f18e0afda4243b$var$route","$b5f18e0afda4243b$var$timeWatch","day","month","$b5f18e0afda4243b$var$time","hour","$b5f18e0afda4243b$var$factor","$b5f18e0afda4243b$var$goods","main","coal","steel","aluminium","copper","lead","grain","oil","additional","wine","fish","flour","clothes","specific","zinc","wolfram","ideas","mechanicalParts","chrome","nickel","forestGoods","$b5f18e0afda4243b$var$date","$b5f18e0afda4243b$export$e5ad74579c86b003","neighbors","balticSea","blackSea","specialities","population","otherSea","sicily","sardynia","corsica","algieria","irelandNorth","easternPrussia","$b5f18e0afda4243b$var$polishMapLocation","$b5f18e0afda4243b$var$polishMap","$b5f18e0afda4243b$var$lithuanianMapLocation","$b5f18e0afda4243b$var$lithuaniaMap","$b5f18e0afda4243b$var$ussrMapLocation","$b5f18e0afda4243b$var$ussrMap","$b5f18e0afda4243b$var$czechoslovakiaMapLocation","$b5f18e0afda4243b$var$czechoslovakiaMap","$b5f18e0afda4243b$var$austriaMapLocation","$b5f18e0afda4243b$var$austriaMap","$b5f18e0afda4243b$var$germanyMapLocation","$b5f18e0afda4243b$var$germanyMap","$b5f18e0afda4243b$var$easternPrussiaMapLocation","$b5f18e0afda4243b$var$easternPrussiaMap","$b5f18e0afda4243b$var$franceMapLocation","$b5f18e0afda4243b$var$franceMap","$b5f18e0afda4243b$var$greatBritainMapLocation","$b5f18e0afda4243b$var$greatBritainMap","$b5f18e0afda4243b$var$norwayMapLocation","$b5f18e0afda4243b$var$norwayMap","$b5f18e0afda4243b$var$swedenMapLocation","$b5f18e0afda4243b$var$swedenMap","$b5f18e0afda4243b$var$finlandMapLocation","$b5f18e0afda4243b$var$finlandMap","$b5f18e0afda4243b$var$estoniaMapLocation","$b5f18e0afda4243b$var$estoniaMap","$b5f18e0afda4243b$var$latviaMapLocation","$b5f18e0afda4243b$var$latviaMap","$b5f18e0afda4243b$var$denmarkMapLocation","$b5f18e0afda4243b$var$denmarkMap","$b5f18e0afda4243b$var$icelandMapLocation","$b5f18e0afda4243b$var$icelandMap","$b5f18e0afda4243b$var$belgiumMapLocation","$b5f18e0afda4243b$var$belgiumMap","$b5f18e0afda4243b$var$netherlandMapLocation","$b5f18e0afda4243b$var$netherlandMap","$b5f18e0afda4243b$var$hungaryMapLocation","$b5f18e0afda4243b$var$hungaryMap","$b5f18e0afda4243b$var$romaniaMapLocation","$b5f18e0afda4243b$var$romaniaMap","$b5f18e0afda4243b$var$bulgariaMapLocation","$b5f18e0afda4243b$var$bulgariaMap","$b5f18e0afda4243b$var$yugoslaviaMapLocation","$b5f18e0afda4243b$var$yugoslaviaMap","$b5f18e0afda4243b$var$albaniaMapLocation","$b5f18e0afda4243b$var$albaniaMap","$b5f18e0afda4243b$var$greeceMapLocation","$b5f18e0afda4243b$var$greeceMap","$b5f18e0afda4243b$var$turkeyMapLocation","$b5f18e0afda4243b$var$turkeyMap","$b5f18e0afda4243b$var$italyMapLocation","$b5f18e0afda4243b$var$italyMap","$b5f18e0afda4243b$var$sicilyMapLocation","$b5f18e0afda4243b$var$sicilyMap","$b5f18e0afda4243b$var$sardyniaMapLocation","$b5f18e0afda4243b$var$sardyniaMap","$b5f18e0afda4243b$var$corsicaMapLocation","$b5f18e0afda4243b$var$corsicaMap","$b5f18e0afda4243b$var$algieriaMapLocation","$b5f18e0afda4243b$var$algieriaMap","$b5f18e0afda4243b$var$switzerlandMapLocation","$b5f18e0afda4243b$var$switzerlandMap","$b5f18e0afda4243b$var$spainMapLocation","$b5f18e0afda4243b$var$spainMap","$b5f18e0afda4243b$var$portugalMapLocation","$b5f18e0afda4243b$var$portugalMap","$b5f18e0afda4243b$var$irelandNorthMapLocation","$b5f18e0afda4243b$var$irelandNorthMap","$b5f18e0afda4243b$var$irelandMapLocation","$b5f18e0afda4243b$var$irelandMap","$b5f18e0afda4243b$var$dateValueOnMap","$b5f18e0afda4243b$var$dateOnMap","$b5f18e0afda4243b$var$resolutionBodyY","screen","$b5f18e0afda4243b$var$resolution","$b5f18e0afda4243b$var$italyTerritories","$b5f18e0afda4243b$var$franceTerritories","$b5f18e0afda4243b$var$denmarkTerritories","$b5f18e0afda4243b$var$greatBritainTerritories","$b5f18e0afda4243b$var$irishTerritories","$b5f18e0afda4243b$var$germanyTerritories","$b5f18e0afda4243b$var$recalculateCountriesPositionsBasedOnResolution","$b5f18e0afda4243b$var$calculateResoluctionFactor","$b5f18e0afda4243b$var$countrySpecialities","selectedCountryName1","specNbr","$eda45b33ab4d3afe$export$3a3382f266766b5c","selectedCountry1","notifyInfoValue","milionShortcut","specialization","$b5f18e0afda4243b$var$checkItalianTerritoriesMouseover","addClass","$b5f18e0afda4243b$var$checkItalianTerritoriesMouseout","removeClass","$b5f18e0afda4243b$var$checkFrenchTerritoriesMouseover","$b5f18e0afda4243b$var$checkFrenchTerritoriesMouseout","$b5f18e0afda4243b$var$checkDannishTerritoriesMouseover","$b5f18e0afda4243b$var$checkDannishTerritoriesMouseout","$b5f18e0afda4243b$var$checkBritishTerritoriesMouseover","$b5f18e0afda4243b$var$checkBritishTerritoriesMouseout","$b5f18e0afda4243b$var$checkGermanTerritoriesMouseover","$b5f18e0afda4243b$var$checkGermanTerritoriesMouseout","$b5f18e0afda4243b$var$showList","$b5f18e0afda4243b$var$start","$b5f18e0afda4243b$var$startContainer","$b5f18e0afda4243b$var$pause","$b5f18e0afda4243b$var$pauseContainer","$b5f18e0afda4243b$var$clockWheel","$b5f18e0afda4243b$var$pauseLaunched","$b5f18e0afda4243b$var$pulsing","transform","$b5f18e0afda4243b$var$calculateDateTime","hourWatch","$b5f18e0afda4243b$var$changeDate","dateValue1","animationPlayState","clearInterval","calculateDateTimeInterval","setInterval","$b5f18e0afda4243b$var$countryPanelList","$b5f18e0afda4243b$var$placeForFlag","clientHeight","$b5f18e0afda4243b$var$countryFlagActionCountry","$b5f18e0afda4243b$export$5223fb3df9a2777b","clientY","scrollY","clientX","scrollX","transition","goods","languagesListTranslation","e","index","indexOf","children","$eda45b33ab4d3afe$var$polish","$eda45b33ab4d3afe$var$toggleLanguage","$eda45b33ab4d3afe$var$english","$eda45b33ab4d3afe$var$russian","link0","link1","link2","link3","polish","english","russian","selectLanguage","instruction","myAchievements","srcFlagTranslation","chosenLanguageTranslation","mostAvailable","theLeastAvailable","theMostExpensive","theCheapest","pauseLaunched","createTransport","countryMarket","checkCountryDetails","countryStartName","typeOfTransport","wares","selectWare","routeBy","endCountryOfTheRoute","availableQty","goodCostInStartedCountry","goodCostInEndCountry","howManyToTransport","transportType","routeDistance","distanceUnitValue","capacity","quantityNeeded","speedUnitKmH","estimatedArrival","costFor","calculatedCost","income","profit","chosenLanguage","tranlationPlayerPanel","tranlationStockMarket","tranlationStock","translationCountries","translationPolish","translationEnglish","translationRussian","translationSelectLanguage","translationManual","translationMyAchievements","countryStartNameValue","distanceUnit","title","searchedObject","listObjects"],"version":3,"file":"index.74d2f8c6.js.map"}