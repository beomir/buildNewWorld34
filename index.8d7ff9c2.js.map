{"mappings":"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","sources":["node_modules/notiflix/build/notiflix-notify-aio.js","src/js/countryConnections.js","src/js/meansOfTransport.js","src/js/transportPanel.js","src/js/map.js","src/js/translations.js"],"sourcesContent":["/*\n* Notiflix Notify AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // NOTIFY: Default Settings: begin\n  var typesNotify = {\r\n    Success: 'Success',\r\n    Failure: 'Failure',\r\n    Warning: 'Warning',\r\n    Info: 'Info',\r\n  };\r\n  var newNotifySettings;\r\n  var notifySettings = {\r\n    wrapID: 'NotiflixNotifyWrap', // can not customizable\r\n    overlayID: 'NotiflixNotifyOverlay', // can not customizable\r\n    width: '280px',\r\n    position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 110,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\r\n    fontAwesomeIconSize: '34px',\r\n\n    success: {\r\n      background: '#32c682',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-success',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-check-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n\n    failure: {\r\n      background: '#ff5549',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-failure',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-times-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n\n    warning: {\r\n      background: '#eebf31',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-warning',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n\n    info: {\r\n      background: '#26c0d3',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-info',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-info-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n  };\n  // NOTIFY: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // NOTIFY: Get Internal CSS Codes: begin\n  var notifyGetInternalCSSCodes = function () {\r\n    var notifyCSS = '[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}';\r\n    return notifyCSS || null;\r\n  };\n  // NOTIFY: Get Internal CSS Codes: end\n\n  // NOTIFY: Create: begin\n  var notifyCreateCounter = 0;\r\n  var notifyCreate = function (notifyType, message, callbackOrOptions, options) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newNotifySettings) {\r\n      Notiflix.Notify.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newNotifySettingsBackup = commonExtendOptions(true, newNotifySettings, {});\r\n\n    // check callbackOrOptions and options: begin\r\n    if ((typeof callbackOrOptions === 'object' && !Array.isArray(callbackOrOptions)) || (typeof options === 'object' && !Array.isArray(options))) {\r\n      // new options\r\n      var newOptions = {};\r\n      if (typeof callbackOrOptions === 'object') {\r\n        newOptions = callbackOrOptions;\r\n      } else if (typeof options === 'object') {\r\n        newOptions = options;\r\n      }\r\n\n      // extend new settings with the new options\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, newOptions);\r\n    }\r\n    // check callbackOrOptions and options: end\r\n\n    // notify type\r\n    var theType = newNotifySettings[notifyType.toLocaleLowerCase('en')];\r\n\n    // notify counter\r\n    notifyCreateCounter++;\r\n\n    // check the message: begin\r\n    if (typeof message !== 'string') {\r\n      message = 'Notiflix ' + notifyType;\r\n    }\r\n    // check the message: end\r\n\n    // if plainText is true => HTML tags not allowed: begin\r\n    if (newNotifySettings.plainText) {\r\n      message = commonGetPlaintext(message); // message plain text\r\n    }\r\n    // if plainText is true => HTML tags not allowed: end\r\n\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: begin\r\n    if (!newNotifySettings.plainText && message.length > newNotifySettings.messageMaxLength) {\r\n      // extend settings for error massege\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, { closeButton: true, messageMaxLength: 150 });\r\n      // error message\r\n      message = 'Possible HTML Tags Error: The \"plainText\" option is \"false\" and the notification content length is more than the \"messageMaxLength\" option.';\r\n    }\r\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: end\r\n\n    // check message max length: begin\r\n    if (message.length > newNotifySettings.messageMaxLength) {\r\n      message = message.substring(0, newNotifySettings.messageMaxLength) + '...';\r\n    }\r\n    // check message max length: end\r\n\n    // font awesome icon style: begin\r\n    if (newNotifySettings.fontAwesomeIconStyle === 'shadow') {\r\n      theType.fontAwesomeIconColor = theType.background;\r\n    }\r\n    // font awesome icon style: end\r\n\n    // if cssAnimaion is false => duration: begin\r\n    if (!newNotifySettings.cssAnimation) {\r\n      newNotifySettings.cssAnimationDuration = 0;\r\n    }\r\n    // if cssAnimaion is false => duration: end\r\n\n    // notify wrap: begin\r\n    var ntflxNotifyWrap = window.document.getElementById(notifySettings.wrapID) || window.document.createElement('div');\r\n    ntflxNotifyWrap.id = notifySettings.wrapID;\r\n    ntflxNotifyWrap.style.width = newNotifySettings.width;\r\n    ntflxNotifyWrap.style.zIndex = newNotifySettings.zindex;\r\n    ntflxNotifyWrap.style.opacity = newNotifySettings.opacity;\r\n\n    // wrap position: begin\r\n    if (newNotifySettings.position === 'center-center') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n      ntflxNotifyWrap.classList.add('nx-flex-center-center');\r\n      ntflxNotifyWrap.style.maxHeight = 'calc((100vh - ' + newNotifySettings.distance + ') - ' + newNotifySettings.distance + ')';\r\n      ntflxNotifyWrap.style.display = 'flex';\r\n      ntflxNotifyWrap.style.flexWrap = 'wrap';\r\n      ntflxNotifyWrap.style.flexDirection = 'column';\r\n      ntflxNotifyWrap.style.justifyContent = 'center';\r\n      ntflxNotifyWrap.style.alignItems = 'center';\r\n      ntflxNotifyWrap.style.pointerEvents = 'none';\r\n    } else if (newNotifySettings.position === 'center-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'center-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'right-bottom') {\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n    } else if (newNotifySettings.position === 'left-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    } else if (newNotifySettings.position === 'left-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n    } else { // 'right-top' or else\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    }\r\n    // wrap position: end\r\n\n    // if background overlay is true: begin\r\n    if (newNotifySettings.backOverlay) {\r\n      var ntflxNotifyOverlay = window.document.getElementById(notifySettings.overlayID) || window.document.createElement('div');\r\n      ntflxNotifyOverlay.id = notifySettings.overlayID;\r\n      ntflxNotifyOverlay.style.width = '100%';\r\n      ntflxNotifyOverlay.style.height = '100%';\r\n      ntflxNotifyOverlay.style.position = 'fixed';\r\n      ntflxNotifyOverlay.style.zIndex = newNotifySettings.zindex - 1;\r\n      ntflxNotifyOverlay.style.left = 0;\r\n      ntflxNotifyOverlay.style.top = 0;\r\n      ntflxNotifyOverlay.style.right = 0;\r\n      ntflxNotifyOverlay.style.bottom = 0;\r\n      ntflxNotifyOverlay.style.background = theType.backOverlayColor || newNotifySettings.backOverlayColor;\r\n      ntflxNotifyOverlay.className = newNotifySettings.cssAnimation ? 'nx-with-animation' : '';\r\n      ntflxNotifyOverlay.style.animationDuration = newNotifySettings.cssAnimation ? newNotifySettings.cssAnimationDuration + 'ms' : '';\r\n\n      if (!window.document.getElementById(notifySettings.overlayID)) {\r\n        window.document.body.appendChild(ntflxNotifyOverlay);\r\n      }\r\n    }\r\n    // if background overlay is true: end\r\n\n    if (!window.document.getElementById(notifySettings.wrapID)) {\r\n      window.document.body.appendChild(ntflxNotifyWrap);\r\n    }\r\n    // notify wrap: end\r\n\n    // notify content: begin\r\n    var ntflxNotify = window.document.createElement('div');\r\n    ntflxNotify.id = newNotifySettings.ID + '-' + notifyCreateCounter;\r\n    ntflxNotify.className = newNotifySettings.className + ' ' + theType.childClassName + ' ' + (newNotifySettings.cssAnimation ? 'nx-with-animation' : '') + ' ' + (newNotifySettings.useIcon ? 'nx-with-icon' : '') + ' nx-' + newNotifySettings.cssAnimationStyle + ' ' + (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function' ? 'nx-with-close-button' : '') + ' ' + (typeof callbackOrOptions === 'function' ? 'nx-with-callback' : '') + ' ' + (newNotifySettings.clickToClose ? 'nx-notify-click-to-close' : '');\r\n    ntflxNotify.style.fontSize = newNotifySettings.fontSize;\r\n    ntflxNotify.style.color = theType.textColor;\r\n    ntflxNotify.style.background = theType.background;\r\n    ntflxNotify.style.borderRadius = newNotifySettings.borderRadius;\r\n    ntflxNotify.style.pointerEvents = 'all';\r\n\n    // rtl: begin\r\n    if (newNotifySettings.rtl) {\r\n      ntflxNotify.setAttribute('dir', 'rtl');\r\n      ntflxNotify.classList.add('nx-rtl-on');\r\n    }\r\n    // rtl: end\r\n\n    // font-family: begin\r\n    ntflxNotify.style.fontFamily = '\"' + newNotifySettings.fontFamily + '\", ' + defaultFontFamily;\r\n    // font-family: end\r\n\n    // use css animation: begin\r\n    if (newNotifySettings.cssAnimation) {\r\n      ntflxNotify.style.animationDuration = newNotifySettings.cssAnimationDuration + 'ms';\r\n    }\r\n    // use css animation: end\r\n\n    // close button element: begin\r\n    var closeButtonHTML = '';\r\n    if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n      closeButtonHTML = '<span class=\"nx-close-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\"/></g></svg></span>';\r\n    }\r\n    // close buttpon element: end\r\n\n    // use icon: begin\r\n    if (newNotifySettings.useIcon) {\r\n      // use font awesome\r\n      if (newNotifySettings.useFontAwesome) {\r\n        ntflxNotify.innerHTML = '<i style=\"color:' + theType.fontAwesomeIconColor + '; font-size:' + newNotifySettings.fontAwesomeIconSize + ';\" class=\"nx-message-icon nx-message-icon-fa ' + theType.fontAwesomeClassName + ' ' + (newNotifySettings.fontAwesomeIconStyle === 'shadow' ? 'nx-message-icon-fa-shadow' : 'nx-message-icon-fa-basic') + '\"></i><span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n      // use notiflix icon\r\n      else {\r\n        var svgIcon = '';\r\n        if (notifyType === typesNotify.Success) {  // success\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Failure) { // failure\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Warning) { // warning\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Info) { // info\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\"/></g></svg>';\r\n        }\r\n        ntflxNotify.innerHTML = svgIcon + '<span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n    }\r\n    // without icon\r\n    else {\r\n      ntflxNotify.innerHTML = '<span class=\"nx-message\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n    }\r\n    // use icon: end\r\n    // notify content: end\r\n\n    // notify append or prepend: begin\r\n    if (newNotifySettings.position === 'left-bottom' || newNotifySettings.position === 'right-bottom') { // the new one will be first\r\n      var notifyWrap = window.document.getElementById(notifySettings.wrapID);\r\n      notifyWrap.insertBefore(ntflxNotify, notifyWrap.firstChild);\r\n    } else {\r\n      window.document.getElementById(notifySettings.wrapID).appendChild(ntflxNotify);\r\n    }\r\n    // notify append or prepend: end\r\n\n    // remove by timeout or click: begin\r\n    var eachNotifyElement = window.document.getElementById(ntflxNotify.id);\r\n    if (eachNotifyElement) {\r\n      // timeout variables\r\n      var timeoutHide;\r\n      var timeoutRemove;\r\n\n      // hide notify elm and hide overlay: begin\r\n      var hideNotifyElementsAndOverlay = function () {\r\n        eachNotifyElement.classList.add('nx-remove');\r\n        var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n        if (removeOverlay && ntflxNotifyWrap.childElementCount <= 0) {\r\n          removeOverlay.classList.add('nx-remove');\r\n        }\r\n        clearTimeout(timeoutHide);\r\n      };\r\n      // hide notify elm and hide overlay: end\r\n\n      // remove notify elm and wrapper: begin\r\n      var removeNotifyElmentsAndWrapper = function () {\r\n        if (eachNotifyElement && eachNotifyElement.parentNode !== null) {\r\n          eachNotifyElement.parentNode.removeChild(eachNotifyElement);\r\n        }\r\n        if (ntflxNotifyWrap.childElementCount <= 0 && ntflxNotifyWrap.parentNode !== null) { // if childs count === 0 remove wrap\r\n          ntflxNotifyWrap.parentNode.removeChild(ntflxNotifyWrap);\r\n          var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n          if (removeOverlay && removeOverlay.parentNode !== null) {\r\n            removeOverlay.parentNode.removeChild(removeOverlay);\r\n          }\r\n        }\r\n        clearTimeout(timeoutRemove);\r\n      };\r\n      // remove notify elm and wrapper: end\r\n\n      // if has close button and callbackOrOptions is not a function: begin\r\n      if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        var closeButtonElm = window.document.getElementById(ntflxNotify.id).querySelector('span.nx-close-button');\r\n        closeButtonElm.addEventListener('click', function () {\r\n          hideNotifyElementsAndOverlay();\r\n          var clickToCloseTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(clickToCloseTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if has close button and callbackOrOptions is not a function: end\r\n\n      // if callbackOrOptions or click to close: begin\r\n      if (typeof callbackOrOptions === 'function' || newNotifySettings.clickToClose) {\r\n        eachNotifyElement.addEventListener('click', function () {\r\n          if (typeof callbackOrOptions === 'function') {\r\n            callbackOrOptions();\r\n          }\r\n          hideNotifyElementsAndOverlay();\r\n          var callbackTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(callbackTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if callbackOrOptions or click to close: end\r\n\n      // else auto remove: begin\r\n      if (!newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        // auto remove: begin\r\n        var autoRemove = function () {\r\n          timeoutHide = setTimeout(function () {\r\n            hideNotifyElementsAndOverlay();\r\n          }, newNotifySettings.timeout);\r\n          timeoutRemove = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n          }, newNotifySettings.timeout + newNotifySettings.cssAnimationDuration);\r\n        };\r\n        autoRemove();\r\n        // auto remove: end\r\n\n        // pause auto remove: begin\r\n        if (newNotifySettings.pauseOnHover) {\r\n          eachNotifyElement.addEventListener('mouseenter', function () {\r\n            eachNotifyElement.classList.add('nx-paused');\r\n            clearTimeout(timeoutHide);\r\n            clearTimeout(timeoutRemove);\r\n          });\r\n          eachNotifyElement.addEventListener('mouseleave', function () {\r\n            eachNotifyElement.classList.remove('nx-paused');\r\n            autoRemove();\r\n          });\r\n        }\r\n        // pause auto remove: end\r\n      }\r\n      // else auto remove: end\r\n    }\r\n    // remove by timeout or click: end\r\n\n    // notify - show only the last one: begin\r\n    if (newNotifySettings.showOnlyTheLastOne && notifyCreateCounter > 0) {\r\n      var allNotifyElmNotTheLastOne = window.document.querySelectorAll('[id^=' + newNotifySettings.ID + '-]:not([id=' + newNotifySettings.ID + '-' + notifyCreateCounter + '])');\r\n      for (var i = 0; i < allNotifyElmNotTheLastOne.length; i++) {\r\n        var eachNotifyElmNotLastOne = allNotifyElmNotTheLastOne[i];\r\n        if (eachNotifyElmNotLastOne.parentNode !== null) {\r\n          eachNotifyElmNotLastOne.parentNode.removeChild(eachNotifyElmNotLastOne);\r\n        }\r\n      }\r\n    }\r\n    // notify - show only the last one: end\r\n\n    // extend new settings with the backup settings\r\n    newNotifySettings = commonExtendOptions(true, newNotifySettings, newNotifySettingsBackup);\r\n\n  };\n  // NOTIFY: Create: end\n\n  var Notiflix = {\n    Notify: {\r\n      // Init\r\n      init: function (userNotifyOptions) {\r\n        // extend options\r\n        newNotifySettings = commonExtendOptions(true, notifySettings, userNotifyOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(notifyGetInternalCSSCodes, 'NotiflixNotifyInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userNotifyExtendOptions) {\r\n        // if initialized already\r\n        if (newNotifySettings) {\r\n          newNotifySettings = commonExtendOptions(true, newNotifySettings, userNotifyExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Notify module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Success\r\n      success: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Success, message, callbackOrOptions, options);\r\n      },\r\n      // Failure\r\n      failure: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Failure, message, callbackOrOptions, options);\r\n      },\r\n      // Warning\r\n      warning: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Warning, message, callbackOrOptions, options);\r\n      },\r\n      // Info\r\n      info: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Info, message, callbackOrOptions, options);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Notify: Notiflix.Notify });\n  } else {\n    return { Notify: Notiflix.Notify };\n  }\n\n});","\nexport let countryConnections = {\n    land: {\n        poland:{\n            direct:{\n                \"germany\": 573,\n                \"eastPrussia\": 382,\n                \"czechoslovakia\": 637,\n                \"latvia\": 670,\n                \"lithuania\": 409,\n                \"romania\": 1301,\n                \"ussr\": 1264\n            },\n            transit:{\n                france: {\n                    distance: 1594,\n                    route: [\"germany\"]\n                },\n                spain: {\n                    distance: 2859,\n                    route: [\"germany\",\"france\"]\n                }, \n                portugal:{\n                    distance: 3393,\n                    route: [\"germany\",\"france\",\"spain\"]\n                },\n                belgium:{\n                    distance: 1292,\n                    route: [\"germany\"]\n                },\n                netherland:{\n                    distance: 1193,\n                    route: [\"germany\"]\n                },\n                denmark:{\n                    distance: 1331,\n                    route: [\"germany\"]\n                },\n                switzerland:{\n                    distnace: 1443,\n                    route: [\"germany\"]\n                },\n                austria:{\n                    distance: 671,\n                    route: [\"czechoslovakia\"]\n                },\n                hungary:{\n                    distance: 783,\n                    route: [\"czechoslovakia\"]\n                },\n                yugoslavia:{\n                    distance: 1153,\n                    route: [\"czechoslovakia\",\"hungary\"]\n                },\n                albania:{\n                    distance: 1878,\n                    route:  [\"czechoslovakia\",\"hungary\",\"yugoslavia\"]\n                },\n                greece:{\n                    distance: 2244,\n                    route: [\"czechoslovakia\",\"hungary\",\"yugoslavia\"],\n                    distance1: 2464,\n                    alternativeRoute1: [\"romania\",\"bulgaria\"]\n                },\n                turkey:{\n                    distance: 2374,\n                    route: [\"romania\",\"bulgaria\"],\n                    distance1: 2464,\n                    alternativeRoute1: [\"czechoslovakia\",\"hungary\",\"serbia\",\"bulgaria\"]\n                },\n                bulgaria:{\n                    distance: 1674,\n                    route: [\"romania\"]\n                },\n                italy:{\n                    distance: 1783,\n                    route: [\"czechoslovakia\",\"austria\"]\n                },\n                estonia:{\n                    distance: 976,\n                    route: [\"lithuania\",\"latvia\"],\n                    distance1: 1350,\n                    alternativeRoute1: [\"latvia\"]\n                },\n                finland:{\n                    distance: 1556,\n                    route: [\"lithuania\",\"latvia\",\"ussr\"],\n                    distance1: 1726,\n                    alternativeRoute1: [\"ussr\"]\n                },\n                sweden:{\n                    distance: 3212,\n                    route:[\"ussr\",\"finland\"]\n                },\n                norway:{\n                    distance: 3441,\n                    route:[\"ussr\",\"finland\",\"sweden\"]\n                }\n            }\n        \n        },\n        germany:{\n            direct:{\n                \"denmark\": 766,\n                \"netherland\": 655,\n                \"belgium\": 754,\n                \"france\": 1110,\n                \"switzerland\": 959,\n                \"austria\": 987,\n                \"czechoslovakia\": 350,\n                \"poland\": 573,\n                \"lithuania\": 258 // from koningsberg\n            },\n            transit:{\n            }\n        },\n        france:{\n            direct:{\n                \"germany\": 1110,\n                \"spain\": 1275,\n                \"italy\": 1421,\n                \"belgium\": 313,\n                \"switzerland\": 571\n\n            },\n            transit:{\n\n            }\n        },\n        spain:{\n            direct:{\n                \"france\": 1275,\n                \"portugal\": 612\n\n            },\n            transit:{\n                \n            }\n        },\n        portugal:{\n            direct:{\n                \"spain\": 612\n            },\n            transit:{\n                \n            }\n        },\n        italy:{\n            direct:{\n                \"france\" : 1421,\n                \"switzerland\" : 924,\n                \"austria\" : 1122,\n                \"yugoslavia\" : 1277\n            },\n            transit:{\n                \n            }\n        },\n        yugoslavia:{\n            direct:{\n            \"italy\"   : 1277,\n            \"austria\" : 763,\n            \"greece\"  : 1094,\n            \"hungary\" : 378,\n            \"romania\" : 593,\n            \"bulgaria\": 392,\n            \"albania\" : 628\n            },\n            transit:{\n                \n            }\n        },\n        switzerland:{\n            direct:{\n                \"germany\" : 959,\n                \"france\" : 571,\n                \"italy\" : 924,\n                \"austria\" : 887\n            },\n            transit:{\n                \n            }\n        },\n        austria:{\n            direct:{\n                \"germany\" : 987,\n                \"switzerland\" : 887,\n                \"hungary\" : 243,\n                \"yugoslavia\" : 763,\n                \"czechoslovakia\" : 291,\n                \"italy\" : 1122\n            },\n            transit:{\n                \n            }\n        },\n        czechoslovakia:{\n            direct:{\n                \"poland\" : 637,\n                \"germany\" : 350,\n                \"austria\" : 291,\n                \"hungary\" : 525,\n                \"romania\" : 1540\n            },\n            transit:{\n                \n            }\n        },\n        hungary:{\n            direct:{\n                \"czechoslovakia\" : 525,\n                \"austria\" : 243,\n                \"romania\" : 836,\n                \"yugoslavia\" : 378 \n            },\n            transit:{\n                \n            }\n        },\n        romania:{\n            direct:{\n                \"czechoslovakia\" : 1540,\n                \"ussr\" : 1809,\n                \"poland\": 1301,\n                \"hungary\" : 836,\n                \"yugoslavia\": 593,\n                \"bulgaria\" : 356\n            },\n            transit:{\n                \n            }\n        },\n        bulgaria:{\n            direct:{\n                \"turkey\" : 550,\n                \"romania\": 356,\n                \"greece\" : 792,\n                \"yugoslavia\" : 392\n            },\n            transit:{\n                \n            }\n        },\n        albania:{\n            direct:{\n                \"yugoslavia\" : 628,\n                \"greece\" : 730\n            },\n            transit:{\n                \n            }\n        },\n        greece:{\n            direct:{\n                \"yugoslavia\" : 1094,\n                \"turkey\": 1094,\n                \"albania\" : 730,\n                \"bulgaria\": 792\n            },\n            transit:{\n                \n            }\n        },\n        turkey:{ //from stambul\n            direct:{\n                \"ussr\" : 3637,\n                \"bulgaria\" : 550,\n                \"greece\" : 1094\n            },\n            transit:{\n                \n            }\n        },\n        ussr:{\n            direct:{\n                \"finland\" : 1088,\n                \"estonia\" : 1025,\n                \"latvia\" : 925,\n                \"poland\" : 1264,\n                \"romania\" : 1809,\n                \"turkey\" : 3637,\n                \"norway\" : 4661\n            },\n            transit:{\n                \n            }\n        },\n        estonia:{\n            direct:{\n                \"latvia\" : 308,\n                \"ussr\" : 1025\n            },\n            transit:{\n                \n            }\n        },\n        latvia:{\n            direct:{\n                \"estonia\" : 308,\n                \"ussr\" : 925,\n                \"poland\" : 670,\n                \"lithuania\" : 267,\n            },\n            transit:{\n                \n            }\n        },\n        lithuania:{\n            direct:{\n                \"latvia\" : 267,\n                \"germany\" : 258, //koningsberg\n                \"poland\" : 409\n            },\n            transit:{\n                \n            }\n        },\n        finland:{\n            direct:{\n                \"norway\" : 1991,\n                \"sweden\" : 1762,\n                \"ussr\" : 1088,\n            },\n            transit:{\n                \n            }\n        },\n        sweden:{\n            direct:{\n                \"norway\" : 522,\n                \"finland\" : 1762,\n                \"denmark\" : 658,\n            },\n            transit:{\n                \n            }\n        },\n        norway:{\n            direct:{\n                \"sweden\" : 522,\n                \"finland\" : 1991,\n                \"ussr\" : 4661\n            },\n            transit:{\n                \n            }\n        },\n        ireland:{\n            direct:{\n                \"greatBritain\" : 166//belfast\n            },\n            transit:{\n                \n            }\n        },\n        ireland:{\n            direct:{\n                \"greatBritain\" : 166//belfast\n            },\n            transit:{\n                \n            }\n        },\n        denmark:{\n            direct:{\n                \"germany\" : 766,\n                \"sweden\" : 658\n            },\n            transit:{\n                \n            }\n        },\n        greatBritain:{\n            direct:{\n                \"ireland\" : 166//belfast\n            },\n            transit:{\n                \n            }\n        },belgium:{\n            direct:{\n                \"netherland\" : 210,\n                \"france\" : 313,\n                \"germany\" : 754\n            },\n            transit:{\n\n            }\n        },\n        netherland:{\n            direct:{\n                \"belgium\" : 210,\n                \"germany\" : 655\n            },\n            transit:{\n\n            }\n        },\n    },\n    sea:{\n        poland:{ //gdańsk\n            \"sweden\": 638,\n            \"norway\": 996,\n            \"denmark\": 507,\n            \"greatBritain\": 1979,\n            \"lithuania\": 216,\n            \"latvia\": 614,\n            \"estonia\": 751,\n            \"ussr\": 1046,\n            \"finland\": 781,\n            \"germany\": 803,\n            \"netherland\": 1551,\n            \"belgium\": 1796,\n            \"france\": 2027,\n            \"spain\": 2940,\n            \"portugal\": 3524,\n            \"italy\": 5602,\n            \"yugoslavia\": 6789,\n            \"albania\": 6404,\n            \"greece\": 6776,\n            \"turkey\": 7367,\n            \"bulgaria\": 7643,\n            \"romania\": 7730,\n            \"iceland\": 2824,\n            \"ireland\" : 2346\n        },\n        sweden:{ //Sztokholm\n            \"poland\": 638,\n            \"norway\": 1285,\n            \"denmark\": 790,\n            \"greatBritain\": 2268, //southhampton\n            \"lithuania\": 490, //klaipeda\n            \"latvia\": 492, //riga \n            \"estonia\": 401,\n            \"ussr\": 713, //leningrad\n            \"finland\": 438,\n            \"germany\": 1087, //hamburg\n            \"netherland\": 1840,\n            \"belgium\": 2085, //anwerp\n            \"france\": 2316, //cherburg\n            \"spain\": 3229, //bilbao\n            \"portugal\": 3813, //lisboa\n            \"italy\": 5891, //genoa\n            \"yugoslavia\": 7078, //split\n            \"albania\": 6693, //vlore\n            \"greece\": 7065, //pireus\n            \"turkey\": 7656, //istanbul\n            \"bulgaria\": 7932, //varna\n            \"romania\": 8019, //costantza\n            \"iceland\": 3113, //ryjkavik\n            \"ireland\" : 2631 //dublin\n        },\n        finland:{ // Helsinki\n            \"poland\": 781,\n            \"sweden\": 438,\n            \"denmark\": 1027,\n            \"greatBritain\": 2505,\n            \"lithuania\": 624,\n            \"latvia\": 585,\n            \"estonia\": 88,\n            \"ussr\": 316,\n            \"norway\": 1516, \n            \"germany\": 1335,\n            \"netherland\": 2077,\n            \"belgium\": 2322,\n            \"france\": 2553,\n            \"spain\": 3446,\n            \"portugal\": 4050,\n            \"italy\": 6128,\n            \"yugoslavia\": 7315,\n            \"albania\": 6930,\n            \"greece\": 7302,\n            \"turkey\": 7893,\n            \"bulgaria\": 8169,\n            \"romania\": 8256,\n            \"iceland\": 3350,\n            \"ireland\" : 2865\n        },\n        denmark:{ // Kopenhaga\n            \"poland\": 507,\n            \"sweden\": 790,\n            \"finland\": 1027,\n            \"greatBritain\": 1487,\n            \"lithuania\": 598,\n            \"latvia\": 885,\n            \"estonia\": 987,\n            \"ussr\": 1294,\n            \"norway\": 503,\n            \"germany\": 466,\n            \"netherland\": 1059,\n            \"belgium\": 1303,\n            \"france\": 1535,\n            \"spain\": 2448,\n            \"portugal\": 3031,\n            \"italy\": 5109,\n            \"yugoslavia\": 6296,\n            \"albania\": 5911,\n            \"greece\": 6283,\n            \"turkey\": 6874,\n            \"bulgaria\": 7150,\n            \"romania\": 7237,\n            \"iceland\": 2331,\n            \"ireland\" : 1861\n        },\n        greatBritain:{ // Southampton\n            \"poland\": 1979,\n            \"sweden\": 2268,\n            \"finland\": 2505,\n            \"denmark\": 1487,\n            \"lithuania\": 2074, \n            \"latvia\": 2355,\n            \"estonia\": 2466,\n            \"ussr\": 2766,\n            \"norway\": 1401, \n            \"germany\": 935,\n            \"netherland\": 518,\n            \"belgium\": 475,\n            \"france\": 155,\n            \"spain\": 1020,\n            \"portugal\": 1603,\n            \"italy\": 3681,\n            \"yugoslavia\": 4868,\n            \"albania\": 4483,\n            \"greece\": 4855,\n            \"turkey\": 5446,\n            \"bulgaria\": 5722,\n            \"romania\": 5809,\n            \"iceland\": 2342,\n            \"ireland\" : 722\n        },\n        lithuania:{ // Kłajpeda\n            \"poland\": 216,\n            \"sweden\": 490,\n            \"finland\": 624,\n            \"denmark\": 598,\n            \"greatBritain\": 2074, \n            \"latvia\": 430, \n            \"estonia\": 576,\n            \"ussr\": 872,\n            \"norway\": 1056, \n            \"germany\": 888,\n            \"netherland\": 1622,\n            \"belgium\": 1863,\n            \"france\": 2091,\n            \"spain\": 2991,\n            \"portugal\": 3566,\n            \"italy\": 5613,\n            \"yugoslavia\": 6783,\n            \"albania\": 6403,\n            \"greece\": 6770,\n            \"turkey\": 7352,\n            \"bulgaria\": 7624,\n            \"romania\": 7710,\n            \"iceland\": 2876,\n            \"ireland\" : 2440\n        },\n        latvia:{ // Ryga\n            \"poland\": 614,\n            \"sweden\": 492,\n            \"finland\": 585,\n            \"denmark\": 885,\n            \"greatBritain\": 2355, \n            \"lithuania\": 430, \n            \"estonia\": 531,\n            \"ussr\": 834,\n            \"norway\": 1357, \n            \"germany\": 1168,\n            \"netherland\": 1899,\n            \"belgium\": 2140,\n            \"france\": 2368,\n            \"spain\": 3268,\n            \"portugal\": 3843,\n            \"italy\": 5891,\n            \"yugoslavia\": 7060,\n            \"albania\": 6681,\n            \"greece\": 7048,\n            \"turkey\": 7630,\n            \"bulgaria\": 7902,\n            \"romania\": 7988,\n            \"iceland\": 3153,\n            \"ireland\" : 2717\n        },\n        estonia:{ // Talin\n            \"poland\": 751,\n            \"sweden\": 401,\n            \"finland\": 88,\n            \"denmark\": 987,\n            \"greatBritain\": 2466, \n            \"lithuania\": 576, \n            \"latvia\": 531,\n            \"ussr\": 341,\n            \"norway\": 1483, \n            \"germany\": 1277,\n            \"netherland\": 2009,\n            \"belgium\": 2250,\n            \"france\": 2478,\n            \"spain\": 3378,\n            \"portugal\": 3952,\n            \"italy\": 6000,\n            \"yugoslavia\": 7170,\n            \"albania\": 6790,\n            \"greece\": 7157,\n            \"turkey\": 7739,\n            \"bulgaria\": 8011,\n            \"romania\": 8097,\n            \"iceland\": 3263,\n            \"ireland\" : 2826\n        },\n        ussr:{ //from leningrad\n            \"poland\": 1046,\n            \"sweden\": 713,\n            \"finland\": 316,\n            \"denmark\": 1294,\n            \"greatBritain\": 2766, \n            \"lithuania\": 872, \n            \"latvia\": 834,\n            \"estonia\": 341,\n            \"norway\": 1787, \n            \"germany\": 1584,\n            \"netherland\": 2304,\n            \"belgium\": 2545,\n            \"france\": 2774,\n            \"spain\": 3673,\n            \"portugal\": 4248,\n            \"italy\": 6296,\n            \"yugoslavia\": 7466,\n            \"albania\": 7086,\n            \"greece\": 7453,\n            \"turkey\": 8035,\n            \"bulgaria\": 8265,\n            \"romania\": 8393,\n            \"iceland\": 3558,\n            \"ireland\" : 3122\n        },\n        norway:{ // Oslo\n            \"poland\": 996,\n            \"sweden\": 1285,\n            \"denmark\": 503,\n            \"greatBritain\": 1401,\n            \"lithuania\": 1072,\n            \"latvia\": 1377,\n            \"estonia\": 1483,\n            \"ussr\": 1787,\n            \"finland\": 1516,\n            \"germany\": 824,\n            \"netherland\": 970,\n            \"belgium\": 1216,\n            \"france\": 1450,\n            \"spain\": 2363,\n            \"portugal\": 2946,\n            \"italy\": 5024,\n            \"yugoslavia\": 6211,\n            \"albania\": 5826,\n            \"greece\": 6198,\n            \"turkey\": 6789,\n            \"bulgaria\": 7065,\n            \"romania\": 7152,\n            \"iceland\": 2183,\n            \"ireland\" : 1713\n        },\n        germany:{ // Hamburg\n            \"poland\": 803,\n            \"sweden\": 1087,\n            \"finland\": 1335,\n            \"denmark\": 466,\n            \"greatBritain\": 935,\n            \"lithuania\": 888,\n            \"latvia\": 1168,\n            \"estonia\": 1277,\n            \"ussr\": 1584,\n            \"norway\": 824,\n            \"netherland\": 492,\n            \"belgium\": 739,\n            \"france\": 969,\n            \"spain\": 1868,\n            \"portugal\": 2443,\n            \"italy\": 4491,\n            \"yugoslavia\": 5661,\n            \"albania\": 5281,\n            \"greece\": 5648,\n            \"turkey\": 6230,\n            \"bulgaria\": 6502,\n            \"romania\": 6588,\n            \"iceland\": 2252,\n            \"ireland\" : 1607\n        },\n        netherland:{ // Amsterdam\n            \"poland\": 1551,\n            \"sweden\": 1840,\n            \"finland\": 2077,\n            \"denmark\": 1059,\n            \"greatBritain\": 518,\n            \"lithuania\": 1622,\n            \"latvia\": 1899,\n            \"estonia\": 2009,\n            \"ussr\": 2304,\n            \"norway\": 970,\n            \"germany\": 492,\n            \"belgium\": 326,\n            \"france\": 558,\n            \"spain\": 1458,\n            \"portugal\": 2033,\n            \"italy\": 4080,\n            \"yugoslavia\": 5250,\n            \"albania\": 4870,\n            \"greece\": 5237,\n            \"turkey\": 5819,\n            \"bulgaria\": 6091,\n            \"romania\": 6177,\n            \"iceland\": 2120,\n            \"ireland\" : 1197\n        },\n        belgium:{ // Antwerpia\n            \"poland\": 1796,\n            \"sweden\": 2085,\n            \"finland\": 2322,\n            \"denmark\": 1303,\n            \"greatBritain\": 475,\n            \"lithuania\": 1863,\n            \"latvia\": 2140,\n            \"estonia\": 2250,\n            \"ussr\": 2545,\n            \"norway\": 1216,\n            \"germany\": 739,\n            \"netherland\": 326,\n            \"france\": 516,\n            \"spain\": 1416,\n            \"portugal\": 1991,\n            \"italy\": 4038,\n            \"yugoslavia\": 5208,\n            \"albania\": 4828,\n            \"greece\": 5195,\n            \"turkey\": 5777,\n            \"bulgaria\": 6049,\n            \"romania\": 6135,\n            \"iceland\": 2279,\n            \"ireland\" : 1155\n        },\n        france:{ //from cherbourg\n            \"poland\": 2027,\n            \"sweden\": 2316,\n            \"finland\": 2553,\n            \"denmark\": 1535,\n            \"greatBritain\": 155,\n            \"lithuania\": 2091,\n            \"latvia\": 2368,\n            \"estonia\": 2478,\n            \"ussr\": 2774,\n            \"norway\": 1450,\n            \"germany\": 969,\n            \"netherland\": 558,\n            \"belgium\": 516,\n            \"spain\": 919,\n            \"portugal\": 1494,\n            \"italy\": 3542,\n            \"yugoslavia\": 4712,\n            \"albania\": 4332,\n            \"greece\": 4699,\n            \"turkey\": 5271,\n            \"bulgaria\": 5553,\n            \"romania\": 5639,\n            \"iceland\": 2263,\n            \"ireland\" : 678\n        },\n        spain:{ //from bilbao\n            \"poland\": 2940,\n            \"sweden\": 3229,\n            \"finland\": 3446,\n            \"denmark\": 2448,\n            \"greatBritain\": 1020,\n            \"lithuania\": 2991,\n            \"latvia\": 3268,\n            \"estonia\": 3378,\n            \"ussr\": 3673,\n            \"norway\": 2363,\n            \"germany\": 1868,\n            \"netherland\": 1458,\n            \"belgium\": 1416,\n            \"france\": 919,\n            \"portugal\": 1069,\n            \"italy\": 3117,\n            \"yugoslavia\": 4286,\n            \"albania\": 3907,\n            \"greece\": 4274,\n            \"turkey\": 4856,\n            \"bulgaria\": 5128,\n            \"romania\": 5214,\n            \"iceland\": 2660,\n            \"ireland\" : 1153\n        },\n        portugal:{ // Lizbona\n            \"poland\": 3524,\n            \"sweden\": 3813,\n            \"finland\": 4050,\n            \"denmark\": 3031,\n            \"greatBritain\": 1603,\n            \"lithuania\": 3566,\n            \"latvia\": 3843,\n            \"estonia\": 3952,\n            \"ussr\": 4248,\n            \"norway\": 2946,\n            \"germany\": 2443,\n            \"netherland\": 2033,\n            \"belgium\": 1991,\n            \"france\": 1494,\n            \"spain\": 1069,\n            \"italy\": 2091,\n            \"yugoslavia\": 3261,\n            \"albania\": 2881,\n            \"greece\": 3248,\n            \"turkey\": 3830,\n            \"bulgaria\": 4102,\n            \"romania\": 4188,\n            \"iceland\": 2993,\n            \"ireland\" : 1677\n        },\n        italy:{ //from genoa\n            \"poland\": 5602,\n            \"sweden\": 5891,\n            \"finland\": 6128,\n            \"denmark\": 5109,\n            \"greatBritain\": 3681,\n            \"lithuania\": 5613,\n            \"latvia\": 5891,\n            \"estonia\": 6000,\n            \"ussr\": 6296,\n            \"norway\": 5024,\n            \"germany\": 4491,\n            \"netherland\": 4080,\n            \"belgium\": 4038,\n            \"france\": 3542,\n            \"spain\": 3117,\n            \"portugal\": 2091,\n            \"yugoslavia\": 1735,\n            \"albania\": 1355,\n            \"greece\": 1773,\n            \"turkey\": 2345,\n            \"bulgaria\": 2617,\n            \"romania\": 2702,\n            \"iceland\": 5062,\n            \"ireland\" : 3728\n        },\n        yugoslavia:{ //from split\n            \"poland\": 6789,\n            \"sweden\": 7078,\n            \"finland\": 7315,\n            \"denmark\": 6296,\n            \"greatBritain\": 4868,\n            \"lithuania\": 6783,\n            \"latvia\": 7060,\n            \"estonia\": 7170,\n            \"ussr\": 7466,\n            \"norway\": 6211,\n            \"germany\": 5661,\n            \"netherland\": 5250,\n            \"belgium\": 5208,\n            \"france\": 4712,\n            \"spain\": 4286,\n            \"portugal\": 3261,\n            \"italy\": 1735,\n            \"albania\": 494,\n            \"greece\": 1237,\n            \"turkey\": 1808,\n            \"bulgaria\": 2080,\n            \"romania\": 2166,\n            \"iceland\": 6232,\n            \"ireland\" : 4898\n        },\n        albania:{ // Vlore\n            \"poland\": 6404,\n            \"sweden\": 6693,\n            \"finland\": 6930,\n            \"denmark\": 5911,\n            \"greatBritain\": 4483,\n            \"lithuania\": 6403,\n            \"latvia\": 6681,\n            \"estonia\": 6790,\n            \"ussr\": 7086,\n            \"norway\": 5826,\n            \"germany\": 5281,\n            \"netherland\": 4870,\n            \"belgium\": 4828,\n            \"france\": 4332,\n            \"spain\": 3907,\n            \"portugal\": 2881,\n            \"italy\": 1335,\n            \"yugoslavia\": 494,\n            \"greece\": 803,\n            \"turkey\": 1374,\n            \"bulgaria\": 1646,\n            \"romania\": 1731,\n            \"iceland\": 5852,\n            \"ireland\" : 4518\n        },\n        greece:{ //from pireus\n            \"poland\": 6776,\n            \"sweden\": 7065,\n            \"finland\": 7302,\n            \"denmark\": 6283,\n            \"greatBritain\": 4855,\n            \"lithuania\": 6770,\n            \"latvia\": 7048,\n            \"estonia\": 7157,\n            \"ussr\": 7453,\n            \"norway\": 6198,\n            \"germany\": 5648,\n            \"netherland\": 5237,\n            \"belgium\": 5195,\n            \"france\": 4699,\n            \"spain\": 4274,\n            \"portugal\": 3248,\n            \"italy\": 1773,\n            \"yugoslavia\": 1237,\n            \"albania\": 803,\n            \"turkey\": 642,\n            \"bulgaria\": 914,\n            \"romania\": 1000,\n            \"iceland\": 6219,\n            \"ireland\" : 4885\n        },\n        turkey:{ //from istanbul\n            \"poland\": 7367,\n            \"sweden\": 7656,\n            \"finland\": 7893,\n            \"denmark\": 6874,\n            \"greatBritain\": 5446,\n            \"lithuania\": 7352,\n            \"latvia\": 7630,\n            \"estonia\": 7739,\n            \"ussr\": 8035,\n            \"norway\": 6789,\n            \"germany\": 6230,\n            \"netherland\": 5237,\n            \"belgium\": 5819,\n            \"france\": 5777,\n            \"spain\": 5271,\n            \"portugal\": 4856,\n            \"italy\": 3830,\n            \"yugoslavia\": 2345,\n            \"albania\": 1808,\n            \"greece\": 1374,\n            \"bulgaria\": 271,\n            \"romania\": 357,\n            \"iceland\": 6801,\n            \"ireland\" : 5467\n        },\n        bulgaria:{ //from varna\n            \"poland\": 7643,\n            \"sweden\": 7932,\n            \"finland\": 8169,\n            \"denmark\": 7150,\n            \"greatBritain\": 5722,\n            \"lithuania\": 7624,\n            \"latvia\": 7902,\n            \"estonia\": 8011,\n            \"ussr\": 8265,\n            \"norway\": 7065,\n            \"germany\": 6502,\n            \"netherland\": 6091,\n            \"belgium\": 6049,\n            \"france\": 5553,\n            \"spain\": 5128,\n            \"portugal\": 4102,\n            \"italy\": 2617,\n            \"yugoslavia\": 2080,\n            \"albania\": 1646,\n            \"greece\": 914,\n            \"turkey\": 271,\n            \"romania\": 138,\n            \"iceland\": 7073,\n            \"ireland\" : 5739\n        },\n        romania:{ // Kostancja\n            \"poland\": 7730,\n            \"sweden\": 8019,\n            \"finland\": 8256,\n            \"denmark\": 7237,\n            \"greatBritain\": 5809,\n            \"lithuania\": 7710,\n            \"latvia\": 7988,\n            \"estonia\": 8097,\n            \"ussr\": 8393,\n            \"norway\": 7152,\n            \"germany\": 6588,\n            \"netherland\": 6177,\n            \"belgium\": 6135,\n            \"france\": 5639,\n            \"spain\": 5214,\n            \"portugal\": 4188,\n            \"italy\": 2702,\n            \"yugoslavia\": 2166,\n            \"albania\": 1731,\n            \"greece\": 1000,\n            \"turkey\": 357,\n            \"bulgaria\": 138,\n            \"iceland\": 7159,\n            \"ireland\" : 5825\n        },\n        iceland:{ //Reykiavik\n            \"poland\": 2824,\n            \"sweden\": 3113,\n            \"finland\": 3350,\n            \"denmark\": 2331,\n            \"greatBritain\": 2342,\n            \"lithuania\": 2876,\n            \"latvia\": 3153,\n            \"estonia\": 3263,\n            \"ussr\": 3558,\n            \"norway\": 2183,\n            \"germany\": 2252,\n            \"netherland\": 2252,\n            \"belgium\": 2279,\n            \"france\": 2263,\n            \"spain\": 2660,\n            \"portugal\": 2993,\n            \"italy\": 5062,\n            \"yugoslavia\": 6232,\n            \"albania\": 5852,\n            \"greece\": 6219,\n            \"turkey\": 6801,\n            \"bulgaria\": 7073,\n            \"romania\": 7159,\n            \"ireland\" : 1635\n        },\n        ireland:{ //Dublin\n            \"poland\": 2346,\n            \"sweden\": 2631,\n            \"finland\": 2865,\n            \"denmark\": 1861,\n            \"greatBritain\": 722,\n            \"lithuania\": 2440, \n            \"latvia\": 2717,\n            \"estonia\": 2826,\n            \"ussr\": 3122,\n            \"norway\": 1713, \n            \"germany\": 1607,\n            \"netherland\": 1197,\n            \"belgium\": 1155,\n            \"france\": 678,\n            \"spain\": 1153,\n            \"portugal\": 1677,\n            \"italy\": 3728,\n            \"yugoslavia\": 4898,\n            \"albania\": 4518,//\n            \"greece\": 4885,\n            \"turkey\": 5467,\n            \"bulgaria\": 5739,\n            \"romania\": 5825,\n            \"iceland\": 1635 \n        }\n    }\n}","export const meansOfTransportList = {\n    1935:{\n        vechicles:{\n                truck:{\n                        renaultTTD6:{\n                            payLoad: 15,\n                            cost: 1,\n                            speed: 20\n                        },\n                        renaultABG:{\n                            payLoad: 10,\n                            cost: 0.77,\n                            speed: 23\n                        },\n                        renaultYGDD:{\n                            payLoad: 6,\n                            cost: 0.47,\n                            speed: 21\n                        },\n                        VolvoLV80:{\n                            payLoad: 5,\n                            cost: 0.43,\n                            speed: 19\n                        }\n                    },\n                bus:{\n                    AECtypeQ:{\n                        passengers: 30,\n                        cost: 0.9,\n                        speed: 22\n                    },\n                    AMO4:{\n                        passengers: 22,\n                        cost: 0.8,\n                        speed: 20\n                    },\n                    LeylandTitan:{\n                        passengers: 51,\n                        cost: 1,\n                        speed: 20\n                    }\n                }  \n        },\n        maritime:{\n            passangerShips:{\n                    steamer:{\n                        passengers: 700,\n                        cost: 30,\n                        speed: 12\n                    },\n                    internalCombustion:{\n                        passengers: 1000,\n                        cost: 50,\n                        speed: 15\n                    }\n                },\n            loadShips:{\n                    steamer:{\n                        payLoad: 150,\n                        cost: 30,\n                        speed: 25\n                    },\n                    internalCombustion:{\n                        payLoad: 170,\n                        cost: 50,\n                        speed: 30\n                    }\n                }\n            },\n        trains:{\n                passengerTrains:{\n                    Mat34:{\n                        passengers: 150,\n                        cost: 30,\n                        speed: 50\n                    },\n                    LNERClassA4:{\n                        passengers: 140,\n                        cost: 29,\n                        speed: 48\n                    },\n                    DRGClassSVT137:{\n                        passengers: 130,\n                        cost: 28,\n                        speed: 46\n                    }\n\n                }, \n                loadTrains:{\n                    DRGClassSVT877:{\n                        payLoad: 300,\n                        cost: 50,\n                        speed: 30\n                    },\n                    DRGClass05:{\n                        payLoad: 250,\n                        cost: 45,\n                        speed: 25\n                    },\n                    Pm2:{\n                        payLoad: 220,\n                        cost: 44,\n                        speed: 15\n                    }\n                }\n            }\n    }\n}\n\nexport let additionalTransportCost = {\n    trucks: 0.3,\n    bus: 0.3,\n    passengerTrains: 10,\n    loadTrains: 10,\n    passangerShips: 150,\n    loadShips: 150\n}","import {clickedCountryName, listObjects, hideActionForCountryList, toggleCountryPanelListClicked, toggleClickedCreateTransport,cleanCurrentRoute,currentRoute,currentRouteTranslated,lastClickedCountryTag,dateValue} from './map';\nimport {selectedLanguage} from './translations';\nimport {countryConnections} from './countryConnections';\nimport {meansOfTransportList,additionalTransportCost} from './meansOfTransport'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst createTransport = document.querySelector(\"#createTransport\")\nconst createTransportPanel = $(\".createTransportPanel\")[0];\nconst countryStartNameValue = $(\".countryStartNameValue\")[0];\nconst createTransportPanelSwitchOff = $(\".createTransportPanelSwitchOff\")[0];\n\nconst wares = $(\".wares\")[0];\nconst truckOption = document.getElementById(\"truck\");\nconst busOption = document.getElementById(\"bus\");\nconst transportTypeList = document.getElementById(\"transportTypeList\");\n\nconst blockageForInfoNotifyTime = 5000;\nexport let blockageForInfoNotify = false;\nconst endCountryOfTheRoute = $(\".endCountryOfTheRoute\")[1];\nlet currentEndCountryOfTheRoute;\n\nconst route = $(\".route\")[0];\nlet temporaryRouteValues = [];\nlet startedCountry;\nconst originNameOfWares = new Map();\n\nconst goodCostInStartedCountryValue = $(\".goodCostInStartedCountryValue\")[0];\nconst goodCostInEndCountryValue = $(\".goodCostInEndCountryValue\")[0];\nconst availableQtyValue = $(\".availableQtyValue\")[0];\nlet selectedWare;\n\nlet endCountryObject;\nlet goodPriceInEndCountry;\nconst howManyToTransportValue = document.getElementById(\"howManyToTransportValue\");\nconst transportTypeValue = document.getElementById(\"transportTypeValue\");\n\nlet type;\nlet lastTransportType;\nlet typeDetail;\nlet calculetedRouteDistance = 0;\n\nlet distanceRoute = [];\nconst routeDistanceValue = $(\".routeDistanceValue\")[0];\nconst bigCountry = [\"ussr\",\"germany\",\"france\",\"italy\",\"spain\",\"sweden\",\"norwnpmay\",\"poland\",\"greatBritain\"];\nlet clickedCountryTags = [];\n\nconst originalNameOfVehicles = new Map(); // to future use for translate for example ship names\nconst meanOfTransport = document.querySelector(\".meanOfTransport\");\nconst singularCostValue = document.querySelector(\".singularCostValue\");\n\nconst calculatedCostValueTag = document.querySelector(\".calculatedCostValue\");\nlet availableGoodQuantity;\nconst capacityValue = document.querySelector(\".capacityValue\");\nconst neccesseryQtyValue = document.querySelector(\".neccesseryQtyValue\");\n\nconst speedValue = document.querySelector(\".speedValue\");\nlet speedValueOfSelectedTransport;\nlet capacityOfSelectedTransport;\nlet neededTransportUnits = 0;\n\nconst earnings = document.getElementById(\"earnings\");\nconst incomeValue = document.querySelector(\".incomeValue\");\nconst profitValue = document.querySelector(\".profitValue\");\nlet calculatedIncomeValue;\n\nlet calculatedProfitValue;\nlet calculatedCostValue;\nlet goodPriceInStartedCountry;\nconst transportTypeImg = document.querySelector(\".transportTypeImg\");\n\nconst transportTypeData = document.querySelector(\".transportTypeData\")\n\n\nlet transportType =  {\n    land:{\n        bus: true,\n        railway: false,\n        truck: false\n    },\n    sea:{\n        maritime: false\n    },\n    air:{\n        plane: false,\n        airship: false\n    }\n}\n\nlet lastActiveTransportType = [\"land\",\"bus\"];\n\n\n\ncreateTransport.addEventListener(\"click\", \nfunction(){ \n    hideActionForCountryList();\n    toggleCountryPanelListClicked();\n    toggleClickedCreateTransport();\n    cleanCurrentRoute();\n\n    setProperTransportBasedOnGoods();\n\n    startedCountry = clickedCountryName;\n    addAvaiableGoodOptions();\n    countryStartNameValue.innerHTML = selectedLanguage[clickedCountryName];\n\n    createTransportPanel.style.visibility = \"visible\";\n    highlightCountry(startedCountry,lastClickedCountryTag);\n\n});\n\nexport function addAvaiableGoodOptions(){\n\n    let myObject = listObjects[clickedCountryName];\n    const availableGoodOption = $(\".availableGoodOption\");\n    availableGoodOption.remove();\n    let passengers = document.createElement('option');\n\n    passengers.classList.add('availableGoodOption');\n    passengers.value = selectedLanguage.passengers;\n    passengers.innerHTML = selectedLanguage.passengers;\n    wares.appendChild(passengers);\n\n    let availableGoods = myObject.goodsAvailability;\n\n    for(let availableGood in availableGoods){\n\n        originNameOfWares.set(selectedLanguage[availableGood],availableGood)\n\n        let availableGoodName = selectedLanguage[availableGood];\n        let selectedGoodOption = document.createElement('option');\n        selectedGoodOption.classList.add('availableGoodOption');\n        selectedGoodOption.value = availableGoodName;\n\n        selectedGoodOption.innerHTML = availableGoodName;\n        wares.appendChild(selectedGoodOption);\n    }\n}\n\ncreateTransportPanelSwitchOff.addEventListener('click',function(){\n    createTransportPanel.style.visibility = \"hidden\";\n    earnings.style.visibility = \"hidden\";\n    cleanCurrentRoute();\n    toggleClickedCreateTransport();\n    cleanRouteDistance();\n\n    currentEndCountryOfTheRoute = null;\n    endCountryOfTheRoute.innerHTML = \"\";\n    goodPriceInEndCountry = 0;\n    goodCostInEndCountryValue.innerHTML = 0\n\n    howManyToTransportValue.value = 0;\n    availableQtyValue.innerHTML = 0;\n\n    goodCostInStartedCountryValue.innerHTML = \"\";\n    wares.value = selectedLanguage[\"passengers\"];\n\n})\n\nexport function buildRoute(firstClickedCountryName,event){\n    \n    if(startedCountry == firstClickedCountryName){\n        let notifyFailureValue = startCountryCannotBeAPartOfRoute(startedCountry);\n        Notify.failure(notifyFailureValue);\n    }\n    else if(!currentRoute.includes(firstClickedCountryName)){\n        let selectedTransportTypeToTransfer\n            //land type:\n            if(lastActiveTransportType[0] == \"land\"){\n                selectedTransportTypeToTransfer = \"land\";\n                if(currentRoute.length == 0){\n                    let startLandRouteCountry = countryConnections.land[startedCountry].direct \n\n                    //check startedCountry neighbors\n                    if(startLandRouteCountry[firstClickedCountryName] != null){\n                        addToRoute(firstClickedCountryName,startedCountry,selectedTransportTypeToTransfer,event);\n                    } else{\n                        let notANeighbors = notANeighborsMessage(startedCountry,firstClickedCountryName)\n                        Notify.failure(notANeighbors);\n                    }\n                    \n                }else{\n                    let lastCountryInRoute = currentRoute[currentRoute.length - 1];\n                    let lastCountryInRouteConnections = countryConnections.land[lastCountryInRoute].direct\n\n                    if(lastCountryInRouteConnections[firstClickedCountryName] != null){\n                        addToRoute(firstClickedCountryName,startedCountry,selectedTransportTypeToTransfer,event);\n                    }else{\n                        let notANeighbors = notANeighborsMessage(lastCountryInRoute,firstClickedCountryName)\n                        Notify.failure(notANeighbors);\n                    }  \n                }\n            } else if(lastActiveTransportType[0] == \"sea\"){\n                selectedTransportTypeToTransfer = \"sea\";\n                let startSeaRouteCountry = countryConnections.sea[startedCountry]\n                if(currentRoute.length > 0){\n                    let maritimeRouteFailure = selectedLanguage.maritimeRouteOverSize;\n                    blockInfoNotify();\n                    Notify.failure(maritimeRouteFailure);\n                }\n                else if(startSeaRouteCountry[firstClickedCountryName] != null){\n                    addToRoute(firstClickedCountryName,startedCountry,selectedTransportTypeToTransfer,event);\n                }else if(!listObjects[firstClickedCountryName].accessToWaterReservoirs){\n                    let withoutAccessToSeaMessage = withoutAccessToSea(firstClickedCountryName);\n                    Notify.failure(withoutAccessToSeaMessage);\n                }\n            }\n    } else if(firstClickedCountryName == currentRoute[currentRoute.length - 1]){\n        removeLastElementFromRoute(event,firstClickedCountryName);\n    } else{\n        let notifyFailureValue = countryAlreadyInRoute(firstClickedCountryName)\n        Notify.failure(notifyFailureValue)\n    }\n}\n\nfunction countryAlreadyInRoute(firstClickedCountryName){\n    blockInfoNotify();\n    return selectedLanguage.country + \": <strong>\" + selectedLanguage[firstClickedCountryName] + \"</strong>, \" + selectedLanguage.alreadyAddedToRoute\n}\n\nfunction startCountryCannotBeAPartOfRoute(startedCountry){\n    blockInfoNotify();\n    return selectedLanguage.cannotAddCountry + \": <strong>\" + selectedLanguage[startedCountry] + \"</strong> \" + selectedLanguage.toRouteBecauseItIsTheStartingCountry\n}\n\nfunction notANeighborsMessage(startedCountry,firstClickedCountryName){\n    blockInfoNotify();\n    return \"<strong>\" +selectedLanguage[startedCountry] + \"</strong> \" + selectedLanguage.isNotANeighborOf +\": <strong><i>\" +  selectedLanguage[firstClickedCountryName] + \"</i></strong>\";\n}\n\nfunction withoutAccessToSea(firstClickedCountryName){\n    blockInfoNotify();\n    return \"<strong>\" + selectedLanguage[firstClickedCountryName] + \"</strong> \" + selectedLanguage.doNotHaveAccessToSea\n}\n\nfunction alreadyAllCountriesDeletedFromRoute(){\n    blockInfoNotify();\n    return selectedLanguage.alreadyAllCountriesDeletedFromRoute;\n}\n\nexport function translateCurrentRoute(currentRoute){\n    cleanCurrentRoute();\n    if(temporaryRouteValues.length>0){\n        currentRoute = temporaryRouteValues;\n    }\n    if(currentRoute.length>0){\n        for(let nbrInArray in currentRoute){\n            let countryName = currentRoute[nbrInArray];\n            currentRouteTranslated.push(selectedLanguage[countryName])\n                if(!temporaryRouteValues.includes(countryName)){\n                temporaryRouteValues.push(countryName)\n            }\n            route.innerHTML = currentRouteTranslated;\n        }\n    }\n    //translate typeOfTransportValue\n    transportTypeValue.innerHTML = selectedLanguage[lastActiveTransportType[0]];\n\n\n}\n\nwares.addEventListener(\"change\",function(){\n\n    setProperTransportBasedOnGoods();  \n    calculateCostValue()\n    setProperMeansOfTransport(transportTypeList.value);  \n    selectedWare = originNameOfWares.get(wares.value);\n    let startCountryObject = listObjects[startedCountry];\n    \n    availableGoodQuantity = startCountryObject.goodsAvailability[selectedWare];\n    goodPriceInStartedCountry = startCountryObject.goodCosts[selectedWare];\n    \n    goodCostInStartedCountryValue.innerHTML = goodPriceInStartedCountry;\n    availableQtyValue.innerHTML = availableGoodQuantity;\n    howManyToTransportValue.max = availableGoodQuantity;\n\n        if(currentEndCountryOfTheRoute !=null){\n        endCountryObject = listObjects[currentEndCountryOfTheRoute];\n        goodPriceInEndCountry = endCountryObject.goodCosts[selectedWare];\n        goodCostInEndCountryValue.innerHTML = goodPriceInEndCountry;\n    }\n        if(howManyToTransportValue.value > availableGoodQuantity){\n        howManyToTransportValue.value = availableGoodQuantity;\n    }\n});\n\nhowManyToTransportValue.addEventListener(\"change\",function(){\n    if(howManyToTransportValue.value>availableGoodQuantity){\n        howManyToTransportValue.value = availableGoodQuantity;\n    }\n    if(howManyToTransportValue.value<0){\n        howManyToTransportValue.value = 0;\n    }\n    \n    calculateCostValue();\n})\n\ntransportTypeList.addEventListener(\"change\",function(){\n    originNameOfSelectedTransport = getObjKeysByObjectAndValue(selectedLanguage,transportTypeList.value)[0];\n    let lastActiveTransportBeforeChange = lastActiveTransportType[0];\n    \n    checkWhichTransportType(originNameOfSelectedTransport);\n    setProperMeansOfTransport(transportTypeList.value);\n    calculateCostValue();\n    \n    if(lastActiveTransportBeforeChange != lastActiveTransportType[0]){\n         cleanCurrentRoute();\n         resetCostsAndEarnings();\n         distanceRoute = [];\n         calculetedRouteDistance = 0;\n         routeDistanceValue.innerHTML = calculetedRouteDistance;\n     \n         for(let i=0; i < clickedCountryTags.length; i++){\n             clickedCountryTags[i].parentElement.classList.remove(\"inRouteBigCountry\");\n             clickedCountryTags[i].classList.remove(\"inRouteBorderBigCountry\");\n             clickedCountryTags[i].parentElement.classList.remove(\"inRoute\");\n             clickedCountryTags[i].classList.remove(\"inRouteBorder\");\n         };\n\n         clickedCountryTags = [];\n\n        currentEndCountryOfTheRoute = null;\n        endCountryOfTheRoute.innerHTML = \"\";\n        goodPriceInEndCountry = 0;\n        goodCostInEndCountryValue.innerHTML = 0;\n        \n\n    }\n})\n\nfunction blockInfoNotify(){\n    blockageForInfoNotify = true;\n    setTimeout(allowToDisplayInfoNotify, blockageForInfoNotifyTime);\n}\n\nfunction allowToDisplayInfoNotify(){\n    blockageForInfoNotify = false;\n}\n\nfunction setProperMeansOfTransport(transportTypeName){\n    let passengersTranslation = selectedLanguage[\"passengers\"];\n    let truckTranslation = selectedLanguage[\"truck\"];\n    let busTranslation = selectedLanguage[\"bus\"]; \n    let maritimeTranslation = selectedLanguage[\"maritime\"]; \n    let railwayTranslation = selectedLanguage[\"railway\"];\n\n    const transportModel = $(\".transportModel\");\n    transportModel.remove();\n\n    if(transportTypeName == truckTranslation){\n        let vechicles = meansOfTransportList[dateValue.year].vechicles.truck\n        for(let vehicle in vechicles){\n            addOptionsToMeanOfTransport(vehicle);\n        }\n    } else if(transportTypeName == busTranslation){\n        let buses = meansOfTransportList[dateValue.year].vechicles.bus\n        for(let bus in buses){\n            addOptionsToMeanOfTransport(bus);\n        }\n\n    } else if(transportTypeName == maritimeTranslation){\n            if(wares.value == passengersTranslation){\n                let passengerShips = meansOfTransportList[dateValue.year].maritime.passangerShips\n                for(let passengerShip in passengerShips){\n                    addOptionsToMeanOfTransport(passengerShip);\n                }\n            } else {\n                let loadShips = meansOfTransportList[dateValue.year].maritime.loadShips\n                for(let loadShip in loadShips){\n                    addOptionsToMeanOfTransport(loadShip);\n                }\n            }\n\n    } else if(transportTypeName == railwayTranslation){\n        if(wares.value == passengersTranslation){\n            let passengerRailways = meansOfTransportList[dateValue.year].trains.passengerTrains\n            for(let passengerRailway in passengerRailways){\n                addOptionsToMeanOfTransport(passengerRailway);\n                \n            }\n        } else {\n            let loadRailways = meansOfTransportList[dateValue.year].trains.loadTrains\n            for(let loadRailway in loadRailways){\n                addOptionsToMeanOfTransport(loadRailway);\n            }\n        }\n    }\n\n    \n}\n\nfunction setProperTransportBasedOnGoods(){\n    let passengersTranslation = selectedLanguage[\"passengers\"];\n    let truckTranslation = selectedLanguage[\"truck\"];\n    let busTranslation = selectedLanguage[\"bus\"];\n    let railwayTranslation = selectedLanguage[\"railway\"];\n\n    if(transportTypeList.value == railwayTranslation){\n        lastActiveTransportType = [\"land\",\"railway\"];\n        setProperMeansOfTransport(selectedLanguage[\"railway\"]);\n        calculateCostValue();\n    }  \n\n    if(wares.value == passengersTranslation || wares.value == \"\"){ \n        truckOption.style.display = \"none\"\n        busOption.style.display = \"\"\n        if(transportTypeList.value == truckTranslation){\n            transportTypeList.value = busTranslation\n            lastActiveTransportType = [\"land\",\"bus\"];\n            setProperMeansOfTransport(selectedLanguage[\"bus\"]);\n            calculateCostValue();\n        }\n    } else {\n        truckOption.style.display = \"\"\n        busOption.style.display = \"none\"\n        if(transportTypeList.value == busTranslation){\n            transportTypeList.value = truckTranslation\n            lastActiveTransportType = [\"land\",\"truck\"];\n            setProperMeansOfTransport(selectedLanguage[\"truck\"]);\n            calculateCostValue();\n        } \n    }\n};\n\nfunction addToRoute(firstClickedCountryName,startedCountry,selectedTransportTypeToTransfer,event){\n\n    currentRoute.push(firstClickedCountryName);\n    clickedCountryTags.push(event.target)\n    currentRouteTranslated.push(selectedLanguage[firstClickedCountryName]);\n    route.innerHTML = currentRouteTranslated;\n    currentEndCountryOfTheRoute = currentRoute[currentRoute.length - 1];\n\n    endCountryOfTheRoute.innerHTML = selectedLanguage[currentEndCountryOfTheRoute];\n    endCountryObject = listObjects[currentEndCountryOfTheRoute];\n    goodPriceInEndCountry = endCountryObject.goodCosts[selectedWare];\n    goodCostInEndCountryValue.innerHTML = goodPriceInEndCountry;\n\n    highlightCountry(firstClickedCountryName,event.target);\n    //calculate route distance\n    let distance\n    if(currentRoute.length == 1){ //first country connected\n        if(selectedTransportTypeToTransfer ==\"land\"){\n            distance = countryConnections.land[startedCountry].direct[firstClickedCountryName];\n            calculetedRouteDistance += distance ;\n            distanceRoute.push(distance);\n            routeDistanceValue.innerHTML = calculetedRouteDistance;\n            \n            \n        } else if(selectedTransportTypeToTransfer ==\"sea\"){\n            distance = countryConnections.sea[startedCountry][firstClickedCountryName];\n            calculetedRouteDistance += distance ;\n            distanceRoute.push(distance)\n            routeDistanceValue.innerHTML = calculetedRouteDistance;\n        }\n\n    }else{ //next country connected\n        distance = countryConnections.land[currentRoute[currentRoute.length - 2]].direct[firstClickedCountryName];\n        calculetedRouteDistance += distance \n        distanceRoute.push(distance);\n        routeDistanceValue.innerHTML = calculetedRouteDistance;\n    }\n    \n    calculateCostValue();\n};\n\nfunction checkWhichTransportType(selectedTransportType){\n    if(transportType.land[selectedTransportType] != null){\n        transportType.land[selectedTransportType] = true;\n\n        type = lastActiveTransportType[0];\n        lastTransportType = transportType[type];\n        typeDetail = lastActiveTransportType[1];\n\n        lastTransportType[typeDetail] = false;\n        lastActiveTransportType = [\"land\",selectedTransportType];\n        transportTypeValue.innerHTML = selectedLanguage.land;\n\n        // return typeDetail;\n    } else if(transportType.sea[selectedTransportType] != null){\n        transportType.sea[selectedTransportType] = true;\n\n        type = lastActiveTransportType[0];\n        lastTransportType = transportType[type];\n        typeDetail = lastActiveTransportType[1];\n\n        lastTransportType[typeDetail] = false;\n        lastActiveTransportType = [\"sea\",selectedTransportType];\n        transportTypeValue.innerHTML = selectedLanguage.maritime;\n\n        // return typeDetail;\n\n    } else if(transportType.air[selectedTransportType] != null){\n        transportType.air[selectedTransportType] = true;\n\n        type = lastActiveTransportType[0];\n        lastTransportType = transportType[type];\n        typeDetail = lastActiveTransportType[1];\n        \n        lastTransportType[typeDetail] = false;\n        lastActiveTransportType = [\"air\",selectedTransportType];\n        transportTypeValue.innerHTML = selectedLanguage.air;\n\n        // return typeDetail;\n    }\n};\n\nfunction getObjKeysByObjectAndValue(obj, value) {\n    return Object.keys(obj).filter(key => obj[key] === value);\n  };\n\n  function cleanRouteDistance(){\n    distanceRoute = [];\n    calculetedRouteDistance = 0;\n    routeDistanceValue.innerHTML = calculetedRouteDistance;\n\n    for(let i=0; i < clickedCountryTags.length; i++){\n        clickedCountryTags[i].parentElement.classList.remove(\"inRouteBigCountry\");\n        clickedCountryTags[i].classList.remove(\"inRouteBorderBigCountry\");\n        clickedCountryTags[i].parentElement.classList.remove(\"inRoute\");\n        clickedCountryTags[i].classList.remove(\"inRouteBorder\");\n    };\n\n    clickedCountryTags = [];\n\n    lastClickedCountryTag.parentElement.classList.remove(\"inRouteBigCountry\");\n    lastClickedCountryTag.classList.remove(\"inRouteBorderBigCountry\");\n    lastClickedCountryTag.parentElement.classList.remove(\"inRoute\");\n    lastClickedCountryTag.classList.remove(\"inRouteBorder\");\n\n   \n  };\n\n\n  function removeLastElementFromRoute(event,firstClickedCountryName){\n        if(distanceRoute.length > 0){\n        const distanceForLastCountryInRoute = distanceRoute[distanceRoute.length - 1];\n\n        distanceRoute.pop();\n        currentRoute.pop();\n        currentRouteTranslated.pop();\n        clickedCountryTags.pop();\n        highlightCountryOff(firstClickedCountryName,event.target)\n\n        if(currentRoute[currentRoute.length - 1] == null){\n            endCountryOfTheRoute.innerHTML = \"\";\n            goodCostInEndCountryValue.innerHTML = 0;\n        } else{\n            currentEndCountryOfTheRoute = currentRoute[currentRoute.length - 1]; \n            endCountryOfTheRoute.innerHTML = selectedLanguage[currentEndCountryOfTheRoute];\n        }\n        calculetedRouteDistance -= distanceForLastCountryInRoute;\n        routeDistanceValue.innerHTML = calculetedRouteDistance;\n        route.innerHTML = currentRouteTranslated;     \n        calculateCostValue();\n    } else{\n        Notify.failure(alreadyAllCountriesDeletedFromRoute());\n    }\n  };\n\n  function highlightCountry(firstClickedCountryName,tagToHighlight){\n    if(bigCountry.includes(firstClickedCountryName)){\n        tagToHighlight.parentElement.classList.add(\"inRouteBigCountry\");\n        tagToHighlight.classList.add(\"inRouteBorderBigCountry\");\n    } else{\n        tagToHighlight.parentElement.classList.add(\"inRoute\");\n        tagToHighlight.classList.add(\"inRouteBorder\");\n    }\n  };\n\n  function highlightCountryOff(firstClickedCountryName,tagToHighlightOff){\n    if(bigCountry.includes(firstClickedCountryName)){\n        tagToHighlightOff.parentElement.classList.remove(\"inRouteBigCountry\");\n        tagToHighlightOff.classList.remove(\"inRouteBorderBigCountry\");\n    } else{\n        tagToHighlightOff.parentElement.classList.remove(\"inRoute\")\n        tagToHighlightOff.classList.remove(\"inRouteBorder\")\n    }\n  };\n\n  function addOptionsToMeanOfTransport(optionValue){\n    // originalNameOfVehicles.set(selectedLanguage[vehicle],vehicle)\n    let selectedGoodOption = document.createElement('option');\n    selectedGoodOption.classList.add('transportModel');\n    selectedGoodOption.value = optionValue;\n\n    selectedGoodOption.innerHTML = optionValue;\n    meanOfTransport.appendChild(selectedGoodOption);\n  };\n  \n\n  meanOfTransport.addEventListener(\"change\",function(){    \n    calculateCostValue();\n  })\n\n  function calculateCostValue(){\n    \n    let mainTransportTypeName;\n    let middleTransportTypeName;\n    if(lastActiveTransportType[1] == \"bus\" || lastActiveTransportType[1] == \"truck\"){\n        mainTransportTypeName = \"vechicles\"\n        middleTransportTypeName = lastActiveTransportType[1];\n    } else if(lastActiveTransportType[1] == \"railway\"){\n            mainTransportTypeName = \"trains\"\n            if(wares.value == selectedLanguage.passengers){\n                middleTransportTypeName = \"passengerTrains\"\n            } else {\n                middleTransportTypeName = \"loadTrains\"\n            }\n\n    }else if(lastActiveTransportType[1] == \"maritime\"){\n        mainTransportTypeName = lastActiveTransportType[1]\n        if(wares.value == selectedLanguage.passengers){\n            middleTransportTypeName = \"passangerShips\"\n        } else {\n            middleTransportTypeName = \"loadShips\"\n        }\n    }\n\n    displayTransportTypeCapacity(mainTransportTypeName,middleTransportTypeName);\n    displayTransportTypeSpeed(mainTransportTypeName,middleTransportTypeName);\n    calculateNeededTransportUnits();\n\n    let selectedTransportTypeCost = meansOfTransportList[dateValue.year][mainTransportTypeName][middleTransportTypeName][meanOfTransport.value].cost;\n    singularCostValue.innerHTML = selectedTransportTypeCost;\n    calculatedCostValue = selectedTransportTypeCost * calculetedRouteDistance * neededTransportUnits;\n    calculatedCostValueTag.innerHTML = calculatedCostValue;\n\n    calculateEarnings();\n    displayEarningPanel();\n\n    setPoperTransportTypeImage();\n  };\n\n  function displayTransportTypeCapacity(mainTransportTypeName,middleTransportTypeName){\n    if(middleTransportTypeName == \"bus\" || middleTransportTypeName == \"passangerShips\" || middleTransportTypeName == \"passengerTrains\"){\n        capacityOfSelectedTransport = meansOfTransportList[dateValue.year][mainTransportTypeName][middleTransportTypeName][meanOfTransport.value].passengers\n        capacityValue.innerHTML = capacityOfSelectedTransport\n    } else {\n        capacityOfSelectedTransport = meansOfTransportList[dateValue.year][mainTransportTypeName][middleTransportTypeName][meanOfTransport.value].payLoad\n        capacityValue.innerHTML = capacityOfSelectedTransport\n    }\n  };\n\n  function displayTransportTypeSpeed(mainTransportTypeName,middleTransportTypeName){\n    speedValueOfSelectedTransport = meansOfTransportList[dateValue.year][mainTransportTypeName][middleTransportTypeName][meanOfTransport.value].speed;\n    speedValue.innerHTML = speedValueOfSelectedTransport\n  };\n\n  function calculateEarnings(){\n   \n    if(!isNaN(howManyToTransportValue.value) && !isNaN(goodPriceInStartedCountry) && !isNaN(goodPriceInEndCountry)){\n    calculatedIncomeValue = (goodPriceInEndCountry - goodPriceInStartedCountry) * howManyToTransportValue.value;\n    incomeValue.innerHTML = calculatedIncomeValue;\n    };\n\n    if(!isNaN(calculatedIncomeValue) && !isNaN(calculatedCostValue)){\n     calculatedProfitValue = calculatedIncomeValue - calculatedCostValue;\n     profitValue.innerHTML = calculatedProfitValue;\n    };\n  };\n\n  function displayEarningPanel(){\n    if(calculatedIncomeValue != null && calculatedIncomeValue != 0){\n        earnings.style.visibility = \"visible\"\n        if(calculatedProfitValue > 0){ //if calculatedProfitValue is bigger than 0 then mark background color on green\n            earnings.classList.remove(\"earningsMinus\");\n            earnings.classList.add(\"earningsPlus\");\n        } else{ //otherwise in red \n            earnings.classList.remove(\"earningsPlus\");\n            earnings.classList.add(\"earningsMinus\");\n        }\n    } else {\n        earnings.style.visibility = \"hidden\"\n    }\n    \n  };\n\n  function calculateNeededTransportUnits(){\n    neededTransportUnits = howManyToTransportValue.value / capacityOfSelectedTransport ;\n    if(Math.ceil(neededTransportUnits) == 0){\n        neededTransportUnits = 1;\n    } else{\n        neededTransportUnits =  Math.ceil(neededTransportUnits);\n    };\n    neccesseryQtyValue.innerHTML = neededTransportUnits;\n  };\n\n  function resetCostsAndEarnings(){\n    calculatedCostValue = 0;\n    calculatedCostValueTag.innerHTML = calculatedCostValue;\n    calculatedProfitValue = 0;\n    profitValue.innerHTML = calculatedProfitValue;\n\n    calculatedIncomeValue = 0;\n    incomeValue.innerHTML = calculatedIncomeValue;\n    displayEarningPanel();\n  };\n\n  function setPoperTransportTypeImage(){\n    let transportTypeValue = transportTypeList.value;\n    console.log(transportTypeValue);\n    if(selectedLanguage[\"bus\"] == transportTypeValue){\n        transportTypeImg.src = \"/bus-icon.04337034.png\"\n        transportTypeData.style.backgroundColor = \"#c34f7f\"\n    } else if(selectedLanguage[\"railway\"] == transportTypeValue){\n        transportTypeImg.src = \"/train-icon.8bd23904.png\"\n        transportTypeData.style.backgroundColor = \"#c40856\"\n    } else if(selectedLanguage[\"truck\"] == transportTypeValue){\n        transportTypeImg.src = \"/truck-icon.57ecb994.png\"\n        transportTypeData.style.backgroundColor = \"#863859\"\n    } else if(selectedLanguage[\"maritime\"] == transportTypeValue){\n        transportTypeImg.src = \"/ship-icon.dfd19004.png\"\n        transportTypeData.style.backgroundColor = \"#6c58da\"\n    }\n  }\n\n\n  /////TODO add logic with passangers\n  /////////TODO add efect rolling on for transport panel\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport {selectedLanguage, refreshObjectsTranslation} from './translations'\nimport {buildRoute,blockageForInfoNotify} from './transportPanel'\n\n\nlet selectedCountryName;\nlet selectedCountry;\nlet specialitiesList = \"\";\nlet pulsingInterval;\n\nlet pauseClicked = false;\nlet firstClickedCountryName;\nexport let clickedCountryName = 'poland'; \nlet smallFlagSrc;\n\nlet clickedPositionY;\nlet clickedPositionX;\nlet controlPanelWidth;\nlet controlPanelHeight;\n\nexport let clickedCreateTransport = false;\nexport let currentRoute = [];\nexport let currentRouteTranslated = [];\nconst route = $(\".route\")[0];\n\nlet timeWatch = document.querySelector(\"#timeWatch\");\nexport let lastClickedCountryTag;\n\nlet pulsingIntervalCounter;\nexport let dateValue = {\n      day: \"1\",\n      month: \"1\",\n      year: \"1935\"\n}\n\nlet time = {\n    hour: 0\n}\n\n// Confirm.init({\n//   width: '350px',\n//   position: 'right-center',\n//   timeout: 3000,\n//   info: {\n//     background: '#2b1675',\n//   },\n// });\n\nNotify.init({\n  width: '350px',\n  position: 'right-bottom',\n  timeout: 5000,\n  plainText: false,\n  showOnlyTheLastOne: true,\n  info: {\n    background: '#2b1675',\n  },\n  failure: {\n    background: '#751b1b'\n}\n});\n\n\n\n    let goods ={\n      main: {\n            1: selectedLanguage.coal,\n            2: selectedLanguage.steel,\n            3: selectedLanguage.aluminium,\n            4: selectedLanguage.copper,\n            5: selectedLanguage.lead,\n            6: selectedLanguage.grain,\n            7: selectedLanguage.oil\n      },\n      additional: {\n        1: selectedLanguage.wine,\n        2: selectedLanguage.fish,\n        3: selectedLanguage.flour,\n        4: selectedLanguage.clothes\n      },\n      specific: {\n        1: selectedLanguage.zinc,\n        2: selectedLanguage.wolfram,\n        3: selectedLanguage.ideas,\n        4: selectedLanguage.mechanicalParts,\n        5: selectedLanguage.chrome,\n        6: selectedLanguage.nickel,\n        7: selectedLanguage.forestGoods\n      }\n    }\n\n    let date = {\n      fontSize: 35,\n      height: 30,\n      \n    }\n\nexport let countries = {\n     norway: {\n      height: 330,\n      width: 290.4,\n      neighbors :{\n        1 : \"sweden\",\n        2 : \"finland\",\n        3 : \"ussr\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      specialities: {\n          1: goods.additional[2]\n        },  \n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 2.9\n      },\n\n       sweden: {\n        height: 427.45,\n        width: 354.8,\n        neighbors :{\n          1 : \"norway\",\n          2 : \"finland\",\n          3 : \"denmark\",\n        },\n        accessToWaterReservoirs : true,\n        balticSea: true,\n        blackSea: false,\n        otherSea: true,\n        specialities: {\n            1: goods.specific[2],\n            2: goods.main[4],\n            3: goods.main[2]\n          },  \n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5,\n            chrome : 1,\n            nickel: 2,\n            forestGoods: 50\n          },\n          population: 6.2\n        },\n\n       finland: {\n          height: 257.1,\n          width: 275,\n          neighbors :{\n            1 : \"norway\",\n            2 : \"sweden\",\n            3 : \"ussr\",\n          },\n          accessToWaterReservoirs : true,\n          balticSea: true,\n          blackSea: false,\n          otherSea: false,\n          specialities: {\n              1: goods.specific[6],\n              2: goods.additional[2]\n            },  \n            goodCosts: {\n              coal: 30,\n              steel: 70,\n              aluminium: 80,\n              copper: 60,\n              lead: 50,\n              grain: 5,\n              oil: 100,\n              wine: 35,\n              fish: 5,\n              flour: 10,\n              clothes: 20,\n              zinc: 75,\n              wolfram: 100,\n              mechanicalParts: 150,\n              chrome : 5,\n              nickel: 3,\n              forestGoods: 20\n            },\n            goodsAvailability: {\n              coal: 100,\n              steel: 80,\n              aluminium: 50,\n              copper: 120,\n              lead: 80,\n              grain: 1000,\n              oil: 300,\n              wine: 50,\n              fish: 70,\n              flour: 80,\n              clothes: 90,\n              zinc: 15,\n              wolfram: 40,\n              mechanicalParts: 5,\n              chrome : 1,\n              nickel: 2,\n              forestGoods: 50\n            },\n            population: 3.5\n          },\n\n          latvia: {\n            height: 86.1,\n            width: 170,\n            neighbors :{\n              1 : \"estonia\",\n              2 : \"ussr\",\n              3 : \"poland\",\n              4 : \"lithuania\",\n            },\n            accessToWaterReservoirs : true,\n            balticSea: true,\n            blackSea: false,\n            otherSea: false,\n            specialities: {\n                1: goods.specific[7]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150,\n                chrome : 5,\n                nickel: 3,\n                forestGoods: 20\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5,\n                chrome : 1,\n                nickel: 2,\n                forestGoods: 50\n              },\n              population: 1.9\n            },\n\n            estonia: {\n              height: 82.5,\n              width: 150,\n              neighbors :{\n                1 : \"latvia\",\n                2 : \"ussr\"\n              },\n              accessToWaterReservoirs : true,\n              balticSea: true,\n              blackSea: false,\n              otherSea: false,\n              specialities: {\n                1: goods.additional[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5,\n                  chrome : 1,\n                  nickel: 2,\n                  forestGoods: 50\n                },\n                population: 1.1\n              },\n\n              romania: {\n                height: 178.75,\n                width: 250,\n                neighbors :{\n                  1 : \"czechoslovakia\",\n                  2 : \"ussr\",\n                  3 : \"poland\",\n                  4 : \"hungary\",\n                  5 : \"yugoslavia\",\n                  6 : \"bulgaria\"\n                },\n                accessToWaterReservoirs : true,\n                balticSea: false,\n                blackSea: true,\n                otherSea: false,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5,\n                    chrome : 1,\n                    nickel: 2,\n                    forestGoods: 50\n                  },\n                  population: 15\n                }\n\n                , hungary: {\n                  height: 96,\n                  width: 160,\n                  neighbors :{\n                    1 : \"czechoslovakia\",\n                    2 : \"austria\",\n                    3 : \"romania\",\n                    4 : \"yugoslavia\"\n                  },\n                  accessToWaterReservoirs : false,\n                  balticSea: false,\n                  blackSea: false,\n                  otherSea: false,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150,\n                      chrome : 5,\n                      nickel: 3,\n                      forestGoods: 20\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5,\n                      chrome : 1,\n                      nickel: 2,\n                      forestGoods: 50\n                    },\n                    population: 8.9\n                  }\n\n          , turkey: {\n          height: 188.9,\n          width: 385,\n          neighbors :{\n            1 : \"ussr\",\n            2 : \"bulgaria\",\n            3 : \"greece\"\n          },\n          accessToWaterReservoirs : true,\n          balticSea: false,\n          blackSea: true,\n          otherSea: true,\n          specialities: {\n              1: goods.specific[2],\n              2: goods.specific[3],\n              3: goods.main[2]\n            },  \n            goodCosts: {\n              coal: 30,\n              steel: 70,\n              aluminium: 80,\n              copper: 60,\n              lead: 50,\n              grain: 5,\n              oil: 100,\n              wine: 35,\n              fish: 5,\n              flour: 10,\n              clothes: 20,\n              zinc: 75,\n              wolfram: 100,\n              mechanicalParts: 150,\n              chrome : 5,\n              nickel: 3,\n              forestGoods: 20\n            },\n            goodsAvailability: {\n              coal: 100,\n              steel: 80,\n              aluminium: 50,\n              copper: 120,\n              lead: 80,\n              grain: 1000,\n              oil: 300,\n              wine: 50,\n              fish: 70,\n              flour: 80,\n              clothes: 90,\n              zinc: 15,\n              wolfram: 40,\n              mechanicalParts: 5,\n              chrome : 1,\n              nickel: 2,\n              forestGoods: 50\n            },\n            population: 16.2\n          }\n\n\n          , yugoslavia: {\n            height: 184.8,\n            width: 220,\n            neighbors :{\n              1 : \"italy\",\n              2 : \"austria\",\n              3 : \"greece\",\n              4 : \"hungary\",\n              5 : \"romania\",\n              6 : \"bulgaria\",\n              7 : \"albania\"\n            },\n            accessToWaterReservoirs : true,\n            balticSea: false,\n            blackSea: false,\n            otherSea: true,\n            specialities: {\n                1: goods.specific[2],\n                2: goods.specific[3],\n                3: goods.main[2]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150,\n                chrome : 5,\n                nickel: 3,\n                forestGoods: 20\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5,\n                chrome : 1,\n                nickel: 2,\n                forestGoods: 50\n              },\n              population: 14\n            }\n\n            , greece: {\n              height: 230 ,\n              width: 220,\n              neighbors :{\n                1 : \"turkey\",\n                2 : \"yugoslavia\",\n                3 : \"bulgaria\",\n                4 : \"albania\"\n              },\n              specialities: {\n                  1: goods.specific[2],\n                  2: goods.specific[3],\n                  3: goods.main[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5,\n                  chrome : 1,\n                  nickel: 2,\n                  forestGoods: 50\n                },\n                population: 6.8\n              }\n\n              , italy: {\n                height: 330,\n                width: 290.4,\n                neighbors :{\n                  1 : \"france\",\n                  2 : \"switzerland\",\n                  3 : \"austria\",\n                  4 : \"yugoslavia\"\n                },\n                accessToWaterReservoirs : true,\n                balticSea: false,\n                blackSea: false,\n                otherSea: true,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5,\n                    chrome : 1,\n                    nickel: 2,\n                    forestGoods: 50\n                  },\n                  population: 42\n                }\n\n          , spain: {\n              height: 263,\n              width: 311 ,\n              neighbors :{\n                1 : \"france\",\n                2 : \"portugal\"\n              },\n              accessToWaterReservoirs : true,\n              balticSea: false,\n              blackSea: false,\n              otherSea: true,\n              specialities: {\n                  1: goods.specific[2],\n                  2: goods.specific[3],\n                  3: goods.main[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5,\n                  chrome : 1,\n                  nickel: 2,\n                  forestGoods: 50\n                },\n                population: 24\n              }\n\n              , portugal: {\n                height: 155,\n                width: 83.7,\n                neighbors :{\n                  1 : \"spain\"\n                },\n                accessToWaterReservoirs : true,\n                balticSea: false,\n                blackSea: false,\n                otherSea: true,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5,\n                    chrome : 1,\n                    nickel: 2,\n                    forestGoods: 50\n                  },\n                  population: 7.1\n                }\n\n                , bulgaria: {\n                  height: 114.7,\n                  width: 155,\n                  neighbors :{\n                    1 : \"turkey\",\n                    2 : \"romania\",\n                    3 : \"greece\",\n                    4 : \"yugoslavia\"\n                  },\n                  accessToWaterReservoirs : true,\n                  balticSea: false,\n                  blackSea: true,\n                  otherSea: false,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150,\n                      chrome : 5,\n                      nickel: 3,\n                      forestGoods: 20\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5,\n                      chrome : 1,\n                      nickel: 2,\n                      forestGoods: 50\n                    },\n                    population: 6.3\n                  }\n\n   , ussr: {\n    height: 830,\n    width: 398,\n    neighbors :{\n      1 : \"finland\",\n      2 : \"estonia\",\n      3 : \"latvia\",\n      4 : \"poland\",\n      5 : \"romania\",\n      6 : \"turkey\",\n      7 : \"norway\"\n    },\n    accessToWaterReservoirs : true,\n    balticSea: true,\n    blackSea: true,\n    otherSea: false,\n    specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.specific[3],\n        4: goods.main[7]\n      },  \n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150,\n        chrome : 5,\n        nickel: 3,\n        forestGoods: 20\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5,\n        chrome : 1,\n        nickel: 2,\n        forestGoods: 50\n      },\n      population: 159\n    }\n\n    , germany: {\n      height:  260.4,\n      width: 420 ,\n      neighbors :{\n        1 : \"denmark\",\n        2 : \"netherland\",\n        3 : \"belgium\",\n        4 : \"france\",\n        5 : \"switzerland\",\n        6 : \"austria\",\n        7 : \"czechoslovakia\",\n        8 : \"poland\",\n        9 : \"lithuania\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: true,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.specific[3]\n      },\n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150,\n        chrome : 5,\n        nickel: 3,\n        forestGoods: 20\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5,\n        chrome : 1,\n        nickel: 2,\n        forestGoods: 50\n      },\n      population: 74\n    }\n\n   , lithuania: {\n    height: 101, \n    width: 134, \n    neighbors :{\n      1 : \"latvia\",\n      2 : \"germany\",\n      3 : \"poland\"\n    },\n    accessToWaterReservoirs : true,\n    balticSea: true,\n    blackSea: false,\n    otherSea: false,\n    specialities: {\n      1: goods.main[6],\n      2: goods.main[7],\n      3: goods.additional[3]\n      },\n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150,\n        chrome : 5,\n        nickel: 3,\n        forestGoods: 20\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5,\n        chrome : 1,\n        nickel: 2,\n        forestGoods: 50\n      },\n      population: 2\n    }\n\n    , poland: {\n      height: 298,\n      width: 286,\n      neighbors :{\n        1 : \"latvia\",\n        2 : \"germany\",\n        3 : \"lithuania\",\n        4 : \"czechoslovakia\",\n        5 : \"ussr\",\n        6 : \"romania\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: true,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.main[6],\n        2: goods.main[7],\n        3: goods.additional[3]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 30\n      }\n\n    , czechoslovakia: {\n      height: 105.9,\n      width: 325,\n      neighbors :{\n        1 : \"poland\",\n        2 : \"germany\",\n        3 : \"austria\",\n        4 : \"hungary\",\n        5 : \"romania\"\n      },\n      accessToWaterReservoirs : false,\n      balticSea: false,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.main[2],\n        2: goods.main[4],\n        3: goods.specific[4]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 13\n    }\n\n    , greatBritain: {\n      height: 400,\n      width: 286,\n      neighbors :{\n        1 : \"ireland\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.additional[2],\n        4: goods.specific[1]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 180,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n      population: 47\n    }\n\n    , austria: {\n      height: 79.2,\n      width: 180,\n      neighbors :{\n        1 : \"germany\",\n        2 : \"switzerland\",\n        3 : \"hungary\",\n        4 : \"yugoslavia\",\n        5 : \"czechoslovakia\",\n        6 : \"italy\"\n      },\n      accessToWaterReservoirs : false,\n      balticSea: false,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.additional[3]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 6.8\n    }\n\n    , france: {\n      height: 365,\n      width: 324.8,\n      neighbors :{\n        1 : \"germany\",\n        2 : \"switzerland\",\n        3 : \"belgium\",\n        4 : \"spain\",\n        5 : \"italy\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.main[5],\n        4: goods.additional[1]\n        },\n        goodCosts: {\n          coal: 35,\n          steel: 75,\n          aluminium: 85,\n          copper: 65,\n          lead: 53,\n          grain: 3,\n          oil: 120,\n          wine: 20,\n          fish: 7,\n          flour: 12,\n          clothes: 18,\n          zinc: 78,\n          wolfram: 150,\n          mechanicalParts: 177,\n          chrome : 550,\n          nickel: 333,\n          forestGoods: 22\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 42\n    }\n\n    , denmark: {\n      height: 110,\n      width: 105.6,\n      neighbors :{\n        1 : \"germany\",\n        2 : \"sweden\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: true,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 3.7\n    }\n\n    ,iceland: {\n      height: 123.5,\n      width: 260,\n      neighbors :{\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 0.5\n    }\n\n    , belgium: {\n      height: 78.7,\n      width: 100,\n      neighbors :{\n        1 : \"netherland\",\n        2 : \"france\",\n        3 : \"germany\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 8.3\n    }\n\n    , netherland: {\n      height: 100,\n      width: 89,\n      neighbors :{\n        1 : \"belgium\",\n        2 : \"germany\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 8.3\n    }\n\n    , albania: {\n      height: 80,\n      width: 45.6,\n      neighbors :{\n        1 : \"yugoslavia\",\n        2 : \"greece\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1\n    }\n\n    , switzerland: {\n      height: 54,\n      width: 100,\n      neighbors :{\n        1 : \"germany\",\n        2 : \"france\",\n        3 : \"italy\",\n        4 : \"austria\"\n      },\n      accessToWaterReservoirs : false,\n      balticSea: false,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 4.1\n    }\n\n    ,sicily: {\n      height: 54.2,\n      width: 80,\n      neighbors :{\n        1 : \"italy\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 4\n    }\n\n    ,sardynia: {\n      height: 80,\n      width: 53.6,\n      neighbors :{\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1\n    }\n\n    ,corsica: {\n      height: 55,\n      width: 34.65,\n      neighbors :{\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 0.2\n    }\n\n    ,algieria: {\n      height: 95.2,\n      width: 280,\n      neighbors :{\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 7\n    }\n\n \n    ,irelandNorth: {\n      height: 50.4,\n      width: 70,\n      neighbors :{\n        1 : \"ireland\",\n        2 : \"greatBritain\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1.3\n    }\n\n    ,ireland: {\n      height: 155,\n      width: 139.5,\n      neighbors :{\n        1 : \"greatBritain\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: false,\n      blackSea: false,\n      otherSea: true,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 3\n    }\n\n    ,easternPrussia: {\n      height: 81.5,\n      width: 100 ,\n      neighbors :{\n        1 : \"poland\",\n        2 : \"lithuania\"\n      },\n      accessToWaterReservoirs : true,\n      balticSea: true,\n      blackSea: false,\n      otherSea: false,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 2.5\n    }\n  }\n\n    const polishMapLocation = $(\".polishMapLocation\")[0];\n    let polishMap = document.querySelector(\".polishMap\");\n\n    const lithuanianMapLocation = $(\".lithuanianMapLocation\")[0];\n    let lithuaniaMap = document.querySelector(\".lithuaniaMap\");\n\n    const ussrMapLocation = $(\".ussrMapLocation\")[0];\n    let ussrMap = document.querySelector(\".ussrMap\");\n\n    const czechoslovakiaMapLocation = $(\".czechoslovakiaMapLocation\")[0];\n    let czechoslovakiaMap = document.querySelector(\".czechoslovakiaMap\");\n\n    const austriaMapLocation = $(\".austriaMapLocation\")[0];\n    let austriaMap = document.querySelector(\".austriaMap\");\n\n    const germanyMapLocation = $(\".germanyMapLocation\")[0];\n    let germanyMap = document.querySelector(\".germanyMap\");\n\n    const easternPrussiaMapLocation = $(\".easternPrussiaMapLocation\")[0];\n    let easternPrussiaMap = document.querySelector(\".easternPrussiaMap\");\n\n    const franceMapLocation = $(\".franceMapLocation\")[0];\n    let franceMap = document.querySelector(\".franceMap\");\n\n    const greatBritainMapLocation = $(\".greatBritainMapLocation\")[0];\n    let greatBritainMap = document.querySelector(\".greatBritainMap\");\n\n    const norwayMapLocation = $(\".norwayMapLocation\")[0];\n    let norwayMap = document.querySelector(\".norwayMap\");\n\n    const swedenMapLocation = $(\".swedenMapLocation\")[0];\n    let swedenMap = document.querySelector(\".swedenMap\");\n\n    const finlandMapLocation = $(\".finlandMapLocation\")[0];\n    let finlandMap = document.querySelector(\".finlandMap\");\n\n    const estoniaMapLocation = $(\".estoniaMapLocation\")[0];\n    let estoniaMap = document.querySelector(\".estoniaMap\");\n\n    const latviaMapLocation = $(\".latviaMapLocation\")[0];\n    let latviaMap = document.querySelector(\".latviaMap\");\n\n    const denmarkMapLocation = $(\".denmarkMapLocation\")[0];\n    let denmarkMap = document.querySelector(\".denmarkMap\");\n\n    const icelandMapLocation = $(\".icelandMapLocation\")[0];\n    let icelandMap = document.querySelector(\".icelandMap\");\n\n    const belgiumMapLocation = $(\".belgiumMapLocation\")[0];\n    let belgiumMap = document.querySelector(\".belgiumMap\");\n\n    const netherlandMapLocation = $(\".netherlandMapLocation\")[0];\n    let netherlandMap = document.querySelector(\".netherlandMap\");\n\n    const hungaryMapLocation = $(\".hungaryMapLocation\")[0];\n    let hungaryMap = $(\".hungaryMap\")[0];\n\n    const romaniaMapLocation = $(\".romaniaMapLocation\")[0];\n    let romaniaMap = document.querySelector(\".romaniaMap\");\n\n    const bulgariaMapLocation = $(\".bulgariaMapLocation\")[0];\n    let bulgariaMap = document.querySelector(\".bulgariaMap\");\n\n    const yugoslaviaMapLocation = $(\".yugoslaviaMapLocation\")[0];\n    let yugoslaviaMap = document.querySelector(\".yugoslaviaMap\");\n\n    const albaniaMapLocation = $(\".albaniaMapLocation\")[0];\n    let albaniaMap = document.querySelector(\".albaniaMap\");\n\n    const greeceMapLocation = $(\".greeceMapLocation\")[0];\n    let greeceMap = document.querySelector(\".greeceMap\");\n\n    const turkeyMapLocation = $(\".turkeyMapLocation\")[0];\n    let turkeyMap = document.querySelector(\".turkeyMap\");\n\n    const italyMapLocation = $(\".italyMapLocation\")[0];\n    let italyMap = document.querySelector(\".italyMap\");\n\n    const sicilyMapLocation = $(\".sicilyMapLocation\")[0];\n    let sicilyMap = document.querySelector(\".sicilyMap\");\n\n    const sardyniaMapLocation = $(\".sardyniaMapLocation\")[0];\n    let sardyniaMap = document.querySelector(\".sardyniaMap\");\n\n    const corsicaMapLocation = $(\".corsicaMapLocation\")[0];\n    let corsicaMap = document.querySelector(\".corsicaMap\");\n\n    const algieriaMapLocation = $(\".algieriaMapLocation\")[0];\n    let algieriaMap = document.querySelector(\".algieriaMap\");\n\n    const switzerlandMapLocation = $(\".switzerlandMapLocation\")[0];\n    let switzerlandMap = document.querySelector(\".switzerlandMap\");\n\n    const spainMapLocation = $(\".spainMapLocation\")[0];\n    let spainMap = document.querySelector(\".spainMap\");\n\n    const portugalMapLocation = $(\".portugalMapLocation\")[0];\n    let portugalMap = document.querySelector(\".portugalMap\");\n\n    const irelandNorthMapLocation = $(\".irelandNorthMapLocation\")[0];\n    let irelandNorthMap = document.querySelector(\".irelandNorthMap\");\n\n    const irelandMapLocation = $(\".irelandMapLocation\")[0];\n    let irelandMap = document.querySelector(\".irelandMap\");\n    \n    const dateValueOnMap = document.querySelector(\".dateValue\");\n    const dateOnMap = document.querySelector(\".date\");\n    \n    let resolutionBodyX = window.screen.width\n    let resolutionBodyY = window.screen.height\n    let resolution = $(\"#mainNav\").width();\n    let factor;\n\n    let italyTerritories = [\"Italy\",\"Sardynia\",\"Sicily\"];\n    let franceTerritories = [\"France\",\"Algieria\",\"Corsica\"];\n    let denmarkTerritories = [\"Denmark\",\"Iceland\"];\n    let greatBritainTerritories = [\"GB\",\"IrelandNorth\"];\n    let irishTerritories = [\"Ireland\"];\n    let germanyTerritories = [\"Germany\",\"EasternPrussia\"];\n\n    calculateResoluctionFactor(resolution)\n    recalculateCountriesPositionsBasedOnResolution(factor)\n\n    window.addEventListener(\"resize\",function(){\n      resolution = $(\"#mainNav\").width();\n      calculateResoluctionFactor(resolution)\n      recalculateCountriesPositionsBasedOnResolution(factor)\n    })\n\n    ////Portugal\n    portugalMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"portugal\"\n      smallFlagSrc = \"/Portugal-icon.7b1944da.png\"\n        if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n    portugalMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"portugal\";\n          countrySpecialities(selectedCountryName)\n      });\n\n    ////Spain\n    spainMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"spain\"\n      smallFlagSrc = \"/Spain-icon.36bb6066.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n    spainMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"spain\";\n          countrySpecialities(selectedCountryName)\n      });\n    \n    ////Poland\n    polishMap.addEventListener(\"click\", \n    function(){ \n        // alert(\"You chosen Poland, good move!\"); \n        firstClickedCountryName = \"poland\"\n        smallFlagSrc = \"/Poland-icon.532b2fd1.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n      }\n    );\n    polishMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"poland\";\n          countrySpecialities(selectedCountryName)\n      });\n\n          ////Norway\n    norwayMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"norway\"\n      smallFlagSrc = \"/Norway-icon.4a8c8a5e.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n    norwayMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"norway\";\n          countrySpecialities(selectedCountryName)\n      });\n\n      ////Sweden\n    swedenMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"sweden\"\n      smallFlagSrc = \"/Sweden-icon.da710607.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n    swedenMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"sweden\";\n          countrySpecialities(selectedCountryName)\n      });\n\n      ////Finland\n      finlandMap.addEventListener(\"click\", \n      function(){ \n        firstClickedCountryName = \"finland\"\n        smallFlagSrc = \"/Finland-icon.779ab3d0.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n        }\n      );\n\n      finlandMap.addEventListener(\"mouseover\", \n      function(){ \n            selectedCountryName = \"finland\";\n            countrySpecialities(selectedCountryName)\n        });\n\n      ////Latvia\n      latviaMap.addEventListener(\"click\", \n      function(){ \n        firstClickedCountryName = \"latvia\"\n        smallFlagSrc = \"/Latvia-Flag-icon.1009b424.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n        }\n      );\n\n      latviaMap.addEventListener(\"mouseover\", \n      function(){ \n            selectedCountryName = \"latvia\";\n            countrySpecialities(selectedCountryName)\n        });\n\n      ////Estonia\n      estoniaMap.addEventListener(\"click\", \n      function(){ \n        firstClickedCountryName = \"estonia\"\n        smallFlagSrc = \"/Estonia-icon.039201d6.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n        }\n      );\n\n      estoniaMap.addEventListener(\"mouseover\", \n      function(){ \n            selectedCountryName = \"estonia\";\n            countrySpecialities(selectedCountryName)\n        });\n      \n\n    ////Germany\n    germanyMap.addEventListener(\"click\", \n    function(){ \n      // alert(\"You chosen Germany, bad move!\"); \n      firstClickedCountryName = \"germany\"\n      smallFlagSrc = \"/German-Reich-icon.d05c90e8.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n      }\n    );\n\n    germanyMap.addEventListener(\"mouseover\", \n    function(){ \n          checkGermanTerritoriesMouseover();\n          selectedCountryName = \"germany\";\n          countrySpecialities(selectedCountryName);\n      });\n\n      germanyMap.addEventListener(\"mouseout\", \n      function(){ \n            checkGermanTerritoriesMouseout();\n        });\n\n////EasternPrussia\n    easternPrussiaMap.addEventListener(\"click\", \n    function(){ \n      if(germanyTerritories.includes(\"EasternPrussia\")){\n        firstClickedCountryName = \"germany\"\n        smallFlagSrc = \"/German-Reich-icon.d05c90e8.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n      } else{\n        firstClickedCountryName = \"easternPrussia\"\n        smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n        if(!clickedCreateTransport){\n          showList(event,firstClickedCountryName,smallFlagSrc)\n          } else {\n            buildRoute(firstClickedCountryName,event);\n          }\n      }\n  }\n    );\n\n    easternPrussiaMap.addEventListener(\"mouseover\", \n    function(){ \n      if(germanyTerritories.includes(\"EasternPrussia\")){\n          checkGermanTerritoriesMouseover();\n          selectedCountryName = \"germany\";\n          countrySpecialities(selectedCountryName);\n        } else {\n          $(easternPrussiaMap).addClass(\"mediumMapOnYellow\");\n          selectedCountryName = \"easternPrussia\";\n          countrySpecialities(selectedCountryName);\n        }\n      });\n\n      easternPrussiaMap.addEventListener(\"mouseout\", \n      function(){ \n        if(germanyTerritories.includes(\"EasternPrussia\")){\n            checkGermanTerritoriesMouseout();\n        } else{\n          $(easternPrussiaMap).removeClass(\"mediumMapOnYellow\");\n        }\n        });\n\n\n    ////USSR\n    ussrMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"ussr\"\n      smallFlagSrc = \"/ussr.2fdc3809.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n     }\n    );\n\n    ussrMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"ussr\";\n      countrySpecialities(selectedCountryName)\n      });\n\n\n    ///Czechoslovakia\n    czechoslovakiaMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"czechoslovakia\"\n      smallFlagSrc = \"/Czech-Republic-icon.7f214b3b.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n    }\n    );\n\n    czechoslovakiaMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"czechoslovakia\";\n          countrySpecialities(selectedCountryName)\n    \n      });\n\n    ////Austria\n    austriaMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"austria\"\n      smallFlagSrc = \"/Austria-icon.41c64192.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n    }\n    );\n\n    austriaMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"austria\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    ////France\n    franceMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"france\"\n      smallFlagSrc = \"/France-icon.2690ec9f.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n    });\n\n    franceMap.addEventListener(\"mouseover\", \n    function(){ \n      checkFrenchTerritoriesMouseover();\n      selectedCountryName = \"france\";\n      countrySpecialities(selectedCountryName)\n      });\n\n      franceMap.addEventListener(\"mouseout\", \n      function(){ \n        checkFrenchTerritoriesMouseout();\n        });\n\n    ////Lithuania\n    lithuaniaMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"lithuania\"\n      smallFlagSrc = \"/Lithuania-icon.4c393325.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        }\n    });\n\n    lithuaniaMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"lithuania\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    ////Denmark\n    denmarkMap.addEventListener(\"click\", \n    function(){ \n      firstClickedCountryName = \"denmark\"\n      smallFlagSrc = \"/Denmark-icon.5e272e41.png\"\n      if(!clickedCreateTransport){\n        showList(event,firstClickedCountryName,smallFlagSrc)\n        } else {\n          buildRoute(firstClickedCountryName,event);\n        } \n    });\n\n    denmarkMap.addEventListener(\"mouseover\", \n    function(){ \n      checkDannishTerritoriesMouseover();\n      selectedCountryName = \"denmark\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    denmarkMap.addEventListener(\"mouseout\", \n    function(){ \n      checkDannishTerritoriesMouseout();\n      });\n   \n\n ////Iceland\n icelandMap.addEventListener(\"click\", \n function(){ \n  if(denmarkTerritories.includes(\"Iceland\")){\n    firstClickedCountryName = \"denmark\"\n    smallFlagSrc = \"/Denmark-icon.5e272e41.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else {\n    firstClickedCountryName = \"iceland\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\n icelandMap.addEventListener(\"mouseover\", \n function(){ \n  if(denmarkTerritories.includes(\"Iceland\")){\n  checkDannishTerritoriesMouseover();\n   selectedCountryName = \"denmark\";\n  } else{\n    $(icelandMap).addClass(\"mediumMapOnYellow\");\n    selectedCountryName = \"iceland\";\n  }\n   countrySpecialities(selectedCountryName)\n   });\n\n   icelandMap.addEventListener(\"mouseout\", \n   function(){ \n    if(denmarkTerritories.includes(\"Iceland\")){\n      checkDannishTerritoriesMouseout();;\n      } else{\n        $(icelandMap).removeClass(\"mediumMapOnYellow\");\n      }\n      \n     });\n\n ////Belgium - benelux\n belgiumMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"belgium\"\n  smallFlagSrc = \"/Belgium-icon.b3905659.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n}\n );\n\n belgiumMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"belgium\";\n   countrySpecialities(selectedCountryName)\n   });\n\n    ////Netherland - benelux\n netherlandMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"netherland\"\n  smallFlagSrc = \"/Netherlands-icon.f7101548.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\n netherlandMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"netherland\";\n   countrySpecialities(selectedCountryName)\n   });\n\n  ////Hungary \n hungaryMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"hungary\"\n  smallFlagSrc = \"/Hungary-icon.c113b3fb.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n });\n\n hungaryMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"hungary\";\n   countrySpecialities(selectedCountryName)\n   });\n\n ////Romania \n romaniaMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"romania\"\n  smallFlagSrc = \"/Romania-icon.0e037d14.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\n romaniaMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"romania\";\n   countrySpecialities(selectedCountryName)\n   });\n\n ////Bulgaria \n bulgariaMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"bulgaria\"\n  smallFlagSrc = \"/Bulgaria-icon.3b362cd7.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    } \n});\n\n bulgariaMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"bulgaria\";\n   countrySpecialities(selectedCountryName)\n   });\n\n////Yugoslavia \n yugoslaviaMap.addEventListener(\"click\", \n function(){ \n  firstClickedCountryName = \"yugoslavia\"\n  smallFlagSrc = \"/Yugoslavia-Flag-icon.40aaaf55.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    } \n});\n\n yugoslaviaMap.addEventListener(\"mouseover\", \n function(){ \n   selectedCountryName = \"yugoslavia\";\n   countrySpecialities(selectedCountryName)\n});\n\n////Albania \nalbaniaMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"albania\"\n  smallFlagSrc = \"/Albania-Flag-icon.d5ddd13c.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    } \n});\n\nalbaniaMap.addEventListener(\"mouseover\", \nfunction(){ \n  selectedCountryName = \"albania\";\n  countrySpecialities(selectedCountryName)\n});\n\n////Greece \ngreeceMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"greece\"\n  smallFlagSrc = \"/Greece-icon.cfb72f5d.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\ngreeceMap.addEventListener(\"mouseover\", \nfunction(){ \n  selectedCountryName = \"greece\";\n  countrySpecialities(selectedCountryName)\n});\n\n////Turkey \nturkeyMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"turkey\"\n  smallFlagSrc = \"/Turkey-icon.722b7d32.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\nturkeyMap.addEventListener(\"mouseover\", \nfunction(){ \n  selectedCountryName = \"turkey\";\n  countrySpecialities(selectedCountryName)\n});\n\n////Italy \nitalyMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"italy\"\n  smallFlagSrc = \"/Italy-icon.a50e5bdf.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\nitalyMap.addEventListener(\"mouseover\", \nfunction(){ \n  checkItalianTerritoriesMouseover();\n  selectedCountryName = \"italy\";\n  countrySpecialities(selectedCountryName)\n});\n\nitalyMap.addEventListener(\"mouseout\", \nfunction(){ \n  checkItalianTerritoriesMouseout();\n});\n\n////Sicily \nsicilyMap.addEventListener(\"click\", \nfunction(){ \n  if(italyTerritories.includes(\"Sicily\")){\n    firstClickedCountryName = \"italy\"\n    smallFlagSrc = \"/Italy-icon.a50e5bdf.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else {\n    firstClickedCountryName = \"sicily\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\nsicilyMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(italyTerritories.includes(\"Sicily\")){\n  checkItalianTerritoriesMouseover();\n  selectedCountryName = \"italy\";\n} else {\n  $(sicilyMap).addClass(\"smallMapOnViolet\");\n  selectedCountryName = \"sicily\";\n}\n  countrySpecialities(selectedCountryName)\n});\n\nsicilyMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(italyTerritories.includes(\"Sicily\")){\n    checkItalianTerritoriesMouseout();\n  } else {\n    $(sicilyMap).removeClass(\"smallMapOnViolet\");\n  }\n  \n});\n\n////Sardynia \nsardyniaMap.addEventListener(\"click\", \nfunction(){\n  if(italyTerritories.includes(\"Sardynia\")){\n    firstClickedCountryName = \"italy\"\n    smallFlagSrc = \"/Italy-icon.a50e5bdf.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else {\n    firstClickedCountryName = \"sardynia\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\nsardyniaMap.addEventListener(\"mouseover\", \nfunction(){ \n    if(italyTerritories.includes(\"Sardynia\")){\n    checkItalianTerritoriesMouseover();\n    selectedCountryName = \"italy\";\n    countrySpecialities(selectedCountryName)\n  } else {\n    $(sardyniaMap).addClass(\"smallMapOnViolet\");\n    selectedCountryName = \"sardynia\";\n    countrySpecialities(selectedCountryName)\n  }\n});\n\nsardyniaMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(italyTerritories.includes(\"Sardynia\")){\n  checkItalianTerritoriesMouseout();\n  } else {\n    $(sardyniaMap).removeClass(\"smallMapOnViolet\");\n  }\n});\n\n////Corsica \ncorsicaMap.addEventListener(\"click\", \nfunction(){ \n  if(franceTerritories.includes(\"Corsica\")){\n    firstClickedCountryName = \"france\"\n    smallFlagSrc = \"/France-icon.2690ec9f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      } \n  } else {\n    firstClickedCountryName = \"corsica\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\ncorsicaMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(franceTerritories.includes(\"Corsica\")){\n    checkFrenchTerritoriesMouseover();\n    selectedCountryName = \"france\";\n    countrySpecialities(selectedCountryName)\n  } else{\n    $(corsicaMap).addClass(\"smallMapOnYellow\");\n    selectedCountryName = \"corsica\";\n    countrySpecialities(selectedCountryName)\n  }\n\n});\n\n\ncorsicaMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(franceTerritories.includes(\"Corsica\")){\n    checkFrenchTerritoriesMouseout();\n  } else {\n    $(corsicaMap).removeClass(\"smallMapOnYellow\");\n  }\n});\n\n////Algieria \nalgieriaMap.addEventListener(\"click\", \nfunction(){ \n  if(franceTerritories.includes(\"Algieria\")){\n    firstClickedCountryName = \"france\"\n    smallFlagSrc = \"/France-icon.2690ec9f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else {\n    firstClickedCountryName = \"algieria\"\n    smallFlagSrc = \"/Iceland-icon.193b3236.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n\n});\n\nalgieriaMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(franceTerritories.includes(\"Algieria\")){\n    checkFrenchTerritoriesMouseover();\n    selectedCountryName = \"france\";\n    countrySpecialities(selectedCountryName)\n  } else {\n    $(algieriaMap).addClass(\"smallMapOnYellow\");\n    selectedCountryName = \"algieria\";\n    countrySpecialities(selectedCountryName)\n  }\n  \n});\n\nalgieriaMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(franceTerritories.includes(\"Algieria\")){\n  checkFrenchTerritoriesMouseout();\n  } else {\n    $(algieriaMap).removeClass(\"smallMapOnYellow\");\n  }\n});\n\n///Switzerland\nswitzerlandMap.addEventListener(\"click\", \nfunction(){ \n  firstClickedCountryName = \"switzerland\"\n  smallFlagSrc = \"/Switzerland-Flag-icon.791820a4.png\"\n  if(!clickedCreateTransport){\n    showList(event,firstClickedCountryName,smallFlagSrc)\n    } else {\n      buildRoute(firstClickedCountryName,event);\n    }\n});\n\nswitzerlandMap.addEventListener(\"mouseover\", \nfunction(){ \n  selectedCountryName = \"switzerland\";\n  countrySpecialities(selectedCountryName)\n});\n\n\n      \n\n  ////GB\ngreatBritainMap.addEventListener(\"click\", \n  function(){ \n    firstClickedCountryName = \"greatBritain\"\n    smallFlagSrc = \"/United-Kingdom-icon.9151695f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  });\n\n  greatBritainMap.addEventListener(\"mouseover\", \n  function(){ \n  checkBritishTerritoriesMouseover();\n  selectedCountryName = \"greatBritain\";\n  countrySpecialities(selectedCountryName)\n  });\n\n  greatBritainMap.addEventListener(\"mouseout\", \n  function(){ \n    checkBritishTerritoriesMouseout();\n});\n\n//Ireland\nirelandMap.addEventListener(\"click\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"Ireland\")){\n    firstClickedCountryName = \"greatBritain\"\n    smallFlagSrc = \"/United-Kingdom-icon.9151695f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else{\n    firstClickedCountryName = \"ireland\"\n    smallFlagSrc = \"/Ireland-icon.c30a36d6.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n});\n\nirelandMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"Ireland\")){\n    checkBritishTerritoriesMouseover();\n    selectedCountryName = \"greatBritain\";\n    countrySpecialities(selectedCountryName)\n  } else {\n    $(irelandMap).addClass(\"bigMapOnViolet\");\n    selectedCountryName = \"ireland\";\n    countrySpecialities(selectedCountryName)\n  } \n});\n\nirelandMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"Ireland\")){\n  checkBritishTerritoriesMouseout();\n  } else {\n    $(irelandMap).removeClass(\"bigMapOnViolet\");\n  }\n});\n\n\n//Northern Ireland\nirelandNorthMap.addEventListener(\"click\", \nfunction(){\n  \n  if(greatBritainTerritories.includes(\"IrelandNorth\")){\n    firstClickedCountryName = \"greatBritain\"\n    smallFlagSrc = \"/United-Kingdom-icon.9151695f.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  } else{\n    firstClickedCountryName = \"irelandNorth\"\n    smallFlagSrc = \"/Ulster-icon.653d30c0.png\"\n    if(!clickedCreateTransport){\n      showList(event,firstClickedCountryName,smallFlagSrc)\n      } else {\n        buildRoute(firstClickedCountryName,event);\n      }\n  }\n\n });\n\nirelandNorthMap.addEventListener(\"mouseover\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"IrelandNorth\")){\n    checkBritishTerritoriesMouseover();\n    selectedCountryName = \"greatBritain\";\n    countrySpecialities(selectedCountryName)\n  } else if(irishTerritories.includes(\"IrelandNorth\")){\n    selectedCountryName = \"ireland\";\n  } else{\n    $(irelandNorthMap).addClass(\"smallMapOnYellow\");\n    selectedCountryName = \"irelandNorth\";\n    countrySpecialities(selectedCountryName)\n  } \n});\n\nirelandNorthMap.addEventListener(\"mouseout\", \nfunction(){ \n  if(greatBritainTerritories.includes(\"IrelandNorth\")){\n  checkBritishTerritoriesMouseout();\n  } else {\n    $(irelandNorthMap).removeClass(\"smallMapOnYellow\");\n  }\n});\n\n\n\n    function recalculateCountriesPositionsBasedOnResolution(){\n  \n      polishMapLocation.style.height = (factor * countries.poland.height) + \"px\";\n      polishMapLocation.style.width = (factor * countries.poland.width) + \"px\";\n\n      lithuanianMapLocation.style.height = (factor * countries.lithuania.height) + \"px\";\n      lithuanianMapLocation.style.width = (factor * countries.lithuania.width) + \"px\";\n\n      germanyMapLocation.style.height = (factor * countries.germany.height) + \"px\";\n      germanyMapLocation.style.width = (factor * countries.germany.width) + \"px\";\n\n      ussrMapLocation.style.height = (factor * countries.ussr.height) + \"px\";\n      ussrMapLocation.style.width = (factor * countries.ussr.width) + \"px\";\n\n      czechoslovakiaMapLocation.style.height = (factor * countries.czechoslovakia.height) + \"px\";\n      czechoslovakiaMapLocation.style.width = (factor * countries.czechoslovakia.width) + \"px\";\n\n      greatBritainMapLocation.style.height = (factor * countries.greatBritain.height) + \"px\";\n      greatBritainMapLocation.style.width = (factor * countries.greatBritain.width) + \"px\";\n      \n      austriaMapLocation.style.height = (factor * countries.austria.height) + \"px\";\n      austriaMapLocation.style.width = (factor * countries.austria.width) + \"px\";\n\n      franceMapLocation.style.height = (factor * countries.france.height) + \"px\";\n      franceMapLocation.style.width = (factor * countries.france.width) + \"px\";\n\n      norwayMapLocation.style.height = (factor * countries.norway.height) + \"px\";\n      norwayMapLocation.style.width = (factor * countries.norway.width) + \"px\";\n\n      swedenMapLocation.style.height = (factor * countries.sweden.height) + \"px\";\n      swedenMapLocation.style.width = (factor * countries.sweden.width) + \"px\";\n\n      finlandMapLocation.style.height = (factor * countries.finland.height) + \"px\";\n      finlandMapLocation.style.width = (factor * countries.finland.width) + \"px\";\n\n      estoniaMapLocation.style.height = (factor * countries.estonia.height) + \"px\";\n      estoniaMapLocation.style.width = (factor * countries.estonia.width) + \"px\";\n\n      latviaMapLocation.style.height = (factor * countries.latvia.height) + \"px\";\n      latviaMapLocation.style.width = (factor * countries.latvia.width) + \"px\";\n\n      denmarkMapLocation.style.height = (factor * countries.denmark.height) + \"px\";\n      denmarkMapLocation.style.width = (factor * countries.denmark.width) + \"px\";\n\n      icelandMapLocation.style.height = (factor * countries.iceland.height) + \"px\";\n      icelandMapLocation.style.width = (factor * countries.iceland.width) + \"px\";\n\n      belgiumMapLocation.style.height = (factor * countries.belgium.height) + \"px\";\n      belgiumMapLocation.style.width = (factor * countries.belgium.width) + \"px\";\n      \n      netherlandMapLocation.style.height = (factor * countries.netherland.height) + \"px\";\n      netherlandMapLocation.style.width = (factor * countries.netherland.width) + \"px\";\n\n      hungaryMapLocation.style.height = (factor * countries.hungary.height) + \"px\";\n      hungaryMapLocation.style.width = (factor * countries.hungary.width) + \"px\";\n\n      romaniaMapLocation.style.height = (factor * countries.romania.height) + \"px\";\n      romaniaMapLocation.style.width = (factor * countries.romania.width) + \"px\";\n\n      bulgariaMapLocation.style.height = (factor * countries.bulgaria.height) + \"px\";\n      bulgariaMapLocation.style.width = (factor * countries.bulgaria.width) + \"px\";\n\n      yugoslaviaMapLocation.style.height = (factor * countries.yugoslavia.height) + \"px\";\n      yugoslaviaMapLocation.style.width = (factor * countries.yugoslavia.width) + \"px\";\n\n      albaniaMapLocation.style.height = (factor * countries.albania.height) + \"px\";\n      albaniaMapLocation.style.width = (factor * countries.albania.width) + \"px\";\n\n      greeceMapLocation.style.height = (factor * countries.greece.height) + \"px\";\n      greeceMapLocation.style.width = (factor * countries.greece.width) + \"px\";\n      \n      turkeyMapLocation.style.height = (factor * countries.turkey.height) + \"px\";\n      turkeyMapLocation.style.width = (factor * countries.turkey.width) + \"px\";\n\n      italyMapLocation.style.height = (factor * countries.italy.height) + \"px\";\n      italyMapLocation.style.width = (factor * countries.italy.width) + \"px\";\n\n      sicilyMapLocation.style.height = (factor * countries.sicily.height) + \"px\";\n      sicilyMapLocation.style.width = (factor * countries.sicily.width) + \"px\";\n\n      sardyniaMapLocation.style.height = (factor * countries.sardynia.height) + \"px\";\n      sardyniaMapLocation.style.width = (factor * countries.sardynia.width) + \"px\";\n\n      corsicaMapLocation.style.height = (factor * countries.corsica.height) + \"px\";\n      corsicaMapLocation.style.width = (factor * countries.corsica.width) + \"px\";\n\n      algieriaMapLocation.style.height = (factor * countries.algieria.height) + \"px\";\n      algieriaMapLocation.style.width = (factor * countries.algieria.width) + \"px\";\n\n      switzerlandMapLocation.style.height = (factor * countries.switzerland.height) + \"px\";\n      switzerlandMapLocation.style.width = (factor * countries.switzerland.width) + \"px\";\n\n      spainMapLocation.style.height = (factor * countries.spain.height) + \"px\";\n      spainMapLocation.style.width = (factor * countries.spain.width) + \"px\";\n\n      portugalMapLocation.style.height = (factor * countries.portugal.height) + \"px\";\n      portugalMapLocation.style.width = (factor * countries.portugal.width) + \"px\";\n\n      irelandNorthMapLocation.style.height = (factor * countries.irelandNorth.height) + \"px\";\n      irelandNorthMapLocation.style.width = (factor * countries.irelandNorth.width) + \"px\";\n\n      irelandMapLocation.style.height = (factor * countries.ireland.height) + \"px\";\n      irelandMapLocation.style.width = (factor * countries.ireland.width) + \"px\";\n      \n      easternPrussiaMapLocation.style.height = (factor * countries.easternPrussia.height) + \"px\";\n      easternPrussiaMapLocation.style.width = (factor * countries.easternPrussia.width) + \"px\";\n\n      \n      dateValueOnMap.style.fontSize = (factor * date.fontSize) + \"px\"\n      dateOnMap.style.fontSize = (factor * date.height) + \"px\"\n    }\n\n    function calculateResoluctionFactor(){\n      factor = resolution / 1887 ;\n    }\n\n    function countrySpecialities(selectedCountryName){\n      selectedCountry = refreshObjectsTranslation(selectedCountryName);\n      specialitiesList = \"\";\n      for(let specNbr in selectedCountry.specialities){\n        if(specNbr < Object.keys(selectedCountry.specialities).length){\n        specialitiesList += selectedCountry.specialities[specNbr] + \", \"\n      } else {\n        specialitiesList += selectedCountry.specialities[specNbr]\n      }\n      }\n     let notifyInfoValue = notifyInfo(selectedCountry)\n     if(!blockageForInfoNotify){\n        Notify.info(notifyInfoValue)\n     }\n    }\n\n    function notifyInfo(selectedCountry){\n    return  \"<b>\" + selectedLanguage[selectedCountryName] + \"</b>\" + \": <br> \" + selectedLanguage.population + \": \" + selectedCountry.population + \" \" + selectedLanguage.milionShortcut\n            + \"<br>\" + selectedLanguage.specialization + \": \" + specialitiesList\n    }\n\n    function checkItalianTerritoriesMouseover(){\n      if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sicily\") && italyTerritories.includes(\"Sardynia\")){\n        $(italyMap).addClass(\"italyMapOn\")\n        $(sicilyMap).addClass(\"smallMapOnViolet\");\n        $(sardyniaMap).addClass(\"smallMapOnViolet\");\n      }\n      else if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sicily\")){\n        $(italyMap).addClass(\"italyMapOn\")\n        $(sicilyMap).addClass(\"smallMapOnViolet\");\n      } else if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sardynia\")){\n        $(italyMap).addClass(\"italyMapOn\")\n        $(sardyniaMap).addClass(\"smallMapOnViolet\");\n      }  else if(italyTerritories.includes(\"Italy\")){\n        $(italyMap).addClass(\"italyMapOn\")\n      }\n    }\n\n    function checkItalianTerritoriesMouseout(){\n      if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sicily\") && italyTerritories.includes(\"Sardynia\")){\n        $(italyMap).removeClass(\"italyMapOn\")\n        $(sicilyMap).removeClass(\"smallMapOnViolet\");\n        $(sardyniaMap).removeClass(\"smallMapOnViolet\");\n      }   else if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sicily\")){\n        $(italyMap).removeClass(\"italyMapOn\")\n        $(sicilyMap).removeClass(\"smallMapOnViolet\");\n      } else if(italyTerritories.includes(\"Italy\") && italyTerritories.includes(\"Sardynia\")){\n        $(italyMap).removeClass(\"italyMapOn\")\n        $(sardyniaMap).removeClass(\"smallMapOnViolet\");\n      }else if(italyTerritories.includes(\"Italy\")){\n        $(italyMap).removeClass(\"italyMapOn\")\n      }\n    }\n\n    function checkFrenchTerritoriesMouseover(){\n    \n      if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\") && franceTerritories.includes(\"Algieria\")){\n        $(franceMap).addClass(\"hugeMapOnYellow\")\n        $(corsicaMap).addClass(\"smallMapOnYellow\");\n        $(algieriaMap).addClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\")){\n        $(franceMap).addClass(\"hugeMapOnYellow\")\n        $(corsicaMap).addClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\")){\n        $(franceMap).addClass(\"hugeMapOnYellow\")\n        $(algieriaMap).addClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\")){\n        $(franceMap).addClass(\"hugeMapOnYellow\")\n      }\n    }\n\n    function checkFrenchTerritoriesMouseout(){\n      if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\") && franceTerritories.includes(\"Algieria\")){\n        $(franceMap).removeClass(\"hugeMapOnYellow\")\n        $(corsicaMap).removeClass(\"smallMapOnYellow\");\n        $(algieriaMap).removeClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\")){\n        $(franceMap).removeClass(\"hugeMapOnYellow\")\n        $(corsicaMap).removeClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\") && franceTerritories.includes(\"Corsica\")){\n        $(franceMap).removeClass(\"hugeMapOnYellow\")\n        $(algieriaMap).removeClass(\"smallMapOnYellow\");\n      } else if(franceTerritories.includes(\"France\")){\n        $(franceMap).removeClass(\"hugeMapOnYellow\")\n      }\n    }\n\n    function checkDannishTerritoriesMouseover(){\n      if(denmarkTerritories.includes(\"Denmark\") && denmarkTerritories.includes(\"Iceland\")){\n        $(denmarkMap).addClass(\"mediumMapOnYellow\")\n        $(icelandMap).addClass(\"mediumMapOnYellow\");\n      } else if(denmarkTerritories.includes(\"Denmark\")){\n        $(denmarkMap).addClass(\"mediumMapOnYellow\")\n      }\n    }\n\n    function checkDannishTerritoriesMouseout(){\n      if(denmarkTerritories.includes(\"Denmark\") && denmarkTerritories.includes(\"Iceland\")){\n      $(denmarkMap).removeClass(\"mediumMapOnYellow\")\n      $(icelandMap).removeClass(\"mediumMapOnYellow\");\n      }\n      else if(denmarkTerritories.includes(\"Denmark\")){\n        $(denmarkMap).removeClass(\"mediumMapOnYellow\")\n      }\n    }\n\n    function checkBritishTerritoriesMouseover(){\n      if(greatBritainTerritories.includes(\"GB\") && greatBritainTerritories.includes(\"IrelandNorth\")){\n        $(greatBritainMap).addClass(\"hugeMapOnYellow\")\n        $(irelandNorthMap).addClass(\"mediumMapOnYellow\");\n        }\n        else if(greatBritainTerritories.includes(\"GB\")){\n          $(greatBritainMap).addClass(\"hugeMapOnYellow\")\n        }\n    }\n\n    function checkBritishTerritoriesMouseout(){\n      if(greatBritainTerritories.includes(\"GB\") && greatBritainTerritories.includes(\"IrelandNorth\")){\n        $(greatBritainMap).removeClass(\"hugeMapOnYellow\")\n        $(irelandNorthMap).removeClass(\"mediumMapOnYellow\");\n        }\n        else if(greatBritainTerritories.includes(\"GB\")){\n          $(greatBritainMap).removeClass(\"hugeMapOnYellow\")\n        }\n    }\n\n    function checkGermanTerritoriesMouseover(){\n      if(germanyTerritories.includes(\"Germany\") && germanyTerritories.includes(\"EasternPrussia\")){\n        $(germanyMap).addClass(\"hugeMapOnYellow\")\n        $(easternPrussiaMap).addClass(\"mediumMapOnYellow\");\n        }\n        else if(germanyTerritories.includes(\"Germany\")){\n          $(germanyMap).addClass(\"hugeMapOnYellow\")\n        }\n    }\n\n    function checkGermanTerritoriesMouseout(){\n      if(germanyTerritories.includes(\"Germany\") && germanyTerritories.includes(\"EasternPrussia\")){\n        $(germanyMap).removeClass(\"hugeMapOnYellow\")\n        $(easternPrussiaMap).removeClass(\"mediumMapOnYellow\");\n        }\n        else if(germanyTerritories.includes(\"Germany\")){\n          $(germanyMap).removeClass(\"hugeMapOnYellow\")\n        }\n    }\n\n    let start = document.querySelector(\"#start\");\n    const startContainer = document.querySelector(\"#startContainer\"); \n    const pause = document.querySelector(\"#pause\"); \n    const pauseContainer = document.querySelector(\"#pauseContainer\"); \n    const clockWheel = document.querySelector(\".hours-container\");  \n    const pauseLaunched = document.querySelector(\"#pauseLaunched\");\n\n    start.addEventListener(\"click\", \n    function(){ \n        startContainer.style.display = \"none\";\n        pauseContainer.style.display = \"\";\n        clockWheel.style.animationPlayState = 'running';\n        pauseLaunched.style.display = \"none\"\n        clearInterval(pulsingInterval);\n        calculateDateTimeInterval = setInterval(calculateDateTime,1000)\n        \n      }\n    );\n\n    pause.addEventListener(\"click\", \n    function(){ \n        startContainer.style.display = \"\";\n        pauseContainer.style.display = \"none\";\n        clockWheel.style.animationPlayState = 'paused';\n        pauseLaunched.style.display = \"inline-block\"\n        pulsingIntervalCounter = 0;\n        pulsingInterval = setInterval(pulsing, 1000);\n        clearInterval(calculateDateTimeInterval);\n        pauseClicked = true;\n      }\n    );\n\n    function pulsing(){\n        pulsingIntervalCounter++\n        if(pulsingIntervalCounter%2 ==0){\n          pauseLaunched.style.transform = 'scale(1)'\n      } else {\n        pauseLaunched.style.transform = 'scale(1.2)'  \n    \n      }\n    }\n\n    function calculateDateTime(){\n      time.hour++\n      let hourWatch;\n      if(time.hour < 10){\n        hourWatch = \"0\" + time.hour\n      } else {\n        hourWatch =  time.hour;\n      }\n\n      timeWatch.innerHTML = selectedLanguage.hour + \": \" + hourWatch;\n\n      if((time.hour==23 || time.hour== 11) && pauseClicked == true){\n        clockWheel.classList.add(\"animateDescriptor\");\n        setTimeout(function() { \n        clockWheel.classList.remove(\"animateDescriptor\");    \n      }, 1000); \n      pauseClicked = false;\n\n      }\n      if(time.hour==24){\n        time.hour = 0;\n        dateValue.day++;\n        changeDate(dateValue);\n          if((dateValue.month == 1 || dateValue.month == 3 || dateValue.month == 5 || dateValue.month == 7 || dateValue.month == 8 || dateValue.month == 10 || dateValue.month == 12) && dateValue == 31){\n            if(dateValue.month == 12){\n              dateValue.month = 1\n              dateValue.year++;\n              changeDate(dateValue);\n            } else{\n            dateValue.month++;\n            changeDate(dateValue);\n          }\n          } else if((dateValue.month == 4 || dateValue.month == 6 || dateValue.month == 9 || dateValue.month == 11) && dateValue.day ==30){\n            dateValue.month++;\n            changeDate(dateValue);\n          } else if(dateValue.month == 2 & dateValue.day == 28){\n            dateValue.month++;\n            changeDate(dateValue);\n          }\n      }\n  }\n  \n  function changeDate(dateValue){\n    let day;\n    let month;\n    if(dateValue.day < 10){\n      day = \"0\" + dateValue.day;\n    } else {\n      day = dateValue.day;\n    }\n    \n    if(dateValue.month < 10 ){\n      month = \"0\" + dateValue.month;\n    }\n    dateValueOnMap.innerHTML = day + \".\" + month + \".\" + dateValue.year;\n  }\n\n  const countryPanelList = document.querySelector(\".countryPanelList\");\n  const navHeight = document.querySelector('.nav').clientHeight;\n  const placeForFlag = document.querySelector(\"#placeForFlag\");  \n  const countryFlagActionCountry = $(\".countryFlagActionCountry\")[0]\n  export let countryPanelListClicked = false;\n\n  placeForFlag.addEventListener('click',function(){\n    hideActionForCountryList();\n    toggleCountryPanelListClicked();\n    // countryPanelListClicked = false;\n  })\n\n  function showList(event){\n    if(firstClickedCountryName == clickedCountryName){ //if second click is about the same country\n      hideActionForCountryList();\n    };\n\n    lastClickedCountryTag = event.target;\n    controlPanelWidth = $(\".countryPanelList\").width(); //Y\n    controlPanelHeight = $(\".countryPanelList\").height(); //X\n\n    //save displaying list on map\n    //width position\n    if(controlPanelWidth + event.clientY  + 20 > resolutionBodyY){\n      clickedPositionY = resolutionBodyY - controlPanelWidth ;\n    } else {\n      clickedPositionY = event.clientY + window.scrollY - controlPanelWidth;\n\n    }\n\n    //height position\n    if(controlPanelHeight + event.clientX + window.scrollX + 15 > resolution){\n      clickedPositionX = resolution - (controlPanelHeight*2.5)  - 10;\n    } else {\n      clickedPositionX = event.clientX + window.scrollX + (controlPanelHeight * 0,5) + 10;\n    }\n     \n      if(countryPanelListClicked && firstClickedCountryName == clickedCountryName){\n         countryPanelListClicked = false;\n      } else{\n          countryPanelListClicked = true;\n          countryPanelList.style.left = clickedPositionX + \"px\" //event.clientX + 20 + \"px\";\n          countryPanelList.style.transition = \"all 1.5s\";\n          countryPanelList.style.top = clickedPositionY + \"px\"//event.clientY + window.scrollY - controlPanelWidth + \"px\";\n          countryPanelList.style.visibility = \"visible\";\n          countryPanelList.style.opacity = \"1\";\n          placeForFlag.src = smallFlagSrc;\n          countryFlagActionCountry.style.transition = \"0.3s\"\n        }\n\n      clickedCountryName = firstClickedCountryName\n  }\n\nexport function hideActionForCountryList(){\n    countryPanelList.style.transition = \"opacity 1s ease-out\";\n    countryPanelList.style.opacity = \"0.5\";\n    countryPanelList.style.visibility = \"hidden\";\n    countryFlagActionCountry.style.transition = \"0s\"\n  }\nexport function toggleCountryPanelListClicked(){\n  if(countryPanelListClicked){\n    countryPanelListClicked = false;\n  } else {\n    countryPanelListClicked = true;\n  }\n}\n\nexport function toggleClickedCreateTransport(){\n  if(clickedCreateTransport){\n    clickedCreateTransport = false;\n  } else {\n    clickedCreateTransport = true;\n  }\n}\n\nexport function cleanCurrentRoute(){\n  currentRoute = [];\n  currentRouteTranslated = [];\n  route.innerHTML = \"\";\n}\n\n\nexport let listObjects = {\n    \"goods\" : goods,\n    \"ussr\" : countries.ussr,\n    \"germany\" : countries.germany,\n    \"lithuania\" : countries.lithuania,\n    \"poland\" : countries.poland,\n    \"czechoslovakia\" : countries.czechoslovakia,\n    \"greatBritain\" : countries.greatBritain,\n    \"austria\" : countries.austria,\n    \"france\" : countries.france,\n    \"norway\" : countries.norway,\n    \"finland\" : countries.finland,\n    \"sweden\" : countries.sweden,\n    \"latvia\" : countries.latvia,\n    \"estonia\" : countries.estonia,\n    \"romania\" : countries.romania,\n    \"hungary\" : countries.hungary,\n    \"yugoslavia\" : countries.yugoslavia,\n    \"bulgaria\" : countries.bulgaria,\n    \"turkey\" : countries.turkey,\n    \"greece\" : countries.greece,\n    \"italy\" : countries.italy,\n    \"spain\" : countries.spain,\n    \"portugal\" : countries.portugal,\n    \"denmark\" : countries.denmark,\n    \"belgium\" : countries.belgium,\n    \"netherland\" : countries.netherland,\n    \"albania\" : countries.albania,\n    \"iceland\" : countries.iceland,\n    \"switzerland\" : countries.switzerland,\n    \"sicily\" : countries.sicily,\n    \"sardynia\" : countries.sardynia,\n    \"corsica\" : countries.corsica,\n    \"algieria\" : countries.algieria,\n    \"irelandNorth\" : countries.irelandNorth,\n    \"ireland\" : countries.ireland,\n    \"easternPrussia\" : countries.easternPrussia\n}\n\n\n","import {clickedCountryName,currentRoute} from './map'\nimport {addAvaiableGoodOptions,translateCurrentRoute} from './transportPanel'\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\nconst languagesListTranslation = document.querySelector(\".languagesList\");\n\nlanguagesListTranslation.addEventListener(\"click\",function(e){\n    let index = Array.prototype.indexOf.call(languagesListTranslation.children, e.target);\n    \n    if(index == 0){\n        selectedLanguage = polish\n        toggleLanguage();\n    } else if(index == 1){\n        selectedLanguage = english\n        toggleLanguage();\n    } else if(index == 2){\n        selectedLanguage = russian\n        toggleLanguage();\n    }\n  });\n});\n\n\n\nconst   polish = {\n        specialization: \"Specjalizacja\",\n        population: \"Populacja\",\n        link0: \"Panel gracza\",\n        link1: \"Giełda\",\n        link2: \"Tabor\",\n        link3: \"Kraje\",\n        polish: \"Polski\",\n        english: \"Angielski\",\n        russian: \"Rosyjski\",\n        selectLanguage: \"Wybierz język\",\n        instruction: \"Instrukcja\",\n        myAchievements: \"Moje osiągnięcia\",\n        srcFlagTranslation: \"/pl2.d37abd68.png\",\n        chosenLanguageTranslation: \"Wybrany język\",\n        poland: \"Polska\",\n        germany: \"Niemcy\",\n        greatBritain: \"Wielka Brytania\",\n        norway: \"Norwegia\",\n        sweden: \"Szwecja\",\n        finland: \"Finlandia\",\n        ussr: \"ZSRR\",\n        czechoslovakia: \"Czechosłowacja\",\n        estonia: \"Estonia\",\n        latvia: \"Łotwa\",\n        lithuania: \"Litwa\",\n        romania: \"Rumunia\",\n        bulgaria: \"Bułgaria\",\n        greece: \"Grecja\",\n        albania: \"Albania\",\n        yugoslavia: \"Jugosławia\",\n        hungary: \"Węgry\",\n        austria: \"Austria\",\n        switzerland: \"Szwajcaria\",\n        italy: \"Włochy\",\n        france: \"Francja\",\n        spain: \"Hiszpania\",\n        portugal: \"Portugalia\",\n        turkey: \"Turcja\",\n        denmark: \"Dania\",\n        netherland: \"Holandia\",\n        belgium: \"Belgia\",\n        milionShortcut: \"mln\",\n        coal: \"Węgiel\",\n        steel: \"Stal\",\n        aluminium: \"Aluminium\",\n        copper: \"Miedź\",\n        lead: \"Ołów\",\n        grain: \"Zboże\",\n        oil: \"Ropa\",\n        wine: \"Wino\",\n        fish: \"Ryby\",\n        flour: \"Mąka\",\n        clothes: \"Ubrania\",\n        zinc: \"Cynk\",\n        wolfram: \"Wolfram\",\n        ideas: \"Idee\",\n        mechanicalParts: \"Częsci mechaniczne\",\n        mostAvailable: \"Najbardziej dostępne\",\n        theLeastAvailable : \"Najmniej dostępne\",\n        theMostExpensive : \"Najdroższe\",\n        theCheapest : \"Najtańsze\",\n        nickel: \"Nikiel\",\n        chrome: \"Chrom\",\n        forestGoods : \"Dobra leśne\",\n        iceland : \"Islandia\",\n        sicily : \"Sycylia\",\n        sardynia : \"Sardynia\",\n        corsica : \"Korsyka\",\n        algieria : \"Algieria\",\n        ireland : \"Irlandia\",\n        irelandNorth : \"Irlandia Północna\",\n        easternPrussia : \"Prusy wschodnie\",\n        pauseLaunched : \"Pauza\",\n        hour: \"Godzina\",\n        createTransport : \"Stwórz transport\",\n        countryMarket : \"Rynek krajowy\",\n        checkCountryDetails : \"Zobacz szczegóły kraju\",\n        truck : \"Ciężarowy\",\n        bus : \"Autobusowy\",\n        railway : \"Kolejowy\",\n        maritime : \"Morski\",\n        air : \"Lotniczy\",\n        countryStartName : \"Kraj początkowy\",\n        typeOfTransport : \"Typ transportu\",\n        wares : \"Towary\",\n        selectWare : \"Wybierz towar\",\n        passengers: \"Pasażerowie\",\n        country: \"Kraj\",\n        alreadyAddedToRoute: \"jest już dodany do trasy\",\n        cannotAddCountry: \"Nie można dodać kraju\",\n        toRouteBecauseItIsTheStartingCountry : \"do trasy ponieważ jest on krajem początkowym\",\n        routeBy : \"Trasa przez\",\n        endCountryOfTheRoute : \"Kraj końcowy trasy\",\n        availableQty : \"Dostępna ilość\",\n        goodCostInStartedCountry : \"Cena towaru w kraju startowym\" ,\n        goodCostInEndCountry : \"Cena towaru w kraju końcowym\",\n        howManyToTransport : \"Ile chcesz przetransportować\",\n        isNotANeighborOf: \"nie jest sąsiadem\",\n        land: \"Lądowy\",\n        transportType: \"Rodzaj transportu\",\n        sea: \"Morski\",\n        maritimeRouteOverSize: \"Trasa morska nie może być stworzona z więcej niż 2 krajów\",\n        doNotHaveAccessToSea: \"nie ma dostępu do morza\",\n        routeDistance: \"Długość trasy\",\n        distanceUnitValue: \"km\",\n        alreadyAllCountriesDeletedFromRoute: \"Wszystkie kraje zostały już wycofane z trasy\",\n        capacity: \"Ładowność\",\n        quantityNeeded : \"Potrzebna ilość\",\n        speedUnitKmH : \"km/h\",\n        speed : \"Prędkość\",\n        estimatedArrival: \"Szacowany czas przybycia\",\n        costFor: \"Koszt za\",\n        calculatedCost : \"Koszt wyliczony\",\n        income : \"Dochód\",\n        profit : \"Zysk\"\n        \n    }\n    \nconst   english = {\n        specialization: \"Specialization\",\n        population: \"Population\",\n        link0: \"Player panel\",\n        link1: \"Stock market\",\n        link2: \"Stock\",\n        link3: \"Countries\",\n        polish: \"Polish\",\n        english: \"English\",\n        russian: \"Russian\",\n        selectLanguage: \"Choose language\",\n        instruction: \"Manual\",\n        myAchievements: \"My Achievements\",\n        srcFlagTranslation: \"/gb2.cce89a59.png\",\n        chosenLanguageTranslation: \"Selected language\",\n        poland: \"Poland\",\n        germany: \"Germany\",\n        greatBritain: \"Great Britain\",\n        norway: \"Norway\",\n        sweden: \"Sweden\",\n        finland: \"Finland\",\n        ussr: \"USSR\",\n        czechoslovakia: \"Czechoslovakia\",\n        estonia: \"Estonia\",\n        latvia: \"Latvia\",\n        lithuania: \"Lithuania\",\n        romania: \"Romania\",\n        bulgaria: \"Bulgaria\",\n        greece: \"Greece\",\n        albania: \"Albania\",\n        yugoslavia: \"Yugoslavia\",\n        hungary: \"Hungary\",\n        austria: \"Austria\",\n        switzerland: \"Switzerland\",\n        italy: \"Italy\",\n        france: \"France\",\n        spain: \"Spain\",\n        portugal: \"Portugal\",\n        turkey: \"Turkey\",\n        denmark: \"Denmark\",\n        netherland: \"Netherland\",\n        belgium: \"Belgium\",\n        milionShortcut: \"mln\",\n        coal: \"Coal\",\n        steel: \"Steel\",\n        aluminium: \"Aluminium\",\n        copper: \"Copper\",\n        lead: \"Lead\",\n        grain: \"Grain\",\n        oil: \"Oil\",\n        wine: \"Wine\",\n        fish: \"Fish\",\n        flour: \"Flour\",\n        clothes: \"Clothes\",\n        zinc: \"Zinc\",\n        wolfram: \"Wolfram\",\n        ideas: \"Ideas\",\n        mechanicalParts: \"Mechanical parts\",\n        mostAvailable: \"Most Available\",\n        theLeastAvailable : \"The Least Available\",\n        theMostExpensive : \"The Most Expensive\",\n        theCheapest : \"The Cheapest\",\n        nickel: \"Nickel\",\n        chrome: \"Chrome\",\n        forestGoods : \"Forest goods\",\n        iceland : \"Iceland\",\n        sicily : \"Sicily\",\n        sardynia : \"Sardinia\",\n        corsica : \"Corsica\",\n        algieria : \"Algeria\",\n        ireland : \"Ireland\",\n        irelandNorth : \"Northern Ireland\",\n        easternPrussia : \"Eastern Prussia\",\n        pauseLaunched : \"Pause\",\n        hour: \"Hour\",\n        createTransport : \"Create transport\",\n        countryMarket : \"Country market\",\n        checkCountryDetails : \"Check country details\",\n        truck : \"Truck\",\n        bus : \"Bus\",\n        railway : \"Railway\",\n        maritime : \"Maritime\",\n        air : \"Air\",\n        countryStartName : \"Country start name\",\n        typeOfTransport : \"Type of transport\",\n        wares : \"Wares\",\n        selectWare : \"Select ware\",\n        passengers: \"Passengers\",\n        country: \"Country\",\n        alreadyAddedToRoute: \"already added to route\",\n        cannotAddCountry: \"Can't add country\",\n        toRouteBecauseItIsTheStartingCountry : \"to the route as it is the starting country\",\n        routeBy : \"Route by\",\n        endCountryOfTheRoute : \"End country of the route\",\n        availableQty : \"Available quantity\",\n        goodCostInStartedCountry : \"The price of the good in the starting country\" ,\n        goodCostInEndCountry : \"The price of the good in the end country\",\n        howManyToTransport : \"How many do you want to transport\",\n        isNotANeighborOf: \"is not a neighbor of\",\n        land: \"Land\",\n        transportType: \"Transport type\",\n        sea: \"Sea\",\n        maritimeRouteOverSize: \"The sea route cannot be composed of more than 2 countries\",\n        doNotHaveAccessToSea: \"do not have access to sea\",\n        routeDistance: \"Route distance\",\n        distanceUnitValue: \"km\",\n        alreadyAllCountriesDeletedFromRoute: \"Already all countries were deleted from route\",\n        capacity: \"Capacity\",\n        quantityNeeded : \"Quantity needed\",\n        speedUnitKmH : \"km/h\",\n        speed : \"Speed\",\n        estimatedArrival: \"Estimated arrival time\",\n        costFor: \"Cost for\",\n        calculatedCost : \"Calculated cost\",\n        income : \"Income\",\n        profit : \"Profit\"\n    }\n    \nconst   russian = {\n        specialization: \"Специализация\",\n        population: \"Население\",\n        link0: \"Панель игрока\",\n        link1: \"Фондовый рынок\",\n        link2: \"Запас\",\n        link3: \"Страны\",\n        polish: \"Польский\",\n        english: \"Английский\",\n        russian: \"Русский\",\n        selectLanguage: \"Выберите язык\",\n        instruction: \"Инструкция\",\n        myAchievements: \"мои достижения\",\n        srcFlagTranslation: \"/ru2.a879c3bc.png\",\n        chosenLanguageTranslation: \"Выбранный язык\",\n        poland: \"Польша\",\n        germany: \"Германия\",\n        greatBritain: \"Великобритания\",\n        norway: \"Норвегия\",\n        sweden: \"Швеция\",\n        finland: \"Финляндия\",\n        ussr: \"СССР\",\n        czechoslovakia: \"Чехословакия\",\n        estonia: \"Эстония\",\n        latvia: \"Латвия\",\n        lithuania: \"Литва\",\n        romania: \"Румыния\",\n        bulgaria: \"Болгария\",\n        greece: \"Греция\",\n        albania: \"Албания\",\n        yugoslavia: \"Yugoslavia\",\n        hungary: \"Венгрия\",\n        austria: \"Австрия\",\n        switzerland: \"Швейцария\",\n        italy: \"Италия\",\n        france: \"Франция\",\n        spain: \"Испания\",\n        portugal: \"Португалия\",\n        turkey: \"Турция\",\n        denmark: \"Дания\",\n        netherland: \"Нидерланды\",\n        belgium: \"бельгия\",\n        milionShortcut: \"млн\",\n        coal: \"каменный уголь\",\n        steel: \"стали\",\n        aluminium: \"Алюминий\",\n        copper: \"медь\",\n        lead: \"Oлов\",\n        grain: \"Зерновой\",\n        oil: \"Масло\",\n        wine: \"Вино\",\n        fish: \"Рыбы\",\n        flour: \"Мука\",\n        clothes: \"Одежда\",\n        zinc: \"Цинк\",\n        wolfram: \"Вольфрам\",\n        ideas: \"Идеи\",\n        mechanicalParts: \"Механические части\",\n        mostAvailable: \"Самый доступный\",\n        theLeastAvailable : \"Наименее доступный\",\n        theMostExpensive : \"Самый дорогой\",\n        theCheapest : \"Самый дешевый\",\n        nickel: \"никель\",\n        chrome: \"Хром\",\n        forestGoods : \"Лесные товары\",\n        iceland : \"Исландия\",\n        sicily : \"Сицилия\",\n        sardynia : \"Сардиния\",\n        corsica : \"Корсика\",\n        algieria : \"Алжир\",\n        ireland : \"Ирландия\",\n        irelandNorth : \"Северная Ирландия\",\n        easternPrussia : \"Восточная Пруссия\",\n        pauseLaunched : \"Пауза\",\n        hour: \"Час\",\n        createTransport : \"Создать транспорт\",\n        countryMarket : \"Загородный рынок\",\n        checkCountryDetails : \"Проверить информацию о стране\",\n        truck : \"Грузовая машина\",\n        bus : \"Автобус\",\n        railway : \"Железнодорожный\",\n        maritime : \"морской\",\n        air : \"Воздуха\",\n        countryStartName : \"Начальное название страны\",\n        typeOfTransport : \"Вид транспорта\",\n        wares : \"Товары\",\n        selectWare : \"Выберите продукт\",\n        passengers: \"Пассажиры\",\n        country: \"Страна\",\n        alreadyAddedToRoute: \"уже добавлено в маршрут\",\n        cannotAddCountry: \"Невозможно добавить страну\",\n        toRouteBecauseItIsTheStartingCountry : \"к маршруту, так как это стартовая страна\",\n        routeBy : \"Маршрут по\",\n        endCountryOfTheRoute : \"Kонечная страна маршрута\",\n        availableQty : \"Доступное количество\",\n        goodCostInStartedCountry : \"Цена товара в стартовой стране\" ,\n        goodCostInEndCountry : \"Цена товара в конечной стране\",\n        howManyToTransport : \"Сколько вы хотите перевезти\",\n        isNotANeighborOf: \"не является соседом\",\n        land: \"Земельные участки\",\n        transportType: \"Тип транспорта\",\n        sea: \"морской\",\n        maritimeRouteOverSize: \"Морской путь не может состоять более чем из 2 стран\",\n        doNotHaveAccessToSea: \"не имеют выхода к морю\",\n        routeDistance: \"Расстояние маршрута\",\n        distanceUnitValue: \"км\",\n        alreadyAllCountriesDeletedFromRoute: \"Уже все страны удалены из маршрута\",\n        capacity: \"Вместимость\",\n        quantityNeeded : \"Необходимое количество\",\n        speedUnitKmH : \"км/ч\",\n        speed : \"Скорость\",\n        estimatedArrival: \"Ожидаемое время прибытия\",\n        costFor: \"Стоимость для\",\n        calculatedCost : \"Расчетная стоимость\",\n        income : \"Доход\",\n        profit : \"Прибыль\"\n    }\n\nexport let selectedLanguage = polish;\n\n  function toggleLanguage(){\n      //////catch all ids on site\n   const chosenLanguage = document.getElementById(\"chosenLanguage\");\n   const tranlationPlayerPanel = document.getElementById(\"link0\");\n   const tranlationStockMarket = document.getElementById(\"link1\");\n   const tranlationStock = document.getElementById(\"link2\");\n   const translationCountries = document.getElementById(\"link3\");\n   const translationPolish = document.getElementById(\"polish\");\n   const translationEnglish = document.getElementById(\"english\");\n   const translationRussian = document.getElementById(\"russian\");\n   const translationSelectLanguage = document.getElementById(\"languages\");\n   const translationManual = document.getElementById(\"manual\");\n   const translationMyAchievements = document.getElementById(\"myAchievements\");\n   const pauseLaunched = document.getElementById(\"pauseLaunched\");\n   const createTransport = document.getElementById(\"createTransport\");\n   const countryMarket = document.getElementById(\"countryMarket\");\n   const checkCountryDetails = document.getElementById(\"checkCountryDetails\");\n\n   const truck = document.getElementById(\"truck\");\n   const bus = document.getElementById(\"bus\");\n   const railway = document.getElementById(\"railway\");\n   const maritime = document.getElementById(\"maritime\");\n   const air = document.getElementById(\"air\");\n   const countryStartName = $(\".countryStartName\")[0];\n   const typeOfTransport =  document.getElementById(\"typeOfTransport\")\n   const selectWare =  $(\".selectWare\")[1];  \n   const countryStartNameValue = $(\".countryStartNameValue\")[0];\n   const routeBy = $(\".routeBy\")[1];\n   const endCountryOfTheRoute = $(\".endCountryOfTheRoute\")[0];\n   const availableQty = $(\".availableQty\")[1];\n\n   const goodCostInEndCountry = $(\".goodCostInEndCountry\")[1];\n   const goodCostInStartedCountry = $(\".goodCostInStartedCountry\")[1];\n   const howManyToTransport = $(\".howManyToTransport\")[1];\n   const transportType = document.getElementById(\"transportType\");\n\n   const routeDistance = $(\".routeDistance\")[1];\n   const distanceUnit = $(\".distanceUnit\")[1];\n   const capacity = $(\".capacity\")[0];\n   const quantityNeeded =  $(\".neccesseryQty\")[0];\n   const speed =  $(\".speed\")[0];\n   const speedUnitKmH = $(\".speedUnitKmH\")[0];\n   const estimatedArrival = $(\".estimatedArrival\")[0];\n\n   const costFor = $(\".singularCost\")[0];\n   const calculatedCost = $(\".calculatedCost\")[0];\n   const income = $(\".income\")[0];\n   const profit = $(\".profit\")[0];\n\n    chosenLanguage.src = selectedLanguage.srcFlagTranslation;\n    chosenLanguage.title = selectedLanguage.chosenLanguageTranslation;\n    tranlationPlayerPanel.innerHTML = selectedLanguage.link0;\n    tranlationStockMarket.innerHTML = selectedLanguage.link1;\n    tranlationStock.innerHTML = selectedLanguage.link2;\n    translationCountries.innerHTML = selectedLanguage.link3;\n    translationPolish.innerHTML = selectedLanguage.polish;\n    translationEnglish.innerHTML = selectedLanguage.english;\n    translationRussian.innerHTML = selectedLanguage.russian;\n    translationSelectLanguage.innerHTML = selectedLanguage.selectLanguage;\n    translationManual.innerHTML = selectedLanguage.instruction;\n    translationMyAchievements.innerHTML = selectedLanguage.myAchievements;\n    pauseLaunched.innerHTML = selectedLanguage.pauseLaunched;\n    createTransport.innerHTML = selectedLanguage.createTransport;\n    countryMarket.innerHTML = selectedLanguage.countryMarket;\n    checkCountryDetails.innerHTML = selectedLanguage.checkCountryDetails;\n    countryStartNameValue.innerHTML = selectedLanguage[clickedCountryName];\n    \n    truck.innerHTML = selectedLanguage.truck;\n    bus.innerHTML = selectedLanguage.bus;\n    railway.innerHTML = selectedLanguage.railway;\n    maritime.innerHTML = selectedLanguage.maritime;\n    air.innerHTML = selectedLanguage.air;\n    countryStartName.innerHTML = selectedLanguage.countryStartName;\n    typeOfTransport.innerHTML = selectedLanguage.typeOfTransport;\n    selectWare.innerHTML = selectedLanguage.selectWare;\n    routeBy.innerHTML = selectedLanguage.routeBy;\n    endCountryOfTheRoute.innerHTML = selectedLanguage.endCountryOfTheRoute;\n    availableQty.innerHTML = selectedLanguage.availableQty;\n    goodCostInStartedCountry.innerHTML = selectedLanguage.goodCostInStartedCountry;\n    goodCostInEndCountry.innerHTML = selectedLanguage.goodCostInEndCountry;\n    howManyToTransport.innerHTML = selectedLanguage.howManyToTransport;\n    transportType.innerHTML = selectedLanguage.transportType;\n\n    routeDistance.innerHTML = selectedLanguage.routeDistance;\n    distanceUnit.innerHTML = selectedLanguage.distanceUnitValue;\n    capacity.innerHTML = selectedLanguage.capacity;\n    quantityNeeded.innerHTML = selectedLanguage.quantityNeeded;\n    speed.innerHTML = selectedLanguage.speed;\n    speedUnitKmH.innerHTML = selectedLanguage.speedUnitKmH;\n\n    estimatedArrival.innerHTML = selectedLanguage.estimatedArrival;\n    profit.innerHTML = selectedLanguage.profit;\n    costFor.innerHTML = selectedLanguage.costFor ;\n    calculatedCost.innerHTML = selectedLanguage.calculatedCost ;\n    income.innerHTML = selectedLanguage.income ;\n\n    \n    addAvaiableGoodOptions();\n    translateCurrentRoute(currentRoute);\n  }\n\n  export function refreshObjectsTranslation(searchedObject){\n   \n     goods ={\n        main: {\n              1: selectedLanguage.coal,\n              2: selectedLanguage.steel,\n              3: selectedLanguage.aluminium,\n              4: selectedLanguage.copper,\n              5: selectedLanguage.lead,\n              6: selectedLanguage.grain,\n              7: selectedLanguage.oil\n        },\n        additional: {\n          1: selectedLanguage.wine,\n          2: selectedLanguage.fish,\n          3: selectedLanguage.flour,\n          4: selectedLanguage.clothes\n        },\n        specific: {\n          1: selectedLanguage.zinc,\n          2: selectedLanguage.wolfram,\n          3: selectedLanguage.ideas,\n          4: selectedLanguage.mechanicalParts,\n          5: selectedLanguage.chrome,\n          6: selectedLanguage.nickel,\n          7: selectedLanguage.forestGoods\n        }\n      }\n  \n  \n      ussr = {\n      height: 400,\n      width: 310,\n      specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.specific[3],\n          4: goods.main[7]\n        }, \n        population: 159\n      }\n  \n    germany = {\n        height: 188,\n        width: 97,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.specific[3]\n        },\n        goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 74\n      }\n  \n      lithuania = {\n      height: 101, \n      width: 134, \n      specialities: {\n        1: goods.additional[2],\n        2: goods.additional[3]\n        },\n        goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 2\n      }\n  \n       poland = {\n        height: 298,\n        width: 286,\n        specialities: {\n          1: goods.main[6],\n          2: goods.main[7],\n          3: goods.additional[3]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 30\n        }\n  \n       czechoslovakia = {\n        height: 30,\n        width: 120,\n        specialities: {\n          1: goods.main[2],\n          2: goods.main[4],\n          3: goods.specific[4]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 13\n      }\n  \n       greatBritain = {\n        height: 150,\n        width: 120,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.additional[2],\n          4: goods.specific[1]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 47\n      }\n  \n       austria = {\n        height: 55,\n        width: 58,\n        specialities: {\n          1: goods.additional[3]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 6.8\n      }\n  \n       france = {\n        height: 180,\n        width: 180,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.main[5],\n          4: goods.additional[1]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 42\n      }\n\n      let norway = {\n        height: 200,\n        width: 68,\n        specialities: {\n            1: goods.additional[2]\n          },  \n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5,\n            chrome : 5,\n            nickel: 3,\n            forestGoods: 20\n          },\n          population: 2.9\n        }\n\n        let sweden = {\n          height: 427.45,\n          width: 354.8,\n          specialities: {\n              1: goods.specific[2],\n              2: goods.main[4],\n              3: goods.main[2]\n            },  \n            goodCosts: {\n              coal: 30,\n              steel: 70,\n              aluminium: 80,\n              copper: 60,\n              lead: 50,\n              grain: 5,\n              oil: 100,\n              wine: 35,\n              fish: 5,\n              flour: 10,\n              clothes: 20,\n              zinc: 75,\n              wolfram: 100,\n              mechanicalParts: 150,\n              chrome : 5,\n              nickel: 3,\n              forestGoods: 20\n            },\n            goodsAvailability: {\n              coal: 100,\n              steel: 80,\n              aluminium: 50,\n              copper: 120,\n              lead: 80,\n              grain: 1000,\n              oil: 300,\n              wine: 50,\n              fish: 70,\n              flour: 80,\n              clothes: 90,\n              zinc: 15,\n              wolfram: 40,\n              mechanicalParts: 5,\n              chrome : 1,\n              nickel: 2,\n              forestGoods: 50\n            },\n            population: 6.2\n          }\n\n          let finland = {\n            height: 257.1,\n            width: 275,\n            specialities: {\n                1: goods.specific[6],\n                2: goods.additional[2]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150,\n                chrome : 5,\n                nickel: 3,\n                forestGoods: 20\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5\n              },\n              population: 3.5\n            }\n\n            let latvia = {\n              height: 86.1,\n              width: 170,\n              specialities: {\n                  1: goods.specific[7]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5,\n                  chrome : 1,\n                  nickel: 2,\n                  forestGoods: 50\n                },\n                population: 1.9\n              }\n    \n              let estonia = {\n                height: 82.5,\n                width: 150,\n                specialities: {\n                  1: goods.additional[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 1.1\n                }\n\n                let romania = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150,\n                      chrome : 5,\n                      nickel: 3,\n                      forestGoods: 20\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 15\n                  }\n                  let hungary = {\n                    height: 330,\n                    width: 290.4,\n                    specialities: {\n                        1: goods.specific[2],\n                        2: goods.specific[3],\n                        3: goods.main[2]\n                      },  \n                      goodCosts: {\n                        coal: 30,\n                        steel: 70,\n                        aluminium: 80,\n                        copper: 60,\n                        lead: 50,\n                        grain: 5,\n                        oil: 100,\n                        wine: 35,\n                        fish: 5,\n                        flour: 10,\n                        clothes: 20,\n                        zinc: 75,\n                        wolfram: 100,\n                        mechanicalParts: 150,\n                        chrome : 5,\n                        nickel: 3,\n                        forestGoods: 20\n                      },\n                      goodsAvailability: {\n                        coal: 100,\n                        steel: 80,\n                        aluminium: 50,\n                        copper: 120,\n                        lead: 80,\n                        grain: 1000,\n                        oil: 300,\n                        wine: 50,\n                        fish: 70,\n                        flour: 80,\n                        clothes: 90,\n                        zinc: 15,\n                        wolfram: 40,\n                        mechanicalParts: 5\n                      },\n                      population: 8.9\n                    }\n\n            let turkey = {\n            height: 330,\n            width: 290.4,\n            specialities: {\n                1: goods.specific[2],\n                2: goods.specific[3],\n                3: goods.main[2]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150,\n                chrome : 5,\n                nickel: 3,\n                forestGoods: 20\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5\n              },\n              population: 16.2\n            }\n\n\n            let yugoslavia = {\n              height: 330,\n              width: 290.4,\n              specialities: {\n                  1: goods.specific[2],\n                  2: goods.specific[3],\n                  3: goods.main[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150,\n                  chrome : 5,\n                  nickel: 3,\n                  forestGoods: 20\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5\n                },\n                population: 14\n              }\n\n              let greece = {\n                height: 330,\n                width: 290.4,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150,\n                    chrome : 5,\n                    nickel: 3,\n                    forestGoods: 20\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 6.8\n                }\n\n\n                let italy = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150,\n                      chrome : 5,\n                      nickel: 3,\n                      forestGoods: 20\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 42\n                  }\n\n            let spain = {\n                height: 330,\n                width: 290.4,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 24\n                }\n\n\n                let portugal = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 7.1\n                  }\n  \n                  let bulgaria = {\n                    height: 330,\n                    width: 290.4,\n                    specialities: {\n                        1: goods.specific[2],\n                        2: goods.specific[3],\n                        3: goods.main[2]\n                      },  \n                      goodCosts: {\n                        coal: 30,\n                        steel: 70,\n                        aluminium: 80,\n                        copper: 60,\n                        lead: 50,\n                        grain: 5,\n                        oil: 100,\n                        wine: 35,\n                        fish: 5,\n                        flour: 10,\n                        clothes: 20,\n                        zinc: 75,\n                        wolfram: 100,\n                        mechanicalParts: 150\n                      },\n                      goodsAvailability: {\n                        coal: 100,\n                        steel: 80,\n                        aluminium: 50,\n                        copper: 120,\n                        lead: 80,\n                        grain: 1000,\n                        oil: 300,\n                        wine: 50,\n                        fish: 70,\n                        flour: 80,\n                        clothes: 90,\n                        zinc: 15,\n                        wolfram: 40,\n                        mechanicalParts: 5\n                      },\n                      population: 6.3\n                    }\n                    \n                    let denmark = {\n                      height: 110,\n                      width: 105.6,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 3.7\n                    }\n              \n                    let belgium = {\n                      height: 110,\n                      width: 105.6,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 8.3\n                    }\n\n                    let netherland = {\n                      height: 110,\n                      width: 105.6,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 8.3\n                    }\n\n                    let albania = {\n                      height: 78.7,\n                      width: 100,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 1\n                    }\n\n                    iceland = {\n                      height: 123.5,\n                      width: 260,\n                      specialities: {\n                        1: goods.additional[2]\n                        },\n                        goodCosts: {\n                          coal: 30,\n                          steel: 70,\n                          aluminium: 80,\n                          copper: 60,\n                          lead: 50,\n                          grain: 5,\n                          oil: 100,\n                          wine: 35,\n                          fish: 5,\n                          flour: 10,\n                          clothes: 20,\n                          zinc: 75,\n                          wolfram: 100,\n                          mechanicalParts: 150,\n                          chrome : 5,\n                          nickel: 3,\n                          forestGoods: 20\n                        },\n                        goodsAvailability: {\n                          coal: 100,\n                          steel: 80,\n                          aluminium: 50,\n                          copper: 120,\n                          lead: 80,\n                          grain: 1000,\n                          oil: 300,\n                          wine: 50,\n                          fish: 70,\n                          flour: 80,\n                          clothes: 90,\n                          zinc: 15,\n                          wolfram: 40,\n                          mechanicalParts: 5,\n                          chrome : 1,\n                          nickel: 2,\n                          forestGoods: 50\n                        },\n                        population: 0.5\n                    }\n\n  \n\n    let switzerland = {\n      height: 80,\n      width: 45.6,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 4.1\n    }\n\n    sicily = {\n      height: 54.2,\n      width: 80,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 4\n    }\n\n    sardynia = {\n      height: 80,\n      width: 53.6,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1\n    }\n\n       sardynia = {\n      height: 80,\n      width: 53.6,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1\n    }\n\n    corsica = {\n      height: 55,\n      width: 34.65,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 0.2\n    }\n\n    algieria = {\n      height: 95.2,\n      width: 280,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 7\n    }\n\n    irelandNorth = {\n      height: 95.2,\n      width: 280,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 1.3\n    }\n\n    ireland = {\n      height: 95.2,\n      width: 280,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 3\n    }\n\n    easternPrussia = {\n      height: 155,\n      width: 139.5,\n      specialities: {\n        1: goods.additional[2]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150,\n          chrome : 5,\n          nickel: 3,\n          forestGoods: 20\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5,\n          chrome : 1,\n          nickel: 2,\n          forestGoods: 50\n        },\n        population: 2.5\n    }\n    \n      listObjects = {\n        \"goods\" : goods,\n        \"ussr\" : ussr,\n        \"germany\" : germany,\n        \"lithuania\" : lithuania,\n        \"poland\" : poland,\n        \"czechoslovakia\" : czechoslovakia,\n        \"greatBritain\" : greatBritain,\n        \"austria\" : austria,\n        \"france\" : france,\n        \"norway\" : norway,\n        \"finland\" : finland,\n        \"sweden\" : sweden,\n        \"latvia\" : latvia,\n        \"estonia\" : estonia,\n        \"romania\" : romania,\n        \"hungary\" : hungary,\n        \"yugoslavia\" : yugoslavia,\n        \"bulgaria\" : bulgaria,\n        \"turkey\" : turkey,\n        \"greece\" : greece,\n        \"italy\" : italy,\n        \"spain\" : spain,\n        \"portugal\" : portugal,\n        \"denmark\" : denmark,\n        \"belgium\" : belgium,\n        \"netherland\" : netherland,\n        \"albania\" : albania,\n        \"iceland\" : iceland,\n        \"switzerland\" : switzerland,\n        \"sicily\" : sicily,\n        \"sardynia\" : sardynia,\n        \"corsica\" : corsica,\n        \"algieria\" : algieria,\n        \"irelandNorth\" : irelandNorth,\n        \"ireland\" : ireland,\n        \"easternPrussia\" : easternPrussia\n    }\n    \n    let myObject = listObjects[searchedObject];\n    return myObject\n  }\n\n"],"names":["root","factory","$parcel$global","window","$db8fed00f4c020c9$exports","document","newNotifySettings","typesNotify","notifySettings","wrapID","overlayID","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","warning","info","commonConsoleError","message","console","error","commonCheckHeadOrBody","element","commonExtendOptions","extended","deep","i","Object","prototype","toString","call","arguments","merge","obj","prop","hasOwnProperty","length","notifyGetInternalCSSCodes","notifyCreateCounter","notifyCreate","notifyType","callbackOrOptions","options","Notiflix","Notify","init","newNotifySettingsBackup","Array","isArray","newOptions","html","htmlPool","theType","toLocaleLowerCase","createElement","innerHTML","textContent","innerText","substring","ntflxNotifyWrap","getElementById","id","style","zIndex","left","top","right","bottom","margin","classList","add","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","ntflxNotifyOverlay","height","animationDuration","body","appendChild","ntflxNotify","color","setAttribute","closeButtonHTML","svgIcon","notifyWrap","insertBefore","firstChild","eachNotifyElement","timeoutHide","timeoutRemove","hideNotifyElementsAndOverlay","removeOverlay","childElementCount","clearTimeout","removeNotifyElmentsAndWrapper","parentNode","removeChild","querySelector","addEventListener","clickToCloseTimeout","setTimeout","callbackTimeout","autoRemove","remove","allNotifyElmNotTheLastOne","querySelectorAll","eachNotifyElmNotLastOne","userNotifyOptions","getInternalCSSCodes","styleElementId","internalCSS","head","commonSetInternalCSSCodes","userNotifyExtendOptions","define","amd","$266802186722de8f$export$b0e5ad1dc5b27ce1","land","poland","direct","germany","eastPrussia","czechoslovakia","latvia","lithuania","romania","ussr","transit","france","route","spain","portugal","belgium","netherland","denmark","switzerland","distnace","austria","hungary","yugoslavia","albania","greece","distance1","alternativeRoute1","turkey","bulgaria","italy","estonia","finland","sweden","norway","ireland","greatBritain","sea","iceland","$45d704070f29c033$export$498c0b85ef3043bd","vechicles","truck","renaultTTD6","payLoad","cost","speed","renaultABG","renaultYGDD","VolvoLV80","bus","AECtypeQ","passengers","AMO4","LeylandTitan","maritime","passangerShips","steamer","internalCombustion","loadShips","trains","passengerTrains","Mat34","LNERClassA4","DRGClassSVT137","loadTrains","DRGClassSVT877","DRGClass05","Pm2","$ddcbf20a9ad520fa$var$createTransport","$ddcbf20a9ad520fa$var$createTransportPanel","$","$ddcbf20a9ad520fa$var$countryStartNameValue","$ddcbf20a9ad520fa$var$createTransportPanelSwitchOff","$ddcbf20a9ad520fa$var$wares","$ddcbf20a9ad520fa$var$truckOption","$ddcbf20a9ad520fa$var$busOption","$ddcbf20a9ad520fa$var$transportTypeList","$ddcbf20a9ad520fa$export$f87b2b60c133b18c","$ddcbf20a9ad520fa$var$endCountryOfTheRoute","$ddcbf20a9ad520fa$var$currentEndCountryOfTheRoute","$ddcbf20a9ad520fa$var$route","$ddcbf20a9ad520fa$var$startedCountry","$ddcbf20a9ad520fa$var$temporaryRouteValues","$ddcbf20a9ad520fa$var$originNameOfWares","Map","$ddcbf20a9ad520fa$var$goodCostInStartedCountryValue","$ddcbf20a9ad520fa$var$goodCostInEndCountryValue","$ddcbf20a9ad520fa$var$availableQtyValue","$ddcbf20a9ad520fa$var$selectedWare","$ddcbf20a9ad520fa$var$endCountryObject","$ddcbf20a9ad520fa$var$goodPriceInEndCountry","$ddcbf20a9ad520fa$var$howManyToTransportValue","$ddcbf20a9ad520fa$var$transportTypeValue","$ddcbf20a9ad520fa$var$type","$ddcbf20a9ad520fa$var$lastTransportType","$ddcbf20a9ad520fa$var$typeDetail","$ddcbf20a9ad520fa$var$calculetedRouteDistance","$ddcbf20a9ad520fa$var$distanceRoute","$ddcbf20a9ad520fa$var$routeDistanceValue","$ddcbf20a9ad520fa$var$bigCountry","$ddcbf20a9ad520fa$var$clickedCountryTags","$ddcbf20a9ad520fa$var$meanOfTransport","$ddcbf20a9ad520fa$var$singularCostValue","$ddcbf20a9ad520fa$var$calculatedCostValueTag","$ddcbf20a9ad520fa$var$availableGoodQuantity","$ddcbf20a9ad520fa$var$capacityValue","$ddcbf20a9ad520fa$var$neccesseryQtyValue","$ddcbf20a9ad520fa$var$speedValue","$ddcbf20a9ad520fa$var$speedValueOfSelectedTransport","$ddcbf20a9ad520fa$var$capacityOfSelectedTransport","$ddcbf20a9ad520fa$var$neededTransportUnits","$ddcbf20a9ad520fa$var$earnings","$ddcbf20a9ad520fa$var$incomeValue","$ddcbf20a9ad520fa$var$profitValue","$ddcbf20a9ad520fa$var$calculatedIncomeValue","$ddcbf20a9ad520fa$var$calculatedProfitValue","$ddcbf20a9ad520fa$var$calculatedCostValue","$ddcbf20a9ad520fa$var$goodPriceInStartedCountry","$ddcbf20a9ad520fa$var$transportTypeImg","$ddcbf20a9ad520fa$var$transportTypeData","$d4627f745d545ed8$var$selectedCountryName","$d4627f745d545ed8$var$selectedCountry","$ddcbf20a9ad520fa$var$transportType","railway","air","plane","airship","$ddcbf20a9ad520fa$var$lastActiveTransportType","$ddcbf20a9ad520fa$export$ee673f0af857f314","myObject","$d4627f745d545ed8$export$5c77d18a3f2ab4f8","$d4627f745d545ed8$export$cbd655e91ff55665","value","$7c214f316370eb1f$export$8d5a188d4295ebbb","availableGoods","goodsAvailability","availableGood","set","availableGoodName","selectedGoodOption","$ddcbf20a9ad520fa$export$cca2519918414f75","firstClickedCountryName","event","notifyFailureValue","startedCountry1","$ddcbf20a9ad520fa$var$blockInfoNotify","cannotAddCountry","toRouteBecauseItIsTheStartingCountry","$d4627f745d545ed8$export$7ab18902d6f78b3d","includes","distanceForLastCountryInRoute","pop","$d4627f745d545ed8$export$77947344de1fdbd9","tagToHighlightOff","parentElement","$ddcbf20a9ad520fa$var$highlightCountryOff","target","$ddcbf20a9ad520fa$var$calculateCostValue","alreadyAllCountriesDeletedFromRoute","$ddcbf20a9ad520fa$var$removeLastElementFromRoute","country","alreadyAddedToRoute","$ddcbf20a9ad520fa$var$countryAlreadyInRoute","selectedTransportTypeToTransfer","$ddcbf20a9ad520fa$var$addToRoute","notANeighbors","$ddcbf20a9ad520fa$var$notANeighborsMessage","lastCountryInRoute","startSeaRouteCountry","maritimeRouteFailure","maritimeRouteOverSize","accessToWaterReservoirs","withoutAccessToSeaMessage","doNotHaveAccessToSea","$ddcbf20a9ad520fa$var$withoutAccessToSea","startedCountry2","isNotANeighborOf","$ddcbf20a9ad520fa$export$2c5cc0bcea0e0314","currentRoute1","$d4627f745d545ed8$export$6b159678945a080","nbrInArray","countryName","push","$ddcbf20a9ad520fa$var$allowToDisplayInfoNotify","$ddcbf20a9ad520fa$var$setProperMeansOfTransport","transportTypeName","passengersTranslation","truckTranslation","busTranslation","maritimeTranslation","railwayTranslation","$d4627f745d545ed8$export$63afb81dba78b33e","year","vehicle","$ddcbf20a9ad520fa$var$addOptionsToMeanOfTransport","buses","passengerShips","passengerShip","loadShip","passengerRailways","passengerRailway","loadRailways","loadRailway","$ddcbf20a9ad520fa$var$setProperTransportBasedOnGoods","startedCountry3","goodCosts","$ddcbf20a9ad520fa$var$highlightCountry","tagToHighlight","optionValue","mainTransportTypeName","middleTransportTypeName","$ddcbf20a9ad520fa$var$displayTransportTypeCapacity","$ddcbf20a9ad520fa$var$displayTransportTypeSpeed","Math","ceil","$ddcbf20a9ad520fa$var$calculateNeededTransportUnits","selectedTransportTypeCost","isNaN","$ddcbf20a9ad520fa$var$calculateEarnings","$ddcbf20a9ad520fa$var$displayEarningPanel","transportTypeValue1","log","src","backgroundColor","$ddcbf20a9ad520fa$var$setPoperTransportTypeImage","visibility","$d4627f745d545ed8$export$868558ff7add1989","$d4627f745d545ed8$export$2ba9baf0d8cdee4c","$d4627f745d545ed8$export$90bd2b5263e6d4bf","$d4627f745d545ed8$export$2dd5afd9ae75e48b","$ddcbf20a9ad520fa$var$cleanRouteDistance","get","startCountryObject","max","originNameOfSelectedTransport","keys","filter","key","lastActiveTransportBeforeChange","selectedTransportType","$d4627f745d545ed8$var$pulsingInterval","$d4627f745d545ed8$var$firstClickedCountryName","$d4627f745d545ed8$var$smallFlagSrc","$d4627f745d545ed8$var$clickedPositionY","$d4627f745d545ed8$var$clickedPositionX","$d4627f745d545ed8$var$controlPanelWidth","$d4627f745d545ed8$var$controlPanelHeight","$d4627f745d545ed8$var$specialitiesList","$d4627f745d545ed8$var$pauseClicked","$d4627f745d545ed8$export$1ae1184e010e3f7d","$d4627f745d545ed8$var$route","$d4627f745d545ed8$var$pulsingIntervalCounter","$d4627f745d545ed8$var$timeWatch","day","month","$d4627f745d545ed8$var$time","hour","$d4627f745d545ed8$var$goods","main","coal","steel","aluminium","copper","lead","grain","oil","additional","wine","fish","flour","clothes","specific","zinc","wolfram","ideas","mechanicalParts","chrome","nickel","forestGoods","$d4627f745d545ed8$var$date","$d4627f745d545ed8$export$e5ad74579c86b003","neighbors","balticSea","blackSea","specialities","population","otherSea","sicily","sardynia","corsica","algieria","irelandNorth","easternPrussia","$d4627f745d545ed8$var$polishMapLocation","$d4627f745d545ed8$var$polishMap","$d4627f745d545ed8$var$lithuanianMapLocation","$d4627f745d545ed8$var$lithuaniaMap","$d4627f745d545ed8$var$ussrMapLocation","$d4627f745d545ed8$var$ussrMap","$d4627f745d545ed8$var$czechoslovakiaMapLocation","$d4627f745d545ed8$var$czechoslovakiaMap","$d4627f745d545ed8$var$austriaMapLocation","$d4627f745d545ed8$var$austriaMap","$d4627f745d545ed8$var$germanyMapLocation","$d4627f745d545ed8$var$germanyMap","$d4627f745d545ed8$var$easternPrussiaMapLocation","$d4627f745d545ed8$var$easternPrussiaMap","$d4627f745d545ed8$var$franceMapLocation","$d4627f745d545ed8$var$franceMap","$d4627f745d545ed8$var$greatBritainMapLocation","$d4627f745d545ed8$var$greatBritainMap","$d4627f745d545ed8$var$norwayMapLocation","$d4627f745d545ed8$var$norwayMap","$d4627f745d545ed8$var$swedenMapLocation","$d4627f745d545ed8$var$swedenMap","$d4627f745d545ed8$var$finlandMapLocation","$d4627f745d545ed8$var$finlandMap","$d4627f745d545ed8$var$estoniaMapLocation","$d4627f745d545ed8$var$estoniaMap","$d4627f745d545ed8$var$latviaMapLocation","$d4627f745d545ed8$var$latviaMap","$d4627f745d545ed8$var$denmarkMapLocation","$d4627f745d545ed8$var$denmarkMap","$d4627f745d545ed8$var$icelandMapLocation","$d4627f745d545ed8$var$icelandMap","$d4627f745d545ed8$var$belgiumMapLocation","$d4627f745d545ed8$var$belgiumMap","$d4627f745d545ed8$var$netherlandMapLocation","$d4627f745d545ed8$var$netherlandMap","$d4627f745d545ed8$var$hungaryMapLocation","$d4627f745d545ed8$var$hungaryMap","$d4627f745d545ed8$var$romaniaMapLocation","$d4627f745d545ed8$var$romaniaMap","$d4627f745d545ed8$var$bulgariaMapLocation","$d4627f745d545ed8$var$bulgariaMap","$d4627f745d545ed8$var$yugoslaviaMapLocation","$d4627f745d545ed8$var$yugoslaviaMap","$d4627f745d545ed8$var$albaniaMapLocation","$d4627f745d545ed8$var$albaniaMap","$d4627f745d545ed8$var$greeceMapLocation","$d4627f745d545ed8$var$greeceMap","$d4627f745d545ed8$var$turkeyMapLocation","$d4627f745d545ed8$var$turkeyMap","$d4627f745d545ed8$var$italyMapLocation","$d4627f745d545ed8$var$italyMap","$d4627f745d545ed8$var$sicilyMapLocation","$d4627f745d545ed8$var$sicilyMap","$d4627f745d545ed8$var$sardyniaMapLocation","$d4627f745d545ed8$var$sardyniaMap","$d4627f745d545ed8$var$corsicaMapLocation","$d4627f745d545ed8$var$corsicaMap","$d4627f745d545ed8$var$algieriaMapLocation","$d4627f745d545ed8$var$algieriaMap","$d4627f745d545ed8$var$switzerlandMapLocation","$d4627f745d545ed8$var$switzerlandMap","$d4627f745d545ed8$var$spainMapLocation","$d4627f745d545ed8$var$spainMap","$d4627f745d545ed8$var$portugalMapLocation","$d4627f745d545ed8$var$portugalMap","$d4627f745d545ed8$var$irelandNorthMapLocation","$d4627f745d545ed8$var$irelandNorthMap","$d4627f745d545ed8$var$irelandMapLocation","$d4627f745d545ed8$var$irelandMap","$d4627f745d545ed8$var$dateValueOnMap","$d4627f745d545ed8$var$dateOnMap","screen","$d4627f745d545ed8$var$factor","$d4627f745d545ed8$var$resolutionBodyY","$d4627f745d545ed8$var$resolution","$d4627f745d545ed8$var$italyTerritories","$d4627f745d545ed8$var$franceTerritories","$d4627f745d545ed8$var$denmarkTerritories","$d4627f745d545ed8$var$greatBritainTerritories","$d4627f745d545ed8$var$irishTerritories","$d4627f745d545ed8$var$germanyTerritories","$d4627f745d545ed8$var$recalculateCountriesPositionsBasedOnResolution","$d4627f745d545ed8$var$calculateResoluctionFactor","$d4627f745d545ed8$var$countrySpecialities","selectedCountryName1","$7c214f316370eb1f$export$3a3382f266766b5c","specNbr","notifyInfoValue","selectedCountry1","milionShortcut","specialization","$d4627f745d545ed8$var$checkItalianTerritoriesMouseover","addClass","$d4627f745d545ed8$var$checkItalianTerritoriesMouseout","removeClass","$d4627f745d545ed8$var$checkFrenchTerritoriesMouseover","$d4627f745d545ed8$var$checkFrenchTerritoriesMouseout","$d4627f745d545ed8$var$checkDannishTerritoriesMouseover","$d4627f745d545ed8$var$checkDannishTerritoriesMouseout","$d4627f745d545ed8$var$checkBritishTerritoriesMouseover","$d4627f745d545ed8$var$checkBritishTerritoriesMouseout","$d4627f745d545ed8$var$checkGermanTerritoriesMouseover","$d4627f745d545ed8$var$checkGermanTerritoriesMouseout","$d4627f745d545ed8$var$showList","$d4627f745d545ed8$var$start","$d4627f745d545ed8$var$startContainer","$d4627f745d545ed8$var$pause","$d4627f745d545ed8$var$pauseContainer","$d4627f745d545ed8$var$clockWheel","$d4627f745d545ed8$var$pauseLaunched","$d4627f745d545ed8$var$pulsing","transform","$d4627f745d545ed8$var$calculateDateTime","hourWatch","$d4627f745d545ed8$var$changeDate","dateValue1","animationPlayState","clearInterval","calculateDateTimeInterval","setInterval","$d4627f745d545ed8$var$countryPanelList","$d4627f745d545ed8$var$placeForFlag","clientHeight","$d4627f745d545ed8$var$countryFlagActionCountry","$d4627f745d545ed8$export$5223fb3df9a2777b","clientY","scrollY","clientX","scrollX","transition","goods","languagesListTranslation","e","index","indexOf","children","$7c214f316370eb1f$var$polish","$7c214f316370eb1f$var$toggleLanguage","$7c214f316370eb1f$var$english","$7c214f316370eb1f$var$russian","link0","link1","link2","link3","polish","english","russian","selectLanguage","instruction","myAchievements","srcFlagTranslation","chosenLanguageTranslation","mostAvailable","theLeastAvailable","theMostExpensive","theCheapest","pauseLaunched","createTransport","countryMarket","checkCountryDetails","countryStartName","typeOfTransport","wares","selectWare","routeBy","endCountryOfTheRoute","availableQty","goodCostInStartedCountry","goodCostInEndCountry","howManyToTransport","transportType","routeDistance","distanceUnitValue","capacity","quantityNeeded","speedUnitKmH","estimatedArrival","costFor","calculatedCost","income","profit","chosenLanguage","tranlationPlayerPanel","tranlationStockMarket","tranlationStock","translationCountries","translationPolish","translationEnglish","translationRussian","translationSelectLanguage","translationManual","translationMyAchievements","countryStartNameValue","distanceUnit","title","searchedObject","listObjects"],"version":3,"file":"index.8d7ff9c2.js.map"}