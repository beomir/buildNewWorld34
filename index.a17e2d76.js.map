{"mappings":"IASWA,EAAMC,E,sJAAND,OAUU,IAAXE,EAAyBA,EAA2B,oBAAXC,OAAyBA,OAASC,EAVpEH,EAU0E,SAAUE,GAKnG,QAAsB,IAAXA,QAAqD,IAApBA,EAAOE,SACjD,OAAO,EAKT,IAYIC,EANAC,EACO,UADPA,EAEO,UAFPA,EAGO,UAHPA,EAII,OAGJC,EAAiB,CACnBC,OAAQ,qBACRC,UAAW,wBACXC,MAAO,QACPC,SAAU,YACVC,SAAU,OACVC,QAAS,EACTC,aAAc,MACdC,KAAK,EACLC,QAAS,IACTC,iBAAkB,IAClBC,aAAa,EACbC,iBAAkB,kBAClBC,WAAW,EACXC,oBAAoB,EACpBC,cAAc,EACdC,cAAc,EAEdC,GAAI,iBACJC,UAAW,kBACXC,OAAQ,KACRC,WAAY,YACZC,SAAU,OACVC,cAAc,EACdC,qBAAsB,IACtBC,kBAAmB,OACnBC,aAAa,EACbC,SAAS,EACTC,gBAAgB,EAChBC,qBAAsB,QACtBC,oBAAqB,OAErBC,QAAS,CACPC,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,sBACtBC,qBAAsB,kBACtBxB,iBAAkB,wBAGpByB,QAAS,CACPN,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,sBACtBC,qBAAsB,kBACtBxB,iBAAkB,uBAGpB0B,QAAS,CACPP,WAAY,UACZC,UAAW,OACXC,eAAgB,0BAChBC,kBAAmB,kBACnBC,qBAAsB,4BACtBC,qBAAsB,kBACtBxB,iBAAkB,wBAGpB2B,KAAM,CACJR,WAAY,UACZC,UAAW,OACXC,eAAgB,uBAChBC,kBAAmB,kBACnBC,qBAAsB,qBACtBC,qBAAsB,kBACtBxB,iBAAkB,yBAMlB4B,EAAqB,SAAUC,GACjC,OAAOC,QAAQC,MAAM,qBAAuC,+DAAgE,KAAOF,EAxF3G,yFA6FtBG,EAAwB,SAAUC,GAEpC,OADKA,IAAWA,EAAU,QACO,OAA7BlD,EAAOE,SAASgD,KAClBL,EAAmB,4CAA8CK,EAAU,8CAAgDA,EAAU,iCAC9H,IAsBPC,EAAsB,WAExB,IAAIC,EAAW,GACXC,GAAO,EACPC,EAAI,EAE6C,qBAAjDC,OAAOC,UAAUC,SAASC,KAAKC,UAAU,MAC3CN,EAAOM,UAAU,GACjBL,KAgBF,IAbA,IAAIM,EAAQ,SAAUC,GACpB,IAAK,IAAIC,KAAQD,EACXN,OAAOC,UAAUO,eAAeL,KAAKG,EAAKC,KAExCT,GAAsD,oBAA9CE,OAAOC,UAAUC,SAASC,KAAKG,EAAIC,IAC7CV,EAASU,GAAQX,EAAoBC,EAASU,GAAOD,EAAIC,IAEzDV,EAASU,GAAQD,EAAIC,KAMtBR,EAAIK,UAAUK,OAAQV,IAC3BM,EAAMD,UAAUL,IAElB,OAAOF,GAaLa,EAA4B,WAE9B,MADgB,wnSAMdC,EAAsB,EACtBC,EAAe,SAAUC,EAAYtB,EAASuB,EAAmBC,GAEnE,IAAKrB,EAAsB,QAAW,OAAO,EAGxC9C,GACHoE,EAASC,OAAOC,KAAK,IAIvB,IAAIC,EAA0BvB,GAAoB,EAAMhD,EAAmB,IAG3E,GAAkC,iBAAtBkE,IAAmCM,MAAMC,QAAQP,IAA2C,iBAAZC,IAAyBK,MAAMC,QAAQN,GAAW,CAE5I,IAAIO,EAAa,GACgB,iBAAtBR,EACTQ,EAAaR,EACe,iBAAZC,IAChBO,EAAaP,GAIfnE,EAAoBgD,GAAoB,EAAMhD,EAAmB0E,GAKnE,IA5CiCC,EAC7BC,EA2CAC,EAAU7E,EAAkBiE,EAAWa,kBAAkB,OAG7Df,IAGuB,iBAAZpB,IACTA,EAAU,YAAcsB,GAKtBjE,EAAkBe,YAxDW4D,EAyDFhC,GAxD3BiC,EAAW/E,EAAOE,SAASgF,cAAc,QACpCC,UAAYL,EAuDnBhC,EAtDKiC,EAASK,aAAeL,EAASM,WAAa,KA2DhDlF,EAAkBe,WAAa4B,EAAQkB,OAAS7D,EAAkBY,mBAErEZ,EAAoBgD,GAAoB,EAAMhD,EAAmB,CAAE2B,aAAa,EAAMf,iBAAkB,MAExG+B,EAAU,+IAKRA,EAAQkB,OAAS7D,EAAkBY,mBACrC+B,EAAUA,EAAQwC,UAAU,EAAGnF,EAAkBY,kBAAoB,OAKxB,WAA3CZ,EAAkB8B,uBACpB+C,EAAQvC,qBAAuBuC,EAAQ5C,YAKpCjC,EAAkBwB,eACrBxB,EAAkByB,qBAAuB,GAK3C,IAAI2D,EAAkBvF,EAAOE,SAASsF,eAAenF,EAAeC,SAAWN,EAAOE,SAASgF,cAAc,OAyD7G,GAxDAK,EAAgBE,GAAKpF,EAAeC,OACpCiF,EAAgBG,MAAMlF,MAAQL,EAAkBK,MAChD+E,EAAgBG,MAAMC,OAASxF,EAAkBqB,OACjD+D,EAAgBG,MAAM/E,QAAUR,EAAkBQ,QAGf,kBAA/BR,EAAkBM,UACpB8E,EAAgBG,MAAME,KAAOzF,EAAkBO,SAC/C6E,EAAgBG,MAAMG,IAAM1F,EAAkBO,SAC9C6E,EAAgBG,MAAMI,MAAQ3F,EAAkBO,SAChD6E,EAAgBG,MAAMK,OAAS5F,EAAkBO,SACjD6E,EAAgBG,MAAMM,OAAS,OAC/BT,EAAgBU,UAAUC,IAAI,yBAC9BX,EAAgBG,MAAMS,UAAY,iBAAmBhG,EAAkBO,SAAW,OAASP,EAAkBO,SAAW,IACxH6E,EAAgBG,MAAMU,QAAU,OAChCb,EAAgBG,MAAMW,SAAW,OACjCd,EAAgBG,MAAMY,cAAgB,SACtCf,EAAgBG,MAAMa,eAAiB,SACvChB,EAAgBG,MAAMc,WAAa,SACnCjB,EAAgBG,MAAMe,cAAgB,QACE,eAA/BtG,EAAkBM,UAC3B8E,EAAgBG,MAAME,KAAOzF,EAAkBO,SAC/C6E,EAAgBG,MAAMI,MAAQ3F,EAAkBO,SAChD6E,EAAgBG,MAAMG,IAAM1F,EAAkBO,SAC9C6E,EAAgBG,MAAMK,OAAS,OAC/BR,EAAgBG,MAAMM,OAAS,QACS,kBAA/B7F,EAAkBM,UAC3B8E,EAAgBG,MAAME,KAAOzF,EAAkBO,SAC/C6E,EAAgBG,MAAMI,MAAQ3F,EAAkBO,SAChD6E,EAAgBG,MAAMK,OAAS5F,EAAkBO,SACjD6E,EAAgBG,MAAMG,IAAM,OAC5BN,EAAgBG,MAAMM,OAAS,QACS,iBAA/B7F,EAAkBM,UAC3B8E,EAAgBG,MAAMI,MAAQ3F,EAAkBO,SAChD6E,EAAgBG,MAAMK,OAAS5F,EAAkBO,SACjD6E,EAAgBG,MAAMG,IAAM,OAC5BN,EAAgBG,MAAME,KAAO,QACW,aAA/BzF,EAAkBM,UAC3B8E,EAAgBG,MAAME,KAAOzF,EAAkBO,SAC/C6E,EAAgBG,MAAMG,IAAM1F,EAAkBO,SAC9C6E,EAAgBG,MAAMI,MAAQ,OAC9BP,EAAgBG,MAAMK,OAAS,QACS,gBAA/B5F,EAAkBM,UAC3B8E,EAAgBG,MAAME,KAAOzF,EAAkBO,SAC/C6E,EAAgBG,MAAMK,OAAS5F,EAAkBO,SACjD6E,EAAgBG,MAAMG,IAAM,OAC5BN,EAAgBG,MAAMI,MAAQ,SAE9BP,EAAgBG,MAAMI,MAAQ3F,EAAkBO,SAChD6E,EAAgBG,MAAMG,IAAM1F,EAAkBO,SAC9C6E,EAAgBG,MAAME,KAAO,OAC7BL,EAAgBG,MAAMK,OAAS,QAK7B5F,EAAkBa,YAAa,CACjC,IAAI0F,EAAqB1G,EAAOE,SAASsF,eAAenF,EAAeE,YAAcP,EAAOE,SAASgF,cAAc,OACnHwB,EAAmBjB,GAAKpF,EAAeE,UACvCmG,EAAmBhB,MAAMlF,MAAQ,OACjCkG,EAAmBhB,MAAMiB,OAAS,OAClCD,EAAmBhB,MAAMjF,SAAW,QACpCiG,EAAmBhB,MAAMC,OAASxF,EAAkBqB,OAAS,EAC7DkF,EAAmBhB,MAAME,KAAO,EAChCc,EAAmBhB,MAAMG,IAAM,EAC/Ba,EAAmBhB,MAAMI,MAAQ,EACjCY,EAAmBhB,MAAMK,OAAS,EAClCW,EAAmBhB,MAAMtD,WAAa4C,EAAQ/D,kBAAoBd,EAAkBc,iBACpFyF,EAAmBnF,UAAYpB,EAAkBwB,aAAe,oBAAsB,GACtF+E,EAAmBhB,MAAMkB,kBAAoBzG,EAAkBwB,aAAexB,EAAkByB,qBAAuB,KAAO,GAEzH5B,EAAOE,SAASsF,eAAenF,EAAeE,YACjDP,EAAOE,SAAS2G,KAAKC,YAAYJ,GAKhC1G,EAAOE,SAASsF,eAAenF,EAAeC,SACjDN,EAAOE,SAAS2G,KAAKC,YAAYvB,GAKnC,IAAIwB,EAAc/G,EAAOE,SAASgF,cAAc,OAChD6B,EAAYtB,GAAKtF,EAAkBmB,GAAK,IAAM4C,EAC9C6C,EAAYxF,UAAYpB,EAAkBoB,UAAY,IAAMyD,EAAQ1C,eAAiB,KAAOnC,EAAkBwB,aAAe,oBAAsB,IAAM,KAAOxB,EAAkB4B,QAAU,eAAiB,IAAM,OAAS5B,EAAkB0B,kBAAoB,KAAO1B,EAAkB2B,aAA4C,mBAAtBuC,EAAmC,uBAAyB,IAAM,KAAoC,mBAAtBA,EAAmC,mBAAqB,IAAM,KAAOlE,EAAkBiB,aAAe,2BAA6B,IACpgB2F,EAAYrB,MAAMhE,SAAWvB,EAAkBuB,SAC/CqF,EAAYrB,MAAMsB,MAAQhC,EAAQ3C,UAClC0E,EAAYrB,MAAMtD,WAAa4C,EAAQ5C,WACvC2E,EAAYrB,MAAM9E,aAAeT,EAAkBS,aACnDmG,EAAYrB,MAAMe,cAAgB,MAG9BtG,EAAkBU,MACpBkG,EAAYE,aAAa,MAAO,OAChCF,EAAYd,UAAUC,IAAI,cAK5Ba,EAAYrB,MAAMjE,WAAa,IAAMtB,EAAkBsB,WAAxB,6GAI3BtB,EAAkBwB,eACpBoF,EAAYrB,MAAMkB,kBAAoBzG,EAAkByB,qBAAuB,MAKjF,IAAIsF,EAAkB,GAOtB,GANI/G,EAAkB2B,aAA4C,mBAAtBuC,IAC1C6C,EAAkB,mIAAqIlC,EAAQzC,kBAAoB,oaAKjLpC,EAAkB4B,QAEpB,GAAI5B,EAAkB6B,eACpB+E,EAAY5B,UAAY,mBAAqBH,EAAQvC,qBAAuB,eAAiBtC,EAAkB+B,oBAAsB,gDAAkD8C,EAAQxC,qBAAuB,KAAkD,WAA3CrC,EAAkB8B,qBAAoC,4BAA8B,4BAA8B,+CAAiDa,EAAU,WAAa3C,EAAkB2B,YAAcoF,EAAkB,QAGtc,CACH,IAAIC,EAAU,GACV/C,IAAehE,EACjB+G,EAAU,6HAA+HnC,EAAQzC,kBAAoB,ogBAC5J6B,IAAehE,EACxB+G,EAAU,6HAA+HnC,EAAQzC,kBAAoB,2pBAC5J6B,IAAehE,EACxB+G,EAAU,6HAA+HnC,EAAQzC,kBAAoB,kkBAC5J6B,IAAehE,IACxB+G,EAAU,6HAA+HnC,EAAQzC,kBAAoB,2iBAEvKwE,EAAY5B,UAAYgC,EAAU,yCAA2CrE,EAAU,WAAa3C,EAAkB2B,YAAcoF,EAAkB,SAKxJH,EAAY5B,UAAY,4BAA8BrC,EAAU,WAAa3C,EAAkB2B,YAAcoF,EAAkB,IAMjI,GAAmC,gBAA/B/G,EAAkBM,UAA6D,iBAA/BN,EAAkBM,SAA6B,CACjG,IAAI2G,EAAapH,EAAOE,SAASsF,eAAenF,EAAeC,QAC/D8G,EAAWC,aAAaN,EAAaK,EAAWE,iBAEhDtH,EAAOE,SAASsF,eAAenF,EAAeC,QAAQwG,YAAYC,GAKpE,IAAIQ,EAAoBvH,EAAOE,SAASsF,eAAeuB,EAAYtB,IACnE,GAAI8B,EAAmB,CAErB,IAAIC,EACAC,EAGAC,EAA+B,WACjCH,EAAkBtB,UAAUC,IAAI,aAChC,IAAIyB,EAAgB3H,EAAOE,SAASsF,eAAenF,EAAeE,WAC9DoH,GAAiBpC,EAAgBqC,mBAAqB,GACxDD,EAAc1B,UAAUC,IAAI,aAE9B2B,aAAaL,IAKXM,EAAgC,WAIlC,GAHIP,GAAsD,OAAjCA,EAAkBQ,YACzCR,EAAkBQ,WAAWC,YAAYT,GAEvChC,EAAgBqC,mBAAqB,GAAoC,OAA/BrC,EAAgBwC,WAAqB,CACjFxC,EAAgBwC,WAAWC,YAAYzC,GACvC,IAAIoC,EAAgB3H,EAAOE,SAASsF,eAAenF,EAAeE,WAC9DoH,GAA8C,OAA7BA,EAAcI,YACjCJ,EAAcI,WAAWC,YAAYL,GAGzCE,aAAaJ,IAiCf,GA5BItH,EAAkB2B,aAA4C,mBAAtBuC,GACrBrE,EAAOE,SAASsF,eAAeuB,EAAYtB,IAAIwC,cAAc,wBACnEC,iBAAiB,SAAS,WACvCR,IACA,IAAIS,EAAsBC,YAAW,WACnCN,IACAD,aAAaM,KACZhI,EAAkByB,0BAMQ,mBAAtByC,GAAoClE,EAAkBiB,eAC/DmG,EAAkBW,iBAAiB,SAAS,WACT,mBAAtB7D,GACTA,IAEFqD,IACA,IAAIW,EAAkBD,YAAW,WAC/BN,IACAD,aAAaQ,KACZlI,EAAkByB,0BAMpBzB,EAAkB2B,aAA4C,mBAAtBuC,EAAkC,CAE7E,IAAIiE,EAAa,WACfd,EAAcY,YAAW,WACvBV,MACCvH,EAAkBW,SACrB2G,EAAgBW,YAAW,WACzBN,MACC3H,EAAkBW,QAAUX,EAAkByB,uBAEnD0G,IAIInI,EAAkBkB,eACpBkG,EAAkBW,iBAAiB,cAAc,WAC/CX,EAAkBtB,UAAUC,IAAI,aAChC2B,aAAaL,GACbK,aAAaJ,MAEfF,EAAkBW,iBAAiB,cAAc,WAC/CX,EAAkBtB,UAAUsC,OAAO,aACnCD,SAUR,GAAInI,EAAkBgB,oBAAsB+C,EAAsB,EAEhE,IADA,IAAIsE,EAA4BxI,EAAOE,SAASuI,iBAAiB,QAAUtI,EAAkBmB,GAAK,cAAgBnB,EAAkBmB,GAAK,IAAM4C,EAAsB,MAC5JZ,EAAI,EAAGA,EAAIkF,EAA0BxE,OAAQV,IAAK,CACzD,IAAIoF,EAA0BF,EAA0BlF,GACb,OAAvCoF,EAAwBX,YAC1BW,EAAwBX,WAAWC,YAAYU,GAOrDvI,EAAoBgD,GAAoB,EAAMhD,EAAmBuE,IAK/DH,EAAW,CACbC,OAAQ,CAENC,KAAM,SAAUkE,GAEdxI,EAAoBgD,GAAoB,EAAM9C,EAAgBsI,GAvZpC,SAAUC,EAAqBC,GAE7D,IAAK5F,EAAsB,QAAW,OAAO,EAG7C,GAA8B,OAA1B2F,MAAmC5I,EAAOE,SAASsF,eAAeqD,GAAiB,CACrF,IAAIC,EAAc9I,EAAOE,SAASgF,cAAc,SAChD4D,EAAYrD,GAAKoD,EACjBC,EAAY3D,UAAYyD,IACxB5I,EAAOE,SAAS6I,KAAKjC,YAAYgC,IAgZ/BE,CAA0B/E,EAA2B,8BAGvDL,MAAO,SAAUqF,GAEf,IAAI9I,EAMF,OADA0C,EAAmB,yEACZ,EALP1C,EAAoBgD,GAAoB,EAAMhD,EAAmB8I,IASrE9G,QAAS,SAAUW,EAASuB,EAAmBC,GAC7CH,EAAa/D,EAAqB0C,EAASuB,EAAmBC,IAGhE5B,QAAS,SAAUI,EAASuB,EAAmBC,GAC7CH,EAAa/D,EAAqB0C,EAASuB,EAAmBC,IAGhE3B,QAAS,SAAUG,EAASuB,EAAmBC,GAC7CH,EAAa/D,EAAqB0C,EAASuB,EAAmBC,IAGhE1B,KAAM,SAAUE,EAASuB,EAAmBC,GAC1CH,EAAa/D,EAAkB0C,EAASuB,EAAmBC,MAKjE,MAA+B,iBAApBtE,EAAOuE,SACTpB,GAAoB,EAAMnD,EAAOuE,SAAU,CAAEC,OAAQD,EAASC,SAE9D,CAAEA,OAAQD,EAASC,SA1jBN,mBAAX0E,QAAyBA,OAAOC,IACzCD,OAAO,IAAI,WACT,OAAOpJ,EAAQD,MAEgD,iBAAnBI,EAC9CA,EAAiBH,EAAQD,GAEzBA,EAAK0E,SAAWzE,EAAQD,GCjB5BK,SAASgI,iBAAiB,oBAAoB,KAC9C,MAAMkB,EAA2BlJ,SAAS+H,cAAc,kBAExDmB,EAAyBlB,iBAAiB,SAAQ,SAASmB,GACvD,IAAIC,EAAQ3E,MAAMnB,UAAU+F,QAAQ7F,KAAK0F,EAAyBI,SAAUH,EAAEI,QAElE,GAATH,GACCI,EAAmBC,EACnBC,KACe,GAATN,GACNI,EAAmBG,EACnBD,KACe,GAATN,IACNI,EAAmBI,EACnBF,WAKR,MAAQD,EAAS,CACTI,eAAgB,gBAChBC,WAAY,YACZC,MAAO,eACPC,MAAO,SACNC,MAAM,QACPC,MAAO,QACPC,OAAQ,SACRC,QAAS,YACTC,QAAS,WACTC,eAAgB,gBACfC,YAAY,aACbC,eAAgB,mBACdC,mBAAkB,oBACpBC,0BAA2B,gBAC1BC,OAAO,SACRC,QAAS,SACTC,aAAc,kBACdC,OAAQ,WACRC,OAAQ,UACRC,QAAS,YACTC,KAAM,OACNC,eAAgB,iBACfC,QAAQ,UACTC,OAAQ,QACPC,UAAU,QACXC,QAAS,UACTC,SAAU,WACTC,OAAO,SACRC,QAAS,UACTC,WAAY,aACXC,QAAQ,QACRC,QAAQ,UACTC,YAAa,aACbC,MAAO,SACNC,OAAO,UACRC,MAAO,YACPC,SAAU,aACVC,OAAQ,SACRC,QAAS,QACTC,WAAY,WACZC,OAAQ,SACRC,eAAgB,MAChBC,KAAM,SACLC,MAAM,OACPC,UAAW,YACXC,OAAQ,QACPC,KAAK,OACJC,MAAK,QACNC,IAAI,OACLC,KAAM,OACNC,KAAM,OACNC,MAAO,OACNC,QAAQ,UACTC,KAAM,OACNC,QAAS,UACTC,MAAO,OACPC,gBAAiB,qBAChBC,cAAc,uBACdC,kBAAmB,oBACnBC,iBAAkB,aAClBC,YAAa,aAGd9D,EAAU,CACVE,eAAgB,iBAChBC,WAAY,aACZC,MAAO,eACPC,MAAO,eACPC,MAAO,QACPC,MAAO,YACPC,OAAQ,SACRC,QAAS,UACTC,QAAS,UACTC,eAAgB,kBAChBC,YAAa,SACbC,eAAgB,kBAChBC,mBAAoB,oBACpBC,0BAA2B,oBAC3BC,OAAQ,SACRC,QAAS,UACTC,aAAc,gBACdC,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,KAAM,OACNC,eAAgB,iBAChBC,QAAS,UACTC,OAAQ,SACRC,UAAW,YACXC,QAAS,UACTC,SAAU,WACVC,OAAQ,SACRC,QAAS,UACTC,WAAY,aACZC,QAAS,UACTC,QAAS,UACTC,YAAa,cACbC,MAAO,QACPC,OAAQ,SACRC,MAAO,QACPC,SAAU,WACVC,OAAQ,SACRC,QAAS,UACTC,WAAY,aACZC,OAAQ,SACRC,eAAgB,MAChBC,KAAM,OACNC,MAAO,QACPC,UAAW,YACXC,OAAQ,SACRC,KAAM,OACNC,MAAO,QACPC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,KAAM,OACNC,QAAS,UACTC,MAAO,QACPC,gBAAiB,mBACjBC,cAAe,iBACfC,kBAAoB,sBACpBC,iBAAmB,qBACnBC,YAAc,gBAGd7D,EAAU,CACVC,eAAgB,gBACHC,WAAD,YACHC,MAAF,gBACKC,MAAL,iBACMC,MAAN,QACFC,MAAE,SACDC,OAAE,WACAC,QAAC,aACCC,QAAD,UACFC,eAAS,gBACJC,YAAC,aACHC,eAAM,iBACHC,mBAAO,oBACpBC,0BAA2B,iBACdC,OAAL,SACFC,QAAG,WACDC,aAAM,iBACAC,OAAN,WACAC,OAAA,SACFC,QAAG,YACAC,KAAH,OACFC,eAAY,eACJC,QAAH,UACFC,OAAC,SACFC,UAAK,QACNC,QAAI,UACFC,SAAG,WACFC,OAAA,SACFC,QAAG,UACFC,WAAK,aACZC,QAAS,UACFC,QAAE,UACFC,YAAM,YACJC,MAAF,SACDC,OAAE,UACDC,MAAA,UACAC,SAAG,aACAC,OAAF,SACFC,QAAG,QACJC,WAAO,aACFC,OAAF,UACDC,eAAS,MACbC,KAAG,iBACOC,MAAN,QACFC,UAAM,WACHC,OAAA,OACJC,KAAE,OACHC,MAAI,WACCC,IAAH,QACAC,KAAC,OACFC,KAAE,OACFC,MAAG,OACHC,QAAK,SACHC,KAAA,OACFC,QAAK,WACDC,MAAD,OACHC,gBAAa,qBACAC,cAAF,kBACDC,kBAAM,qBACHC,iBAAE,gBACPC,YAAE,iBAKtB,ICjNIC,EACAC,EDgNAnE,EAAmBC,EAKrB,SAASC,IAER,MAAMkE,EAAiB5N,SAASsF,eAAe,kBACzCuI,EAAwB7N,SAASsF,eAAe,SAChDwI,EAAwB9N,SAASsF,eAAe,SAChDyI,EAAkB/N,SAASsF,eAAe,SAC1C0I,EAAuBhO,SAASsF,eAAe,SAC/C2I,EAAoBjO,SAASsF,eAAe,UAC5C4I,EAAqBlO,SAASsF,eAAe,WAC7C6I,EAAqBnO,SAASsF,eAAe,WAC7C8I,EAA4BpO,SAASsF,eAAe,aACpD+I,EAAoBrO,SAASsF,eAAe,UAC5CgJ,EAA4BtO,SAASsF,eAAe,kBAEzDsI,EAAeW,IAAM/E,EAAiBiB,mBACtCmD,EAAeY,MAAQhF,EAAiBkB,0BACxCmD,EAAsB5I,UAAYuE,EAAiBO,MACnD+D,EAAsB7I,UAAYuE,EAAiBQ,MACnD+D,EAAgB9I,UAAYuE,EAAiBS,MAC7C+D,EAAqB/I,UAAYuE,EAAiBU,MAClD+D,EAAkBhJ,UAAYuE,EAAiBW,OAC/C+D,EAAmBjJ,UAAYuE,EAAiBY,QAChD+D,EAAmBlJ,UAAYuE,EAAiBa,QAChD+D,EAA0BnJ,UAAYuE,EAAiBc,eACvD+D,EAAkBpJ,UAAYuE,EAAiBe,YAC/C+D,EAA0BrJ,UAAYuE,EAAiBgB,eC7O3D,IAAIiE,EAAmB,GAWvB1O,EAAAuE,OAAOC,KAAK,CACVjE,MAAO,QACPC,SAAU,eACVK,QAAS,IACTI,WAAW,EACXC,oBAAoB,EACpByB,KAAM,CACJR,WAAY,aAKZ,IAAIwM,EAAO,CACTC,KAAM,CACA,EAAGC,iBAAiBrC,KACpB,EAAGqC,iBAAiBpC,MACpB,EAAGoC,iBAAiBnC,UACpB,EAAGmC,iBAAiBlC,OACpB,EAAGkC,iBAAiBjC,KACpB,EAAGiC,iBAAiBhC,MACpB,EAAGgC,iBAAiB/B,KAE1BgC,WAAY,CACV,EAAGD,iBAAiB9B,KACpB,EAAG8B,iBAAiB7B,KACpB,EAAG6B,iBAAiB5B,MACpB,EAAG4B,iBAAiB3B,SAEtB6B,SAAU,CACR,EAAGF,iBAAiB1B,KACpB,EAAG0B,iBAAiBzB,QACpB,EAAGyB,iBAAiBxB,MACpB,EAAGwB,iBAAiBvB,kBAIpB0B,EACQ,GADRA,EAEM,GAINC,EACM,IADNA,EAEK,MAuCHC,GArCGP,EAAMG,WAAW,GAsCd,QADNI,EAEK,MAyCRC,GAvCQR,EAAMI,SAAS,GACfJ,EAAMI,SAAS,GACfJ,EAAMC,KAAK,GAsCd,KADLO,EAEI,IA0CHC,GAxCGT,EAAMC,KAAK,GACXD,EAAMC,KAAK,GACXD,EAAMI,SAAS,GACfJ,EAAMC,KAAK,GAsCP,OADPQ,EAEK,IAyCNC,GAvCIV,EAAMC,KAAK,GACXD,EAAMC,KAAK,GACXD,EAAMI,SAAS,GAsCd,KADLM,EAEI,IAyCHC,GAvCCX,EAAMC,KAAK,GACXD,EAAMC,KAAK,GACXD,EAAMG,WAAW,GAsCZ,KADNQ,EAEK,IAyCLC,GAvCGZ,EAAMC,KAAK,GACXD,EAAMC,KAAK,GACXD,EAAMG,WAAW,GAsCd,OADNS,EAEK,IAyCLC,GAvCGb,EAAMC,KAAK,GACXD,EAAMC,KAAK,GACXD,EAAMI,SAAS,GAsCZ,KADNS,EAEK,IA0CLC,GAxCGd,EAAMC,KAAK,GACXD,EAAMC,KAAK,GACXD,EAAMG,WAAW,GACjBH,EAAMI,SAAS,GAsCZ,MADNU,EAEK,IAuCLC,GArCGf,EAAMG,WAAW,GAsCd,KADNY,EAEK,MA2CLC,GAzCGhB,EAAMC,KAAK,GACXD,EAAMC,KAAK,GACXD,EAAMC,KAAK,GACXD,EAAMG,WAAW,GAsCR7O,SAAS+H,cAAc,eACvC,MAAM4H,EAAoBC,EAAE,sBAAsB,GAE5CC,EAAwBD,EAAE,0BAA0B,GAC1D,IAAIE,EAAe9P,SAAS+H,cAAc,iBAE1C,MAAMgI,EAAkBH,EAAE,oBAAoB,GAC9C,IAAII,EAAUhQ,SAAS+H,cAAc,YAErC,MAAMkI,EAA4BL,EAAE,8BAA8B,GAClE,IAAIM,EAAoBlQ,SAAS+H,cAAc,sBAE/C,MAAMoI,EAAqBP,EAAE,uBAAuB,GACpD,IAAIQ,EAAapQ,SAAS+H,cAAc,eAExC,MAAMsI,EAAqBT,EAAE,uBAAuB,GACpD,IAAIU,EAAatQ,SAAS+H,cAAc,eAExC,MAAMwI,EAAoBX,EAAE,sBAAsB,GAClD,IAAIY,EAAYxQ,SAAS+H,cAAc,cAEvC,MAAM0I,EAA0Bb,EAAE,4BAA4B,GAC9D,IAAIc,EAAkB1Q,SAAS+H,cAAc,oBAE7C,MAAM4I,EAAoBf,EAAE,sBAAsB,GAClD,IAAIgB,EAAY5Q,SAAS+H,cAAc,cAEvC,MAAM8I,GAAoBjB,EAAE,sBAAsB,GAClD,IAAIkB,GAAY9Q,SAAS+H,cAAc,cAGvC,MAAMgJ,GAAiB/Q,SAAS+H,cAAc,cACxCiJ,GAAYhR,SAAS+H,cAAc,SAEzC,IACIkJ,GADAC,GAAatB,EAAE,YAAYtP,QAsI/B,SAAS6Q,KAEPxB,EAAkBnK,MAAMiB,OAASwK,GAAU5B,EAAiB,KAC5DM,EAAkBnK,MAAMlF,MAAQ2Q,GAAU5B,EAAgB,KAE1DQ,EAAsBrK,MAAMiB,OAASwK,GAAU7B,EAAoB,KACnES,EAAsBrK,MAAMlF,MAAQ2Q,GAAU7B,EAAmB,KAEjEiB,EAAmB7K,MAAMiB,OAASwK,GAAU9B,EAAkB,KAC9DkB,EAAmB7K,MAAMlF,MAAQ2Q,GAAU9B,EAAiB,KAE5DY,EAAgBvK,MAAMiB,OAASwK,GAAU/B,EAAe,KACxDa,EAAgBvK,MAAMlF,MAAQ2Q,GAAU/B,EAAc,KAEtDe,EAA0BzK,MAAMiB,OAASwK,GAAU3B,EAAyB,KAC5EW,EAA0BzK,MAAMlF,MAAQ2Q,GAAU3B,EAAwB,KAE1EmB,EAAwBjL,MAAMiB,OAASwK,GAAU1B,EAAuB,KACxEkB,EAAwBjL,MAAMlF,MAAQ2Q,GAAU1B,EAAsB,KAEtEY,EAAmB3K,MAAMiB,OAASwK,GAAUzB,EAAkB,KAC9DW,EAAmB3K,MAAMlF,MAAQ2Q,GAAUzB,EAAiB,KAE5De,EAAkB/K,MAAMiB,OAASwK,GAAUxB,EAAiB,KAC5Dc,EAAkB/K,MAAMlF,MAAQ2Q,GAAUxB,EAAgB,KAE1DkB,EAAkBnL,MAAMiB,OAASwK,GAAUjC,EAAiB,KAC5D2B,EAAkBnL,MAAMlF,MAAQ2Q,GAAUjC,EAAgB,KAE1D6B,GAAkBrL,MAAMiB,OAASwK,GAAUhC,EAAiB,KAC5D4B,GAAkBrL,MAAMlF,MAAQ2Q,GAAUhC,EAAgB,KAE1D8B,GAAevL,MAAMhE,SAAWyP,GAAUlC,EAAiB,KAC3DiC,GAAUxL,MAAMhE,SAAWyP,GAAUlC,EAAe,KAGtD,SAASqC,KACPH,GAASC,GAAa,KAGxB,SAASG,GAAoBC,GAC3B3D,EAAkB4D,0BAA0BD,GAC5C7C,EAAmB,GACnB,IAAI,IAAI+C,KAAW7D,EAAgB8D,aAC9BD,EAAUnO,OAAOqO,KAAK/D,EAAgB8D,cAAc3N,OACvD2K,GAAoBd,EAAgB8D,aAAaD,GAAW,KAE5D/C,GAAoBd,EAAgB8D,aAAaD,GAGpD,IAAIG,GAIeC,EAJcjE,EAK1B,MAAQiB,iBAAiBlB,GAAzB,cAAqEkB,iBAAiB9E,WAAa,KAAO8H,EAAgB9H,WAAa,IAAM8E,iBAAiBtC,eAC5J,OAASsC,iBAAiB/E,eAAiB,KAAO4E,GAF5D,IAAoBmD,EAHhB7R,EAAAuE,OAAO5B,KAAKiP,GAtLhBP,KACAD,KAEArR,OAAOkI,iBAAiB,UAAS,WAC/BkJ,GAAatB,EAAE,YAAYtP,QAC3B8Q,KACAD,QAIFzB,EAAU1H,iBAAiB,SAC3B,WACI6J,MAAM,oCAGVnC,EAAU1H,iBAAiB,aAC3B,WACM0F,EAAsB,SACtB2D,GAAoB3D,MAI1BkD,EAAU5I,iBAAiB,SAC3B,WACI6J,MAAM,oCAGVjB,EAAU5I,iBAAiB,aAC3B,WACM0F,EAAsB,SACtB2D,GAAoB3D,MAI1BoD,GAAU9I,iBAAiB,SAC3B,WACI6J,MAAM,oCAGVf,GAAU9I,iBAAiB,aAC3B,WACM0F,EAAsB,SACtB2D,GAAoB3D,MAK1B4C,EAAWtI,iBAAiB,SAC5B,WAAY6J,MAAM,oCAGlBvB,EAAWtI,iBAAiB,aAC5B,WACM0F,EAAsB,UACtB2D,GAAoB3D,MAM1BgD,EAAgB1I,iBAAiB,SACjC,WAAY6J,MAAM,+BAGlBnB,EAAgB1I,iBAAiB,aACjC,WACE0F,EAAsB,eACtB2D,GAAoB3D,MAItBsC,EAAQhI,iBAAiB,SACzB,WAAY6J,MAAM,iCAGlB7B,EAAQhI,iBAAiB,aACzB,WACE0F,EAAsB,OACtB2D,GAAoB3D,MAKtBwC,EAAkBlI,iBAAiB,SACnC,WAAY6J,MAAM,4CAGlB3B,EAAkBlI,iBAAiB,aACnC,WACM0F,EAAsB,iBACtB2D,GAAoB3D,MAK1B0C,EAAWpI,iBAAiB,SAC5B,WAAY6J,MAAM,qCAGlBzB,EAAWpI,iBAAiB,aAC5B,WACE0F,EAAsB,UACtB2D,GAAoB3D,MAItB8C,EAAUxI,iBAAiB,SAC3B,WAAY6J,MAAM,oCAGlBrB,EAAUxI,iBAAiB,aAC3B,WACE0F,EAAsB,SACtB2D,GAAoB3D,MAItBoC,EAAa9H,iBAAiB,SAC9B,WAAY6J,MAAM,uCAGlB/B,EAAa9H,iBAAiB,aAC9B,WACE0F,EAAsB,YACtB2D,GAAoB3D","sources":["node_modules/notiflix/build/notiflix-notify-aio.js","src/js/translations.js","src/js/map.js"],"sourcesContent":["/*\n* Notiflix Notify AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.5\n* Author: Furkan MT (https://github.com/furcan)\n* Copyright 2019 - 2022 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\r\n    return false;\r\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\r\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\r\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // NOTIFY: Default Settings: begin\n  var typesNotify = {\r\n    Success: 'Success',\r\n    Failure: 'Failure',\r\n    Warning: 'Warning',\r\n    Info: 'Info',\r\n  };\r\n  var newNotifySettings;\r\n  var notifySettings = {\r\n    wrapID: 'NotiflixNotifyWrap', // can not customizable\r\n    overlayID: 'NotiflixNotifyOverlay', // can not customizable\r\n    width: '280px',\r\n    position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\r\n    distance: '10px',\r\n    opacity: 1,\r\n    borderRadius: '5px',\r\n    rtl: false,\r\n    timeout: 3000,\r\n    messageMaxLength: 110,\r\n    backOverlay: false,\r\n    backOverlayColor: 'rgba(0,0,0,0.5)',\r\n    plainText: true,\r\n    showOnlyTheLastOne: false,\r\n    clickToClose: false,\r\n    pauseOnHover: true,\r\n\n    ID: 'NotiflixNotify',\r\n    className: 'notiflix-notify',\r\n    zindex: 4001,\r\n    fontFamily: 'Quicksand',\r\n    fontSize: '13px',\r\n    cssAnimation: true,\r\n    cssAnimationDuration: 400,\r\n    cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\r\n    closeButton: false,\r\n    useIcon: true,\r\n    useFontAwesome: false,\r\n    fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\r\n    fontAwesomeIconSize: '34px',\r\n\n    success: {\r\n      background: '#32c682',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-success',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-check-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(50,198,130,0.2)',\r\n    },\r\n\n    failure: {\r\n      background: '#ff5549',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-failure',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-times-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(255,85,73,0.2)',\r\n    },\r\n\n    warning: {\r\n      background: '#eebf31',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-warning',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-exclamation-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(238,191,49,0.2)',\r\n    },\r\n\n    info: {\r\n      background: '#26c0d3',\r\n      textColor: '#fff',\r\n      childClassName: 'notiflix-notify-info',\r\n      notiflixIconColor: 'rgba(0,0,0,0.2)',\r\n      fontAwesomeClassName: 'fas fa-info-circle',\r\n      fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\r\n      backOverlayColor: 'rgba(38,192,211,0.2)',\r\n    },\r\n  };\n  // NOTIFY: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\r\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\r\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\r\n    if (!element) { element = 'head'; }\r\n    if (window.document[element] === null) {\r\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\r\n    // check doc head\r\n    if (!commonCheckHeadOrBody('head')) { return false; }\r\n\n    // internal css\r\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\r\n      var internalCSS = window.document.createElement('style');\r\n      internalCSS.id = styleElementId;\r\n      internalCSS.innerHTML = getInternalCSSCodes();\r\n      window.document.head.appendChild(internalCSS);\r\n    }\r\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\r\n    // variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    // check if a deep merge\r\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\r\n      deep = arguments[0];\r\n      i++;\r\n    }\r\n    // merge the object into the extended object\r\n    var merge = function (obj) {\r\n      for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n          // if property is an object, merge properties\r\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\r\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\r\n          } else {\r\n            extended[prop] = obj[prop];\r\n          }\r\n        }\r\n      }\r\n    };\r\n    // loop through each object and conduct a merge\r\n    for (; i < arguments.length; i++) {\r\n      merge(arguments[i]);\r\n    }\r\n    return extended;\r\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\r\n    var htmlPool = window.document.createElement('div');\r\n    htmlPool.innerHTML = html;\r\n    return htmlPool.textContent || htmlPool.innerText || '';\r\n  };\n  // COMMON: Get Plaintext: end\n\n  // NOTIFY: Get Internal CSS Codes: begin\n  var notifyGetInternalCSSCodes = function () {\r\n    var notifyCSS = '[id^=NotiflixNotifyWrap]{pointer-events:none;position:fixed;z-index:4001;opacity:1;right:10px;top:10px;width:280px;max-width:96%;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent}[id^=NotiflixNotifyWrap].nx-flex-center-center{max-height:calc(100vh - 20px);overflow-x:hidden;overflow-y:auto;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:auto}[id^=NotiflixNotifyWrap]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixNotifyWrap]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixNotifyWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyOverlay]{-webkit-transition:background .3s ease-in-out;-o-transition:background .3s ease-in-out;transition:background .3s ease-in-out}[id^=NotiflixNotifyWrap]>div{pointer-events:all;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;width:100%;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;position:relative;margin:0 0 10px;border-radius:5px;background:#1e1e1e;color:#fff;padding:10px 12px;font-size:14px;line-height:1.4}[id^=NotiflixNotifyWrap]>div:last-child{margin:0}[id^=NotiflixNotifyWrap]>div.nx-with-callback{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-icon{padding:8px;min-height:56px}[id^=NotiflixNotifyWrap]>div.nx-paused{cursor:auto}[id^=NotiflixNotifyWrap]>div.nx-notify-click-to-close{cursor:pointer}[id^=NotiflixNotifyWrap]>div.nx-with-close-button{padding:10px 36px 10px 12px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button{padding:6px 36px 6px 6px}[id^=NotiflixNotifyWrap]>div>span.nx-message{cursor:inherit;font-weight:normal;font-family:inherit!important;word-break:break-all;word-break:break-word}[id^=NotiflixNotifyWrap]>div>span.nx-close-button{cursor:pointer;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out;position:absolute;right:8px;top:0;bottom:0;margin:auto;color:inherit;width:20px;height:20px}[id^=NotiflixNotifyWrap]>div>span.nx-close-button:hover{-webkit-transform:rotate(90deg);transform:rotate(90deg)}[id^=NotiflixNotifyWrap]>div>span.nx-close-button>svg{position:absolute;width:16px;height:16px;right:2px;top:2px}[id^=NotiflixNotifyWrap]>div>.nx-message-icon{position:absolute;width:40px;height:40px;font-size:30px;line-height:40px;text-align:center;left:8px;top:0;bottom:0;margin:auto;border-radius:inherit}[id^=NotiflixNotifyWrap]>div>.nx-message-icon-fa.nx-message-icon-fa-shadow{color:inherit;background:rgba(0,0,0,.15);-webkit-box-shadow:inset 0 0 34px rgba(0,0,0,.2);box-shadow:inset 0 0 34px rgba(0,0,0,.2);text-shadow:0 0 10px rgba(0,0,0,.3)}[id^=NotiflixNotifyWrap]>div>span.nx-with-icon{position:relative;float:left;width:calc(100% - 40px);margin:0 0 0 40px;padding:0 0 0 10px;-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>.nx-message-icon{left:auto;right:8px}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-with-icon{padding:0 10px 0 0;margin:0 40px 0 0}[id^=NotiflixNotifyWrap]>div.nx-rtl-on>span.nx-close-button{right:auto;left:8px}[id^=NotiflixNotifyWrap]>div.nx-with-icon.nx-with-close-button.nx-rtl-on{padding:6px 6px 6px 36px}[id^=NotiflixNotifyWrap]>div.nx-with-close-button.nx-rtl-on{padding:10px 12px 10px 36px}[id^=NotiflixNotifyOverlay].nx-with-animation,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade{-webkit-animation:notify-animation-fade .3s ease-in-out 0s normal;animation:notify-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes notify-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom{-webkit-animation:notify-animation-zoom .3s ease-in-out 0s normal;animation:notify-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes notify-animation-zoom{0%{-webkit-transform:scale(0);transform:scale(0)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right{-webkit-animation:notify-animation-from-right .3s ease-in-out 0s normal;animation:notify-animation-from-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}@keyframes notify-animation-from-right{0%{right:-300px;opacity:0}50%{right:8px;opacity:1}100%{right:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left{-webkit-animation:notify-animation-from-left .3s ease-in-out 0s normal;animation:notify-animation-from-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}@keyframes notify-animation-from-left{0%{left:-300px;opacity:0}50%{left:8px;opacity:1}100%{left:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top{-webkit-animation:notify-animation-from-top .3s ease-in-out 0s normal;animation:notify-animation-from-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}@keyframes notify-animation-from-top{0%{top:-50px;opacity:0}50%{top:8px;opacity:1}100%{top:0;opacity:1}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom{-webkit-animation:notify-animation-from-bottom .3s ease-in-out 0s normal;animation:notify-animation-from-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}@keyframes notify-animation-from-bottom{0%{bottom:-50px;opacity:0}50%{bottom:8px;opacity:1}100%{bottom:0;opacity:1}}[id^=NotiflixNotifyOverlay].nx-with-animation.nx-remove,[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-fade.nx-remove{opacity:0;-webkit-animation:notify-remove-fade .3s ease-in-out 0s normal;animation:notify-remove-fade .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}@keyframes notify-remove-fade{0%{opacity:1}100%{opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-zoom.nx-remove{-webkit-transform:scale(0);transform:scale(0);-webkit-animation:notify-remove-zoom .3s ease-in-out 0s normal;animation:notify-remove-zoom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}@keyframes notify-remove-zoom{0%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.05);transform:scale(1.05)}100%{-webkit-transform:scale(0);transform:scale(0)}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-top.nx-remove{opacity:0;-webkit-animation:notify-remove-to-top .3s ease-in-out 0s normal;animation:notify-remove-to-top .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}@keyframes notify-remove-to-top{0%{top:0;opacity:1}50%{top:8px;opacity:1}100%{top:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-right.nx-remove{opacity:0;-webkit-animation:notify-remove-to-right .3s ease-in-out 0s normal;animation:notify-remove-to-right .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}@keyframes notify-remove-to-right{0%{right:0;opacity:1}50%{right:8px;opacity:1}100%{right:-300px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-bottom.nx-remove{opacity:0;-webkit-animation:notify-remove-to-bottom .3s ease-in-out 0s normal;animation:notify-remove-to-bottom .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}@keyframes notify-remove-to-bottom{0%{bottom:0;opacity:1}50%{bottom:8px;opacity:1}100%{bottom:-50px;opacity:0}}[id^=NotiflixNotifyWrap]>div.nx-with-animation.nx-from-left.nx-remove{opacity:0;-webkit-animation:notify-remove-to-left .3s ease-in-out 0s normal;animation:notify-remove-to-left .3s ease-in-out 0s normal}@-webkit-keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}@keyframes notify-remove-to-left{0%{left:0;opacity:1}50%{left:8px;opacity:1}100%{left:-300px;opacity:0}}';\r\n    return notifyCSS || null;\r\n  };\n  // NOTIFY: Get Internal CSS Codes: end\n\n  // NOTIFY: Create: begin\n  var notifyCreateCounter = 0;\r\n  var notifyCreate = function (notifyType, message, callbackOrOptions, options) {\r\n    // check doc body\r\n    if (!commonCheckHeadOrBody('body')) { return false; }\r\n\n    // if not initialized pretend like init\r\n    if (!newNotifySettings) {\r\n      Notiflix.Notify.init({});\r\n    }\r\n\n    // create a backup for new settings\r\n    var newNotifySettingsBackup = commonExtendOptions(true, newNotifySettings, {});\r\n\n    // check callbackOrOptions and options: begin\r\n    if ((typeof callbackOrOptions === 'object' && !Array.isArray(callbackOrOptions)) || (typeof options === 'object' && !Array.isArray(options))) {\r\n      // new options\r\n      var newOptions = {};\r\n      if (typeof callbackOrOptions === 'object') {\r\n        newOptions = callbackOrOptions;\r\n      } else if (typeof options === 'object') {\r\n        newOptions = options;\r\n      }\r\n\n      // extend new settings with the new options\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, newOptions);\r\n    }\r\n    // check callbackOrOptions and options: end\r\n\n    // notify type\r\n    var theType = newNotifySettings[notifyType.toLocaleLowerCase('en')];\r\n\n    // notify counter\r\n    notifyCreateCounter++;\r\n\n    // check the message: begin\r\n    if (typeof message !== 'string') {\r\n      message = 'Notiflix ' + notifyType;\r\n    }\r\n    // check the message: end\r\n\n    // if plainText is true => HTML tags not allowed: begin\r\n    if (newNotifySettings.plainText) {\r\n      message = commonGetPlaintext(message); // message plain text\r\n    }\r\n    // if plainText is true => HTML tags not allowed: end\r\n\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: begin\r\n    if (!newNotifySettings.plainText && message.length > newNotifySettings.messageMaxLength) {\r\n      // extend settings for error massege\r\n      newNotifySettings = commonExtendOptions(true, newNotifySettings, { closeButton: true, messageMaxLength: 150 });\r\n      // error message\r\n      message = 'Possible HTML Tags Error: The \"plainText\" option is \"false\" and the notification content length is more than the \"messageMaxLength\" option.';\r\n    }\r\n    // if plainText is false but the message length more than messageMaxLength => Possible HTML tags error: end\r\n\n    // check message max length: begin\r\n    if (message.length > newNotifySettings.messageMaxLength) {\r\n      message = message.substring(0, newNotifySettings.messageMaxLength) + '...';\r\n    }\r\n    // check message max length: end\r\n\n    // font awesome icon style: begin\r\n    if (newNotifySettings.fontAwesomeIconStyle === 'shadow') {\r\n      theType.fontAwesomeIconColor = theType.background;\r\n    }\r\n    // font awesome icon style: end\r\n\n    // if cssAnimaion is false => duration: begin\r\n    if (!newNotifySettings.cssAnimation) {\r\n      newNotifySettings.cssAnimationDuration = 0;\r\n    }\r\n    // if cssAnimaion is false => duration: end\r\n\n    // notify wrap: begin\r\n    var ntflxNotifyWrap = window.document.getElementById(notifySettings.wrapID) || window.document.createElement('div');\r\n    ntflxNotifyWrap.id = notifySettings.wrapID;\r\n    ntflxNotifyWrap.style.width = newNotifySettings.width;\r\n    ntflxNotifyWrap.style.zIndex = newNotifySettings.zindex;\r\n    ntflxNotifyWrap.style.opacity = newNotifySettings.opacity;\r\n\n    // wrap position: begin\r\n    if (newNotifySettings.position === 'center-center') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n      ntflxNotifyWrap.classList.add('nx-flex-center-center');\r\n      ntflxNotifyWrap.style.maxHeight = 'calc((100vh - ' + newNotifySettings.distance + ') - ' + newNotifySettings.distance + ')';\r\n      ntflxNotifyWrap.style.display = 'flex';\r\n      ntflxNotifyWrap.style.flexWrap = 'wrap';\r\n      ntflxNotifyWrap.style.flexDirection = 'column';\r\n      ntflxNotifyWrap.style.justifyContent = 'center';\r\n      ntflxNotifyWrap.style.alignItems = 'center';\r\n      ntflxNotifyWrap.style.pointerEvents = 'none';\r\n    } else if (newNotifySettings.position === 'center-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'center-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.margin = 'auto';\r\n    } else if (newNotifySettings.position === 'right-bottom') {\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n    } else if (newNotifySettings.position === 'left-top') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    } else if (newNotifySettings.position === 'left-bottom') {\r\n      ntflxNotifyWrap.style.left = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.bottom = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = 'auto';\r\n      ntflxNotifyWrap.style.right = 'auto';\r\n    } else { // 'right-top' or else\r\n      ntflxNotifyWrap.style.right = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.top = newNotifySettings.distance;\r\n      ntflxNotifyWrap.style.left = 'auto';\r\n      ntflxNotifyWrap.style.bottom = 'auto';\r\n    }\r\n    // wrap position: end\r\n\n    // if background overlay is true: begin\r\n    if (newNotifySettings.backOverlay) {\r\n      var ntflxNotifyOverlay = window.document.getElementById(notifySettings.overlayID) || window.document.createElement('div');\r\n      ntflxNotifyOverlay.id = notifySettings.overlayID;\r\n      ntflxNotifyOverlay.style.width = '100%';\r\n      ntflxNotifyOverlay.style.height = '100%';\r\n      ntflxNotifyOverlay.style.position = 'fixed';\r\n      ntflxNotifyOverlay.style.zIndex = newNotifySettings.zindex - 1;\r\n      ntflxNotifyOverlay.style.left = 0;\r\n      ntflxNotifyOverlay.style.top = 0;\r\n      ntflxNotifyOverlay.style.right = 0;\r\n      ntflxNotifyOverlay.style.bottom = 0;\r\n      ntflxNotifyOverlay.style.background = theType.backOverlayColor || newNotifySettings.backOverlayColor;\r\n      ntflxNotifyOverlay.className = newNotifySettings.cssAnimation ? 'nx-with-animation' : '';\r\n      ntflxNotifyOverlay.style.animationDuration = newNotifySettings.cssAnimation ? newNotifySettings.cssAnimationDuration + 'ms' : '';\r\n\n      if (!window.document.getElementById(notifySettings.overlayID)) {\r\n        window.document.body.appendChild(ntflxNotifyOverlay);\r\n      }\r\n    }\r\n    // if background overlay is true: end\r\n\n    if (!window.document.getElementById(notifySettings.wrapID)) {\r\n      window.document.body.appendChild(ntflxNotifyWrap);\r\n    }\r\n    // notify wrap: end\r\n\n    // notify content: begin\r\n    var ntflxNotify = window.document.createElement('div');\r\n    ntflxNotify.id = newNotifySettings.ID + '-' + notifyCreateCounter;\r\n    ntflxNotify.className = newNotifySettings.className + ' ' + theType.childClassName + ' ' + (newNotifySettings.cssAnimation ? 'nx-with-animation' : '') + ' ' + (newNotifySettings.useIcon ? 'nx-with-icon' : '') + ' nx-' + newNotifySettings.cssAnimationStyle + ' ' + (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function' ? 'nx-with-close-button' : '') + ' ' + (typeof callbackOrOptions === 'function' ? 'nx-with-callback' : '') + ' ' + (newNotifySettings.clickToClose ? 'nx-notify-click-to-close' : '');\r\n    ntflxNotify.style.fontSize = newNotifySettings.fontSize;\r\n    ntflxNotify.style.color = theType.textColor;\r\n    ntflxNotify.style.background = theType.background;\r\n    ntflxNotify.style.borderRadius = newNotifySettings.borderRadius;\r\n    ntflxNotify.style.pointerEvents = 'all';\r\n\n    // rtl: begin\r\n    if (newNotifySettings.rtl) {\r\n      ntflxNotify.setAttribute('dir', 'rtl');\r\n      ntflxNotify.classList.add('nx-rtl-on');\r\n    }\r\n    // rtl: end\r\n\n    // font-family: begin\r\n    ntflxNotify.style.fontFamily = '\"' + newNotifySettings.fontFamily + '\", ' + defaultFontFamily;\r\n    // font-family: end\r\n\n    // use css animation: begin\r\n    if (newNotifySettings.cssAnimation) {\r\n      ntflxNotify.style.animationDuration = newNotifySettings.cssAnimationDuration + 'ms';\r\n    }\r\n    // use css animation: end\r\n\n    // close button element: begin\r\n    var closeButtonHTML = '';\r\n    if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n      closeButtonHTML = '<span class=\"nx-close-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M0.38 2.19l7.8 7.81 -7.8 7.81c-0.51,0.5 -0.51,1.31 -0.01,1.81 0.25,0.25 0.57,0.38 0.91,0.38 0.34,0 0.67,-0.14 0.91,-0.38l7.81 -7.81 7.81 7.81c0.24,0.24 0.57,0.38 0.91,0.38 0.34,0 0.66,-0.14 0.9,-0.38 0.51,-0.5 0.51,-1.31 0,-1.81l-7.81 -7.81 7.81 -7.81c0.51,-0.5 0.51,-1.31 0,-1.82 -0.5,-0.5 -1.31,-0.5 -1.81,0l-7.81 7.81 -7.81 -7.81c-0.5,-0.5 -1.31,-0.5 -1.81,0 -0.51,0.51 -0.51,1.32 0,1.82z\"/></g></svg></span>';\r\n    }\r\n    // close buttpon element: end\r\n\n    // use icon: begin\r\n    if (newNotifySettings.useIcon) {\r\n      // use font awesome\r\n      if (newNotifySettings.useFontAwesome) {\r\n        ntflxNotify.innerHTML = '<i style=\"color:' + theType.fontAwesomeIconColor + '; font-size:' + newNotifySettings.fontAwesomeIconSize + ';\" class=\"nx-message-icon nx-message-icon-fa ' + theType.fontAwesomeClassName + ' ' + (newNotifySettings.fontAwesomeIconStyle === 'shadow' ? 'nx-message-icon-fa-shadow' : 'nx-message-icon-fa-basic') + '\"></i><span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n      // use notiflix icon\r\n      else {\r\n        var svgIcon = '';\r\n        if (notifyType === typesNotify.Success) {  // success\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-2.4 -13.29l11.52 -12.96c0.37,-0.41 1.01,-0.45 1.42,-0.08 0.42,0.37 0.46,1 0.09,1.42l-12.16 13.67c-0.19,0.22 -0.46,0.34 -0.75,0.34 -0.23,0 -0.45,-0.07 -0.63,-0.22l-7.6 -6.07c-0.43,-0.35 -0.5,-0.99 -0.16,-1.42 0.35,-0.43 0.99,-0.5 1.42,-0.16l6.85 5.48z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Failure) { // failure\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm1.42 -17.98l6.13 6.12c0.39,0.4 0.39,1.04 0,1.43 -0.19,0.19 -0.45,0.29 -0.71,0.29 -0.27,0 -0.53,-0.1 -0.72,-0.29l-6.12 -6.13 -6.13 6.13c-0.19,0.19 -0.44,0.29 -0.71,0.29 -0.27,0 -0.52,-0.1 -0.71,-0.29 -0.39,-0.39 -0.39,-1.03 0,-1.43l6.13 -6.12 -6.13 -6.13c-0.39,-0.39 -0.39,-1.03 0,-1.42 0.39,-0.39 1.03,-0.39 1.42,0l6.13 6.12 6.12 -6.12c0.4,-0.39 1.04,-0.39 1.43,0 0.39,0.39 0.39,1.03 0,1.42l-6.13 6.13z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Warning) { // warning\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M21.91 3.48l17.8 30.89c0.84,1.46 -0.23,3.25 -1.91,3.25l-35.6 0c-1.68,0 -2.75,-1.79 -1.91,-3.25l17.8 -30.89c0.85,-1.47 2.97,-1.47 3.82,0zm16.15 31.84l-17.8 -30.89c-0.11,-0.2 -0.41,-0.2 -0.52,0l-17.8 30.89c-0.12,0.2 0.05,0.4 0.26,0.4l35.6 0c0.21,0 0.38,-0.2 0.26,-0.4zm-19.01 -4.12l0 -1.05c0,-0.53 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.42 0.95,0.95l0 1.05c0,0.53 -0.42,0.95 -0.95,0.95 -0.53,0 -0.95,-0.42 -0.95,-0.95zm0 -4.66l0 -13.39c0,-0.52 0.42,-0.95 0.95,-0.95 0.53,0 0.95,0.43 0.95,0.95l0 13.39c0,0.53 -0.42,0.96 -0.95,0.96 -0.53,0 -0.95,-0.43 -0.95,-0.96z\"/></g></svg>';\r\n        } else if (notifyType === typesNotify.Info) { // info\r\n          svgIcon = '<svg class=\"nx-message-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\"><g><path fill=\"' + theType.notiflixIconColor + '\" d=\"M20 0c11.03,0 20,8.97 20,20 0,11.03 -8.97,20 -20,20 -11.03,0 -20,-8.97 -20,-20 0,-11.03 8.97,-20 20,-20zm0 37.98c9.92,0 17.98,-8.06 17.98,-17.98 0,-9.92 -8.06,-17.98 -17.98,-17.98 -9.92,0 -17.98,8.06 -17.98,17.98 0,9.92 8.06,17.98 17.98,17.98zm-0.99 -23.3c0,-0.54 0.44,-0.98 0.99,-0.98 0.55,0 0.99,0.44 0.99,0.98l0 15.86c0,0.55 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.44 -0.99,-0.99l0 -15.86zm0 -5.22c0,-0.55 0.44,-0.99 0.99,-0.99 0.55,0 0.99,0.44 0.99,0.99l0 1.09c0,0.54 -0.44,0.99 -0.99,0.99 -0.55,0 -0.99,-0.45 -0.99,-0.99l0 -1.09z\"/></g></svg>';\r\n        }\r\n        ntflxNotify.innerHTML = svgIcon + '<span class=\"nx-message nx-with-icon\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n      }\r\n    }\r\n    // without icon\r\n    else {\r\n      ntflxNotify.innerHTML = '<span class=\"nx-message\">' + message + '</span>' + (newNotifySettings.closeButton ? closeButtonHTML : '');\r\n    }\r\n    // use icon: end\r\n    // notify content: end\r\n\n    // notify append or prepend: begin\r\n    if (newNotifySettings.position === 'left-bottom' || newNotifySettings.position === 'right-bottom') { // the new one will be first\r\n      var notifyWrap = window.document.getElementById(notifySettings.wrapID);\r\n      notifyWrap.insertBefore(ntflxNotify, notifyWrap.firstChild);\r\n    } else {\r\n      window.document.getElementById(notifySettings.wrapID).appendChild(ntflxNotify);\r\n    }\r\n    // notify append or prepend: end\r\n\n    // remove by timeout or click: begin\r\n    var eachNotifyElement = window.document.getElementById(ntflxNotify.id);\r\n    if (eachNotifyElement) {\r\n      // timeout variables\r\n      var timeoutHide;\r\n      var timeoutRemove;\r\n\n      // hide notify elm and hide overlay: begin\r\n      var hideNotifyElementsAndOverlay = function () {\r\n        eachNotifyElement.classList.add('nx-remove');\r\n        var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n        if (removeOverlay && ntflxNotifyWrap.childElementCount <= 0) {\r\n          removeOverlay.classList.add('nx-remove');\r\n        }\r\n        clearTimeout(timeoutHide);\r\n      };\r\n      // hide notify elm and hide overlay: end\r\n\n      // remove notify elm and wrapper: begin\r\n      var removeNotifyElmentsAndWrapper = function () {\r\n        if (eachNotifyElement && eachNotifyElement.parentNode !== null) {\r\n          eachNotifyElement.parentNode.removeChild(eachNotifyElement);\r\n        }\r\n        if (ntflxNotifyWrap.childElementCount <= 0 && ntflxNotifyWrap.parentNode !== null) { // if childs count === 0 remove wrap\r\n          ntflxNotifyWrap.parentNode.removeChild(ntflxNotifyWrap);\r\n          var removeOverlay = window.document.getElementById(notifySettings.overlayID);\r\n          if (removeOverlay && removeOverlay.parentNode !== null) {\r\n            removeOverlay.parentNode.removeChild(removeOverlay);\r\n          }\r\n        }\r\n        clearTimeout(timeoutRemove);\r\n      };\r\n      // remove notify elm and wrapper: end\r\n\n      // if has close button and callbackOrOptions is not a function: begin\r\n      if (newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        var closeButtonElm = window.document.getElementById(ntflxNotify.id).querySelector('span.nx-close-button');\r\n        closeButtonElm.addEventListener('click', function () {\r\n          hideNotifyElementsAndOverlay();\r\n          var clickToCloseTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(clickToCloseTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if has close button and callbackOrOptions is not a function: end\r\n\n      // if callbackOrOptions or click to close: begin\r\n      if (typeof callbackOrOptions === 'function' || newNotifySettings.clickToClose) {\r\n        eachNotifyElement.addEventListener('click', function () {\r\n          if (typeof callbackOrOptions === 'function') {\r\n            callbackOrOptions();\r\n          }\r\n          hideNotifyElementsAndOverlay();\r\n          var callbackTimeout = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n            clearTimeout(callbackTimeout);\r\n          }, newNotifySettings.cssAnimationDuration);\r\n        });\r\n      }\r\n      // if callbackOrOptions or click to close: end\r\n\n      // else auto remove: begin\r\n      if (!newNotifySettings.closeButton && typeof callbackOrOptions !== 'function') {\r\n        // auto remove: begin\r\n        var autoRemove = function () {\r\n          timeoutHide = setTimeout(function () {\r\n            hideNotifyElementsAndOverlay();\r\n          }, newNotifySettings.timeout);\r\n          timeoutRemove = setTimeout(function () {\r\n            removeNotifyElmentsAndWrapper();\r\n          }, newNotifySettings.timeout + newNotifySettings.cssAnimationDuration);\r\n        };\r\n        autoRemove();\r\n        // auto remove: end\r\n\n        // pause auto remove: begin\r\n        if (newNotifySettings.pauseOnHover) {\r\n          eachNotifyElement.addEventListener('mouseenter', function () {\r\n            eachNotifyElement.classList.add('nx-paused');\r\n            clearTimeout(timeoutHide);\r\n            clearTimeout(timeoutRemove);\r\n          });\r\n          eachNotifyElement.addEventListener('mouseleave', function () {\r\n            eachNotifyElement.classList.remove('nx-paused');\r\n            autoRemove();\r\n          });\r\n        }\r\n        // pause auto remove: end\r\n      }\r\n      // else auto remove: end\r\n    }\r\n    // remove by timeout or click: end\r\n\n    // notify - show only the last one: begin\r\n    if (newNotifySettings.showOnlyTheLastOne && notifyCreateCounter > 0) {\r\n      var allNotifyElmNotTheLastOne = window.document.querySelectorAll('[id^=' + newNotifySettings.ID + '-]:not([id=' + newNotifySettings.ID + '-' + notifyCreateCounter + '])');\r\n      for (var i = 0; i < allNotifyElmNotTheLastOne.length; i++) {\r\n        var eachNotifyElmNotLastOne = allNotifyElmNotTheLastOne[i];\r\n        if (eachNotifyElmNotLastOne.parentNode !== null) {\r\n          eachNotifyElmNotLastOne.parentNode.removeChild(eachNotifyElmNotLastOne);\r\n        }\r\n      }\r\n    }\r\n    // notify - show only the last one: end\r\n\n    // extend new settings with the backup settings\r\n    newNotifySettings = commonExtendOptions(true, newNotifySettings, newNotifySettingsBackup);\r\n\n  };\n  // NOTIFY: Create: end\n\n  var Notiflix = {\n    Notify: {\r\n      // Init\r\n      init: function (userNotifyOptions) {\r\n        // extend options\r\n        newNotifySettings = commonExtendOptions(true, notifySettings, userNotifyOptions);\r\n        // internal css if exist\r\n        commonSetInternalCSSCodes(notifyGetInternalCSSCodes, 'NotiflixNotifyInternalCSS');\r\n      },\r\n      // Merge First Init\r\n      merge: function (userNotifyExtendOptions) {\r\n        // if initialized already\r\n        if (newNotifySettings) {\r\n          newNotifySettings = commonExtendOptions(true, newNotifySettings, userNotifyExtendOptions);\r\n        }\r\n        // initialize first\r\n        else {\r\n          commonConsoleError('You have to initialize the Notify module before call Merge function.');\r\n          return false;\r\n        }\r\n      },\r\n      // Success\r\n      success: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Success, message, callbackOrOptions, options);\r\n      },\r\n      // Failure\r\n      failure: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Failure, message, callbackOrOptions, options);\r\n      },\r\n      // Warning\r\n      warning: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Warning, message, callbackOrOptions, options);\r\n      },\r\n      // Info\r\n      info: function (message, callbackOrOptions, options) {\r\n        notifyCreate(typesNotify.Info, message, callbackOrOptions, options);\r\n      },\r\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Notify: Notiflix.Notify });\n  } else {\n    return { Notify: Notiflix.Notify };\n  }\n\n});","document.addEventListener(\"DOMContentLoaded\", () => {\nconst languagesListTranslation = document.querySelector(\".languagesList\");\n\nlanguagesListTranslation.addEventListener(\"click\",function(e){\n    let index = Array.prototype.indexOf.call(languagesListTranslation.children, e.target);\n    \n    if(index == 0){\n        selectedLanguage = polish\n        toggleLanguage();\n    } else if(index == 1){\n        selectedLanguage = english\n        toggleLanguage();\n    } else if(index == 2){\n        selectedLanguage = russian\n        toggleLanguage();\n    }\n  });\n});\n\nconst   polish = {\n        specialization: \"Specjalizacja\",\n        population: \"Populacja\",\n        link0: \"Panel gracza\",\n        link1: \"Giełda\",\n        link2: \"Tabor\",\n        link3: \"Kraje\",\n        polish: \"Polski\",\n        english: \"Angielski\",\n        russian: \"Rosyjski\",\n        selectLanguage: \"Wybierz język\",\n        instruction: \"Instrukcja\",\n        myAchievements: \"Moje osiągnięcia\",\n        srcFlagTranslation: \"/pl2.d37abd68.png\",\n        chosenLanguageTranslation: \"Wybrany język\",\n        poland: \"Polska\",\n        germany: \"Niemcy\",\n        greatBritain: \"Wielka Brytania\",\n        norway: \"Norwegia\",\n        sweden: \"Szwecja\",\n        finland: \"Finlandia\",\n        ussr: \"ZSRR\",\n        czechoslovakia: \"Czechosłowacja\",\n        estonia: \"Estonia\",\n        latvia: \"Łotwa\",\n        lithuania: \"Litwa\",\n        romania: \"Rumunia\",\n        bulgaria: \"Bułgaria\",\n        greece: \"Grecja\",\n        albania: \"Albania\",\n        yugoslavia: \"Jugosławia\",\n        hungary: \"Węgry\",\n        austria: \"Austria\",\n        switzerland: \"Szwajcaria\",\n        italy: \"Włochy\",\n        france: \"Francja\",\n        spain: \"Hiszpania\",\n        portugal: \"Portugalia\",\n        turkey: \"Turcja\",\n        denmark: \"Dania\",\n        netherland: \"Holandia\",\n        belgue: \"Belgia\",\n        milionShortcut: \"mln\",\n        coal: \"Węgiel\",\n        steel: \"Stal\",\n        aluminium: \"Aluminium\",\n        copper: \"Miedź\",\n        lead: \"Ołów\",\n        grain: \"Zboże\",\n        oil: \"Ropa\",\n        wine: \"Wino\",\n        fish: \"Ryby\",\n        flour: \"Mąka\",\n        clothes: \"Ubrania\",\n        zinc: \"Cynk\",\n        wolfram: \"Wolfram\",\n        ideas: \"Idee\",\n        mechanicalParts: \"Częsci mechaniczne\",\n        mostAvailable: \"Najbardziej dostępne\",\n        theLeastAvailable : \"Najmniej dostępne\",\n        theMostExpensive : \"Najdroższe\",\n        theCheapest : \"Najtańsze\"\n    }\n    \nconst   english = {\n        specialization: \"Specialization\",\n        population: \"Population\",\n        link0: \"Player panel\",\n        link1: \"Stock market\",\n        link2: \"Stock\",\n        link3: \"Countries\",\n        polish: \"Polish\",\n        english: \"English\",\n        russian: \"Russian\",\n        selectLanguage: \"Choose language\",\n        instruction: \"Manual\",\n        myAchievements: \"My Achievements\",\n        srcFlagTranslation: \"/gb2.cce89a59.png\",\n        chosenLanguageTranslation: \"Selected language\",\n        poland: \"Poland\",\n        germany: \"Germany\",\n        greatBritain: \"Great Britain\",\n        norway: \"Norway\",\n        sweden: \"Sweden\",\n        finland: \"Finland\",\n        ussr: \"USSR\",\n        czechoslovakia: \"Czechoslovakia\",\n        estonia: \"Estonia\",\n        latvia: \"Latvia\",\n        lithuania: \"Lithuania\",\n        romania: \"Romania\",\n        bulgaria: \"Bulgaria\",\n        greece: \"Greece\",\n        albania: \"Albania\",\n        yugoslavia: \"Yugoslavia\",\n        hungary: \"Hungary\",\n        austria: \"Austria\",\n        switzerland: \"Switzerland\",\n        italy: \"Italy\",\n        france: \"France\",\n        spain: \"Spain\",\n        portugal: \"Portugal\",\n        turkey: \"Turkey\",\n        denmark: \"Denmark\",\n        netherland: \"Netherland\",\n        belgue: \"Belgue\",\n        milionShortcut: \"mln\",\n        coal: \"Coal\",\n        steel: \"Steel\",\n        aluminium: \"Aluminium\",\n        copper: \"Copper\",\n        lead: \"Lead\",\n        grain: \"Grain\",\n        oil: \"Oil\",\n        wine: \"Wine\",\n        fish: \"Fish\",\n        flour: \"Flour\",\n        clothes: \"Clothes\",\n        zinc: \"Zinc\",\n        wolfram: \"Wolfram\",\n        ideas: \"Ideas\",\n        mechanicalParts: \"Mechanical parts\",\n        mostAvailable: \"Most Available\",\n        theLeastAvailable : \"The Least Available\",\n        theMostExpensive : \"The Most Expensive\",\n        theCheapest : \"The Cheapest\"\n    }\n    \nconst   russian = {\n        specialization: \"Специализация\",\n        population: \"Население\",\n        link0: \"Панель игрока\",\n        link1: \"Фондовый рынок\",\n        link2: \"Запас\",\n        link3: \"Страны\",\n        polish: \"Польский\",\n        english: \"Английский\",\n        russian: \"Русский\",\n        selectLanguage: \"Выберите язык\",\n        instruction: \"Инструкция\",\n        myAchievements: \"мои достижения\",\n        srcFlagTranslation: \"/ru2.a879c3bc.png\",\n        chosenLanguageTranslation: \"Выбранный язык\",\n        poland: \"Польша\",\n        germany: \"Германия\",\n        greatBritain: \"Великобритания\",\n        norway: \"Норвегия\",\n        sweden: \"Швеция\",\n        finland: \"Финляндия\",\n        ussr: \"СССР\",\n        czechoslovakia: \"Чехословакия\",\n        estonia: \"Эстония\",\n        latvia: \"Латвия\",\n        lithuania: \"Литва\",\n        romania: \"Румыния\",\n        bulgaria: \"Болгария\",\n        greece: \"Греция\",\n        albania: \"Албания\",\n        yugoslavia: \"Yugoslavia\",\n        hungary: \"Венгрия\",\n        austria: \"Австрия\",\n        switzerland: \"Швейцария\",\n        italy: \"Италия\",\n        france: \"Франция\",\n        spain: \"Испания\",\n        portugal: \"Португалия\",\n        turkey: \"Турция\",\n        denmark: \"Дания\",\n        netherland: \"Нидерланды\",\n        belgue: \"бельгия\",\n        milionShortcut: \"млн\",\n        coal: \"каменный уголь\",\n        steel: \"стали\",\n        aluminium: \"Алюминий\",\n        copper: \"медь\",\n        lead: \"Oлов\",\n        grain: \"Зерновой\",\n        oil: \"Масло\",\n        wine: \"Вино\",\n        fish: \"Рыбы\",\n        flour: \"Мука\",\n        clothes: \"Одежда\",\n        zinc: \"Цинк\",\n        wolfram: \"Вольфрам\",\n        ideas: \"Идеи\",\n        mechanicalParts: \"Механические части\",\n        mostAvailable: \"Самый доступный\",\n        theLeastAvailable : \"Наименее доступный\",\n        theMostExpensive : \"Самый дорогой\",\n        theCheapest : \"Самый дешевый\"\n    }\n\n    \n    \nlet selectedLanguage = polish;\n\n  \n\n\n  function toggleLanguage(){\n      //////catch all ids on site\n   const chosenLanguage = document.getElementById(\"chosenLanguage\");\n   const tranlationPlayerPanel = document.getElementById(\"link0\");\n   const tranlationStockMarket = document.getElementById(\"link1\");\n   const tranlationStock = document.getElementById(\"link2\");\n   const translationCountries = document.getElementById(\"link3\");\n   const translationPolish = document.getElementById(\"polish\");\n   const translationEnglish = document.getElementById(\"english\");\n   const translationRussian = document.getElementById(\"russian\");\n   const translationSelectLanguage = document.getElementById(\"languages\");\n   const translationManual = document.getElementById(\"manual\");\n   const translationMyAchievements = document.getElementById(\"myAchievements\");\n\n    chosenLanguage.src = selectedLanguage.srcFlagTranslation;\n    chosenLanguage.title = selectedLanguage.chosenLanguageTranslation;\n    tranlationPlayerPanel.innerHTML = selectedLanguage.link0;\n    tranlationStockMarket.innerHTML = selectedLanguage.link1;\n    tranlationStock.innerHTML = selectedLanguage.link2;\n    translationCountries.innerHTML = selectedLanguage.link3;\n    translationPolish.innerHTML = selectedLanguage.polish;\n    translationEnglish.innerHTML = selectedLanguage.english;\n    translationRussian.innerHTML = selectedLanguage.russian;\n    translationSelectLanguage.innerHTML = selectedLanguage.selectLanguage;\n    translationManual.innerHTML = selectedLanguage.instruction;\n    translationMyAchievements.innerHTML = selectedLanguage.myAchievements;\n  }\n\n  function refreshObjectsTranslation(searchedObject){\n   \n     goods ={\n        main: {\n              1: selectedLanguage.coal,\n              2: selectedLanguage.steel,\n              3: selectedLanguage.aluminium,\n              4: selectedLanguage.copper,\n              5: selectedLanguage.lead,\n              6: selectedLanguage.grain,\n              7: selectedLanguage.oil\n        },\n        additional: {\n          1: selectedLanguage.wine,\n          2: selectedLanguage.fish,\n          3: selectedLanguage.flour,\n          4: selectedLanguage.clothes\n        },\n        specific: {\n          1: selectedLanguage.zinc,\n          2: selectedLanguage.wolfram,\n          3: selectedLanguage.ideas,\n          4: selectedLanguage.mechanicalParts\n        }\n      }\n  \n  \n      ussr = {\n      height: 400,\n      width: 310,\n      specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.specific[3],\n          4: goods.main[7]\n        }, \n        population: 159\n      }\n  \n    germany = {\n        height: 188,\n        width: 97,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.specific[3]\n        },\n        goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 74\n      }\n  \n      lithuania = {\n      height: 101, \n      width: 134, \n      specialities: {\n        1: goods.additional[2],\n        2: goods.additional[3]\n        },\n        goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 2\n      }\n  \n       poland = {\n        height: 298,\n        width: 286,\n        specialities: {\n          1: goods.main[6],\n          2: goods.main[7],\n          3: goods.additional[3]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 30\n        }\n  \n       czechoslovakia = {\n        height: 30,\n        width: 120,\n        specialities: {\n          1: goods.main[2],\n          2: goods.main[4],\n          3: goods.specific[4]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 13\n      }\n  \n       greatBritain = {\n        height: 150,\n        width: 120,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.additional[2],\n          4: goods.specific[1]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n        population: 47\n      }\n  \n       austria = {\n        height: 55,\n        width: 58,\n        specialities: {\n          1: goods.additional[3]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 6.8\n      }\n  \n       france = {\n        height: 180,\n        width: 180,\n        specialities: {\n          1: goods.main[1],\n          2: goods.main[2],\n          3: goods.main[5],\n          4: goods.additional[1]\n          },\n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 42\n      }\n\n      let norway = {\n        height: 200,\n        width: 68,\n        specialities: {\n            1: goods.additional[2]\n          },  \n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 2.9\n        }\n\n        let sweden = {\n          height: 330,\n          width: 290.4,\n          specialities: {\n              1: goods.specific[2],\n              2: goods.specific[3],\n              3: goods.main[2]\n            },  \n            goodCosts: {\n              coal: 30,\n              steel: 70,\n              aluminium: 80,\n              copper: 60,\n              lead: 50,\n              grain: 5,\n              oil: 100,\n              wine: 35,\n              fish: 5,\n              flour: 10,\n              clothes: 20,\n              zinc: 75,\n              wolfram: 100,\n              mechanicalParts: 150\n            },\n            goodsAvailability: {\n              coal: 100,\n              steel: 80,\n              aluminium: 50,\n              copper: 120,\n              lead: 80,\n              grain: 1000,\n              oil: 300,\n              wine: 50,\n              fish: 70,\n              flour: 80,\n              clothes: 90,\n              zinc: 15,\n              wolfram: 40,\n              mechanicalParts: 5\n            },\n            population: 6.2\n          }\n\n          let finland = {\n            height: 330,\n            width: 290.4,\n            specialities: {\n                1: goods.specific[2],\n                2: goods.specific[3],\n                3: goods.main[2]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5\n              },\n              population: 6.2\n            }\n\n            let latvia = {\n              height: 330,\n              width: 290.4,\n              specialities: {\n                  1: goods.specific[2],\n                  2: goods.specific[3],\n                  3: goods.main[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5\n                },\n                population: 6.2\n              }\n    \n              let estonia = {\n                height: 330,\n                width: 290.4,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 6.2\n                }\n                let romania = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 6.2\n                  }\n                  let hungary = {\n                    height: 330,\n                    width: 290.4,\n                    specialities: {\n                        1: goods.specific[2],\n                        2: goods.specific[3],\n                        3: goods.main[2]\n                      },  \n                      goodCosts: {\n                        coal: 30,\n                        steel: 70,\n                        aluminium: 80,\n                        copper: 60,\n                        lead: 50,\n                        grain: 5,\n                        oil: 100,\n                        wine: 35,\n                        fish: 5,\n                        flour: 10,\n                        clothes: 20,\n                        zinc: 75,\n                        wolfram: 100,\n                        mechanicalParts: 150\n                      },\n                      goodsAvailability: {\n                        coal: 100,\n                        steel: 80,\n                        aluminium: 50,\n                        copper: 120,\n                        lead: 80,\n                        grain: 1000,\n                        oil: 300,\n                        wine: 50,\n                        fish: 70,\n                        flour: 80,\n                        clothes: 90,\n                        zinc: 15,\n                        wolfram: 40,\n                        mechanicalParts: 5\n                      },\n                      population: 6.2\n                    }\n\n            let turkey = {\n            height: 330,\n            width: 290.4,\n            specialities: {\n                1: goods.specific[2],\n                2: goods.specific[3],\n                3: goods.main[2]\n              },  \n              goodCosts: {\n                coal: 30,\n                steel: 70,\n                aluminium: 80,\n                copper: 60,\n                lead: 50,\n                grain: 5,\n                oil: 100,\n                wine: 35,\n                fish: 5,\n                flour: 10,\n                clothes: 20,\n                zinc: 75,\n                wolfram: 100,\n                mechanicalParts: 150\n              },\n              goodsAvailability: {\n                coal: 100,\n                steel: 80,\n                aluminium: 50,\n                copper: 120,\n                lead: 80,\n                grain: 1000,\n                oil: 300,\n                wine: 50,\n                fish: 70,\n                flour: 80,\n                clothes: 90,\n                zinc: 15,\n                wolfram: 40,\n                mechanicalParts: 5\n              },\n              population: 6.2\n            }\n\n\n            let yugoslavia = {\n              height: 330,\n              width: 290.4,\n              specialities: {\n                  1: goods.specific[2],\n                  2: goods.specific[3],\n                  3: goods.main[2]\n                },  \n                goodCosts: {\n                  coal: 30,\n                  steel: 70,\n                  aluminium: 80,\n                  copper: 60,\n                  lead: 50,\n                  grain: 5,\n                  oil: 100,\n                  wine: 35,\n                  fish: 5,\n                  flour: 10,\n                  clothes: 20,\n                  zinc: 75,\n                  wolfram: 100,\n                  mechanicalParts: 150\n                },\n                goodsAvailability: {\n                  coal: 100,\n                  steel: 80,\n                  aluminium: 50,\n                  copper: 120,\n                  lead: 80,\n                  grain: 1000,\n                  oil: 300,\n                  wine: 50,\n                  fish: 70,\n                  flour: 80,\n                  clothes: 90,\n                  zinc: 15,\n                  wolfram: 40,\n                  mechanicalParts: 5\n                },\n                population: 6.2\n              }\n\n              let greece = {\n                height: 330,\n                width: 290.4,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 6.2\n                }\n\n\n                let italy = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 6.2\n                  }\n\n            let spain = {\n                height: 330,\n                width: 290.4,\n                specialities: {\n                    1: goods.specific[2],\n                    2: goods.specific[3],\n                    3: goods.main[2]\n                  },  \n                  goodCosts: {\n                    coal: 30,\n                    steel: 70,\n                    aluminium: 80,\n                    copper: 60,\n                    lead: 50,\n                    grain: 5,\n                    oil: 100,\n                    wine: 35,\n                    fish: 5,\n                    flour: 10,\n                    clothes: 20,\n                    zinc: 75,\n                    wolfram: 100,\n                    mechanicalParts: 150\n                  },\n                  goodsAvailability: {\n                    coal: 100,\n                    steel: 80,\n                    aluminium: 50,\n                    copper: 120,\n                    lead: 80,\n                    grain: 1000,\n                    oil: 300,\n                    wine: 50,\n                    fish: 70,\n                    flour: 80,\n                    clothes: 90,\n                    zinc: 15,\n                    wolfram: 40,\n                    mechanicalParts: 5\n                  },\n                  population: 6.2\n                }\n\n\n                let portugal = {\n                  height: 330,\n                  width: 290.4,\n                  specialities: {\n                      1: goods.specific[2],\n                      2: goods.specific[3],\n                      3: goods.main[2]\n                    },  \n                    goodCosts: {\n                      coal: 30,\n                      steel: 70,\n                      aluminium: 80,\n                      copper: 60,\n                      lead: 50,\n                      grain: 5,\n                      oil: 100,\n                      wine: 35,\n                      fish: 5,\n                      flour: 10,\n                      clothes: 20,\n                      zinc: 75,\n                      wolfram: 100,\n                      mechanicalParts: 150\n                    },\n                    goodsAvailability: {\n                      coal: 100,\n                      steel: 80,\n                      aluminium: 50,\n                      copper: 120,\n                      lead: 80,\n                      grain: 1000,\n                      oil: 300,\n                      wine: 50,\n                      fish: 70,\n                      flour: 80,\n                      clothes: 90,\n                      zinc: 15,\n                      wolfram: 40,\n                      mechanicalParts: 5\n                    },\n                    population: 6.2\n                  }\n  \n                  let bulgaria = {\n                    height: 330,\n                    width: 290.4,\n                    specialities: {\n                        1: goods.specific[2],\n                        2: goods.specific[3],\n                        3: goods.main[2]\n                      },  \n                      goodCosts: {\n                        coal: 30,\n                        steel: 70,\n                        aluminium: 80,\n                        copper: 60,\n                        lead: 50,\n                        grain: 5,\n                        oil: 100,\n                        wine: 35,\n                        fish: 5,\n                        flour: 10,\n                        clothes: 20,\n                        zinc: 75,\n                        wolfram: 100,\n                        mechanicalParts: 150\n                      },\n                      goodsAvailability: {\n                        coal: 100,\n                        steel: 80,\n                        aluminium: 50,\n                        copper: 120,\n                        lead: 80,\n                        grain: 1000,\n                        oil: 300,\n                        wine: 50,\n                        fish: 70,\n                        flour: 80,\n                        clothes: 90,\n                        zinc: 15,\n                        wolfram: 40,\n                        mechanicalParts: 5\n                      },\n                      population: 6.2\n                    }\n\n\n  \n\n      listObjects = {\n        \"goods\" : goods,\n        \"ussr\" : ussr,\n        \"germany\" : germany,\n        \"lithuania\" : lithuania,\n        \"poland\" : poland,\n        \"czechoslovakia\" : czechoslovakia,\n        \"greatBritain\" : greatBritain,\n        \"austria\" : austria,\n        \"france\" : france,\n        \"norway\" : norway,\n        \"finland\" : finland,\n        \"sweden\" : sweden,\n        \"latvia\" : latvia,\n        \"estonia\" : estonia,\n        \"romania\" : romania,\n        \"hungary\" : hungary,\n        \"yugoslavia\" : yugoslavia,\n        \"bulgaria\" : bulgaria,\n        \"turkey\" : turkey,\n        \"greece\" : greece,\n        \"italy\" : italy,\n        \"spain\" : spain,\n        \"portugal\" : portugal\n\n    }\n    \n    let myObject = listObjects[searchedObject];\n    return myObject\n  }\n\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport './translations';\n\nlet selectedCountryName;\nlet selectedCountry;\nlet specialitiesList = \"\";\n\n// Confirm.init({\n//   width: '350px',\n//   position: 'right-center',\n//   timeout: 3000,\n//   info: {\n//     background: '#2b1675',\n//   },\n// });\n\nNotify.init({\n  width: '350px',\n  position: 'right-bottom',\n  timeout: 3000,\n  plainText: false,\n  showOnlyTheLastOne: true,\n  info: {\n    background: '#2b1675',\n  },\n});\n\n   \n    let goods ={\n      main: {\n            1: selectedLanguage.coal,\n            2: selectedLanguage.steel,\n            3: selectedLanguage.aluminium,\n            4: selectedLanguage.copper,\n            5: selectedLanguage.lead,\n            6: selectedLanguage.grain,\n            7: selectedLanguage.oil\n      },\n      additional: {\n        1: selectedLanguage.wine,\n        2: selectedLanguage.fish,\n        3: selectedLanguage.flour,\n        4: selectedLanguage.clothes\n      },\n      specific: {\n        1: selectedLanguage.zinc,\n        2: selectedLanguage.wolfram,\n        3: selectedLanguage.ideas,\n        4: selectedLanguage.mechanicalParts\n      }\n    }\n\n    let date = {\n      fontSize: 35,\n      height: 30,\n      \n    }\n\n    let norway = {\n      height: 330,\n      width: 290.4,\n      specialities: {\n          1: goods.additional[2]\n        },  \n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5\n        },\n        population: 2.9\n      }\n\n      let sweden = {\n        height: 427.45,\n        width: 354.8,\n        specialities: {\n            1: goods.specific[2],\n            2: goods.specific[3],\n            3: goods.main[2]\n          },  \n          goodCosts: {\n            coal: 30,\n            steel: 70,\n            aluminium: 80,\n            copper: 60,\n            lead: 50,\n            grain: 5,\n            oil: 100,\n            wine: 35,\n            fish: 5,\n            flour: 10,\n            clothes: 20,\n            zinc: 75,\n            wolfram: 100,\n            mechanicalParts: 150\n          },\n          goodsAvailability: {\n            coal: 100,\n            steel: 80,\n            aluminium: 50,\n            copper: 120,\n            lead: 80,\n            grain: 1000,\n            oil: 300,\n            wine: 50,\n            fish: 70,\n            flour: 80,\n            clothes: 90,\n            zinc: 15,\n            wolfram: 40,\n            mechanicalParts: 5\n          },\n          population: 6.2\n        }\n\n   let ussr = {\n    height: 840,\n    width: 398,\n    specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.specific[3],\n        4: goods.main[7]\n      },  \n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5\n      },\n      population: 159\n    }\n\n    let germany = {\n      height:  260.4,\n      width: 420 ,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.specific[3]\n      },\n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5\n      },\n      population: 74\n    }\n\n   let lithuania = {\n    height: 101, \n    width: 134, \n    specialities: {\n      1: goods.main[6],\n      2: goods.main[7],\n      3: goods.additional[3]\n      },\n      goodCosts: {\n        coal: 30,\n        steel: 70,\n        aluminium: 80,\n        copper: 60,\n        lead: 50,\n        grain: 5,\n        oil: 100,\n        wine: 35,\n        fish: 5,\n        flour: 10,\n        clothes: 20,\n        zinc: 75,\n        wolfram: 100,\n        mechanicalParts: 150\n      },\n      goodsAvailability: {\n        coal: 100,\n        steel: 80,\n        aluminium: 50,\n        copper: 120,\n        lead: 80,\n        grain: 1000,\n        oil: 300,\n        wine: 50,\n        fish: 70,\n        flour: 80,\n        clothes: 90,\n        zinc: 15,\n        wolfram: 40,\n        mechanicalParts: 5\n      },\n      population: 2\n    }\n\n    let poland = {\n      height: 298,\n      width: 286,\n      specialities: {\n        1: goods.main[6],\n        2: goods.main[7],\n        3: goods.additional[3]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5\n        },\n        population: 30\n      }\n\n    let czechoslovakia = {\n      height: 110.2,\n      width: 334,\n      specialities: {\n        1: goods.main[2],\n        2: goods.main[4],\n        3: goods.specific[4]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5\n        },\n        population: 13\n    }\n\n    let greatBritain = {\n      height: 400,\n      width: 286,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.additional[2],\n        4: goods.specific[1]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5\n        },\n      population: 47\n    }\n\n    let austria = {\n      height: 79.2,\n      width: 180,\n      specialities: {\n        1: goods.additional[3]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5\n        },\n        population: 6.8\n    }\n\n    let france = {\n      height: 365,\n      width: 324.8,\n      specialities: {\n        1: goods.main[1],\n        2: goods.main[2],\n        3: goods.main[5],\n        4: goods.additional[1]\n        },\n        goodCosts: {\n          coal: 30,\n          steel: 70,\n          aluminium: 80,\n          copper: 60,\n          lead: 50,\n          grain: 5,\n          oil: 100,\n          wine: 35,\n          fish: 5,\n          flour: 10,\n          clothes: 20,\n          zinc: 75,\n          wolfram: 100,\n          mechanicalParts: 150\n        },\n        goodsAvailability: {\n          coal: 100,\n          steel: 80,\n          aluminium: 50,\n          copper: 120,\n          lead: 80,\n          grain: 1000,\n          oil: 300,\n          wine: 50,\n          fish: 70,\n          flour: 80,\n          clothes: 90,\n          zinc: 15,\n          wolfram: 40,\n          mechanicalParts: 5\n        },\n        population: 42\n    }\n    \n\n    let polishMap = document.querySelector(\"#polishMap\");\n    const polishMapLocation = $(\".polishMapLocation\")[0];\n\n    const lithuanianMapLocation = $(\".lithuanianMapLocation\")[0];\n    let lithuaniaMap = document.querySelector(\"#lithuaniaMap\");\n\n    const ussrMapLocation = $(\".ussrMapLocation\")[0];\n    let ussrMap = document.querySelector(\"#ussrMap\");\n\n    const czechoslovakiaMapLocation = $(\".czechoslovakiaMapLocation\")[0];\n    let czechoslovakiaMap = document.querySelector(\"#czechoslovakiaMap\");\n\n    const austriaMapLocation = $(\".austriaMapLocation\")[0];\n    let austriaMap = document.querySelector(\"#austriaMap\");\n\n    const germanyMapLocation = $(\".germanyMapLocation\")[0];\n    let germanyMap = document.querySelector(\"#germanyMap\");\n\n    const franceMapLocation = $(\".franceMapLocation\")[0];\n    let franceMap = document.querySelector(\"#franceMap\");\n\n    const greatBritainMapLocation = $(\".greatBritainMapLocation\")[0];\n    let greatBritainMap = document.querySelector(\"#greatBritainMap\");\n\n    const norwayMapLocation = $(\".norwayMapLocation\")[0];\n    let norwayMap = document.querySelector(\"#norwayMap\");\n\n    const swedenMapLocation = $(\".swedenMapLocation\")[0];\n    let swedenMap = document.querySelector(\"#swedenMap\");\n\n  \n    const dateValueOnMap = document.querySelector(\".dateValue\");\n    const dateOnMap = document.querySelector(\".date\");\n\n    let resolution = $(\"#mainNav\").width();\n    let factor;\n    \n    calculateResoluctionFactor(resolution)\n    recalculateCountriesPositionsBasedOnResolution(factor)\n\n    window.addEventListener(\"resize\",function(){\n      resolution = $(\"#mainNav\").width();\n      calculateResoluctionFactor(resolution)\n      recalculateCountriesPositionsBasedOnResolution(factor)\n    })\n    \n    ////Poland\n    polishMap.addEventListener(\"click\", \n    function(){ \n        alert(\"You chosen Poland, good move!\"); \n      }\n    );\n    polishMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"poland\";\n          countrySpecialities(selectedCountryName)\n      });\n\n          ////Norway\n    norwayMap.addEventListener(\"click\", \n    function(){ \n        alert(\"You chosen Norway, good move!\"); \n      }\n    );\n    norwayMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"norway\";\n          countrySpecialities(selectedCountryName)\n      });\n\n      ////Sweden\n    swedenMap.addEventListener(\"click\", \n    function(){ \n        alert(\"You chosen Norway, good move!\"); \n      }\n    );\n    swedenMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"sweden\";\n          countrySpecialities(selectedCountryName)\n      });\n      \n\n    ////Germany\n    germanyMap.addEventListener(\"click\", \n    function(){ alert(\"You chosen Germany, bad move!\"); }\n    );\n\n    germanyMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"germany\";\n          countrySpecialities(selectedCountryName)\n      });\n\n      \n\n    ////GB\n    greatBritainMap.addEventListener(\"click\", \n    function(){ alert(\"You chosen GB, bad move!\"); }\n    );\n\n    greatBritainMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"greatBritain\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    ////USSR\n    ussrMap.addEventListener(\"click\", \n    function(){ alert(\"You chosen USSR, bad move!\"); }\n    );\n\n    ussrMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"ussr\";\n      countrySpecialities(selectedCountryName)\n      });\n\n\n    ///Czechoslovakia\n    czechoslovakiaMap.addEventListener(\"click\", \n    function(){ alert(\"You chosen Czechoslovakia, good move!\"); }\n    );\n\n    czechoslovakiaMap.addEventListener(\"mouseover\", \n    function(){ \n          selectedCountryName = \"czechoslovakia\";\n          countrySpecialities(selectedCountryName)\n    \n      });\n\n    ////Austria\n    austriaMap.addEventListener(\"click\", \n    function(){ alert(\"You chosen Austria, good move!\"); }\n    );\n\n    austriaMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"austria\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    ////France\n    franceMap.addEventListener(\"click\", \n    function(){ alert(\"You chosen France, good move!\"); }\n    );\n\n    franceMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"france\";\n      countrySpecialities(selectedCountryName)\n      });\n\n    ////Lituenia\n    lithuaniaMap.addEventListener(\"click\", \n    function(){ alert(\"You chosen Lithuania, good move!\"); }\n    );\n\n    lithuaniaMap.addEventListener(\"mouseover\", \n    function(){ \n      selectedCountryName = \"lithuania\";\n      countrySpecialities(selectedCountryName)\n      });\n\n\n\n\n\n    function recalculateCountriesPositionsBasedOnResolution(){\n  \n      polishMapLocation.style.height = (factor * poland.height) + \"px\";\n      polishMapLocation.style.width = (factor * poland.width) + \"px\";\n\n      lithuanianMapLocation.style.height = (factor * lithuania.height) + \"px\";\n      lithuanianMapLocation.style.width = (factor * lithuania.width) + \"px\";\n\n      germanyMapLocation.style.height = (factor * germany.height) + \"px\";\n      germanyMapLocation.style.width = (factor * germany.width) + \"px\";\n\n      ussrMapLocation.style.height = (factor * ussr.height) + \"px\";\n      ussrMapLocation.style.width = (factor * ussr.width) + \"px\";\n\n      czechoslovakiaMapLocation.style.height = (factor * czechoslovakia.height) + \"px\";\n      czechoslovakiaMapLocation.style.width = (factor * czechoslovakia.width) + \"px\";\n\n      greatBritainMapLocation.style.height = (factor * greatBritain.height) + \"px\";\n      greatBritainMapLocation.style.width = (factor * greatBritain.width) + \"px\";\n      \n      austriaMapLocation.style.height = (factor * austria.height) + \"px\";\n      austriaMapLocation.style.width = (factor * austria.width) + \"px\";\n\n      franceMapLocation.style.height = (factor * france.height) + \"px\";\n      franceMapLocation.style.width = (factor * france.width) + \"px\";\n\n      norwayMapLocation.style.height = (factor * norway.height) + \"px\";\n      norwayMapLocation.style.width = (factor * norway.width) + \"px\";\n\n      swedenMapLocation.style.height = (factor * sweden.height) + \"px\";\n      swedenMapLocation.style.width = (factor * sweden.width) + \"px\";\n      \n      dateValueOnMap.style.fontSize = (factor * date.fontSize) + \"px\"\n      dateOnMap.style.fontSize = (factor * date.height) + \"px\"\n    }\n\n    function calculateResoluctionFactor(){\n      factor = resolution / 1887 ;\n    }\n\n    function countrySpecialities(selectedCountryName){\n      selectedCountry = refreshObjectsTranslation(selectedCountryName);\n      specialitiesList = \"\";\n      for(let specNbr in selectedCountry.specialities){\n        if(specNbr < Object.keys(selectedCountry.specialities).length){\n        specialitiesList += selectedCountry.specialities[specNbr] + \", \"\n      } else {\n        specialitiesList += selectedCountry.specialities[specNbr]\n      }\n      }\n     let notifyInfoValue = notifyInfo(selectedCountry)\n        Notify.info(notifyInfoValue)\n    }\n\n    function notifyInfo(selectedCountry){\n    return  \"<b>\" + selectedLanguage[selectedCountryName] + \"</b>\" + \": <br> \" + selectedLanguage.population + \": \" + selectedCountry.population + \" \" + selectedLanguage.milionShortcut\n            + \"<br>\" + selectedLanguage.specialization + \": \" + specialitiesList\n    }\n\n\n\n"],"names":["root","factory","$parcel$global","window","$db8fed00f4c020c9$exports","document","newNotifySettings","typesNotify","notifySettings","wrapID","overlayID","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","plainText","showOnlyTheLastOne","clickToClose","pauseOnHover","ID","className","zindex","fontFamily","fontSize","cssAnimation","cssAnimationDuration","cssAnimationStyle","closeButton","useIcon","useFontAwesome","fontAwesomeIconStyle","fontAwesomeIconSize","success","background","textColor","childClassName","notiflixIconColor","fontAwesomeClassName","fontAwesomeIconColor","failure","warning","info","commonConsoleError","message","console","error","commonCheckHeadOrBody","element","commonExtendOptions","extended","deep","i","Object","prototype","toString","call","arguments","merge","obj","prop","hasOwnProperty","length","notifyGetInternalCSSCodes","notifyCreateCounter","notifyCreate","notifyType","callbackOrOptions","options","Notiflix","Notify","init","newNotifySettingsBackup","Array","isArray","newOptions","html","htmlPool","theType","toLocaleLowerCase","createElement","innerHTML","textContent","innerText","substring","ntflxNotifyWrap","getElementById","id","style","zIndex","left","top","right","bottom","margin","classList","add","maxHeight","display","flexWrap","flexDirection","justifyContent","alignItems","pointerEvents","ntflxNotifyOverlay","height","animationDuration","body","appendChild","ntflxNotify","color","setAttribute","closeButtonHTML","svgIcon","notifyWrap","insertBefore","firstChild","eachNotifyElement","timeoutHide","timeoutRemove","hideNotifyElementsAndOverlay","removeOverlay","childElementCount","clearTimeout","removeNotifyElmentsAndWrapper","parentNode","removeChild","querySelector","addEventListener","clickToCloseTimeout","setTimeout","callbackTimeout","autoRemove","remove","allNotifyElmNotTheLastOne","querySelectorAll","eachNotifyElmNotLastOne","userNotifyOptions","getInternalCSSCodes","styleElementId","internalCSS","head","commonSetInternalCSSCodes","userNotifyExtendOptions","define","amd","languagesListTranslation","e","index","indexOf","children","target","$7c214f316370eb1f$var$selectedLanguage","$7c214f316370eb1f$var$polish","$7c214f316370eb1f$var$toggleLanguage","$7c214f316370eb1f$var$english","$7c214f316370eb1f$var$russian","specialization","population","link0","link1","link2","link3","polish","english","russian","selectLanguage","instruction","myAchievements","srcFlagTranslation","chosenLanguageTranslation","poland","germany","greatBritain","norway","sweden","finland","ussr","czechoslovakia","estonia","latvia","lithuania","romania","bulgaria","greece","albania","yugoslavia","hungary","austria","switzerland","italy","france","spain","portugal","turkey","denmark","netherland","belgue","milionShortcut","coal","steel","aluminium","copper","lead","grain","oil","wine","fish","flour","clothes","zinc","wolfram","ideas","mechanicalParts","mostAvailable","theLeastAvailable","theMostExpensive","theCheapest","$d4627f745d545ed8$var$selectedCountryName","$d4627f745d545ed8$var$selectedCountry","chosenLanguage","tranlationPlayerPanel","tranlationStockMarket","tranlationStock","translationCountries","translationPolish","translationEnglish","translationRussian","translationSelectLanguage","translationManual","translationMyAchievements","src","title","$d4627f745d545ed8$var$specialitiesList","$d4627f745d545ed8$var$goods","main","selectedLanguage","additional","specific","$d4627f745d545ed8$var$date","$d4627f745d545ed8$var$norway","$d4627f745d545ed8$var$sweden","$d4627f745d545ed8$var$ussr","$d4627f745d545ed8$var$germany","$d4627f745d545ed8$var$lithuania","$d4627f745d545ed8$var$poland","$d4627f745d545ed8$var$czechoslovakia","$d4627f745d545ed8$var$greatBritain","$d4627f745d545ed8$var$austria","$d4627f745d545ed8$var$france","$d4627f745d545ed8$var$polishMap","$d4627f745d545ed8$var$polishMapLocation","$","$d4627f745d545ed8$var$lithuanianMapLocation","$d4627f745d545ed8$var$lithuaniaMap","$d4627f745d545ed8$var$ussrMapLocation","$d4627f745d545ed8$var$ussrMap","$d4627f745d545ed8$var$czechoslovakiaMapLocation","$d4627f745d545ed8$var$czechoslovakiaMap","$d4627f745d545ed8$var$austriaMapLocation","$d4627f745d545ed8$var$austriaMap","$d4627f745d545ed8$var$germanyMapLocation","$d4627f745d545ed8$var$germanyMap","$d4627f745d545ed8$var$franceMapLocation","$d4627f745d545ed8$var$franceMap","$d4627f745d545ed8$var$greatBritainMapLocation","$d4627f745d545ed8$var$greatBritainMap","$d4627f745d545ed8$var$norwayMapLocation","$d4627f745d545ed8$var$norwayMap","$d4627f745d545ed8$var$swedenMapLocation","$d4627f745d545ed8$var$swedenMap","$d4627f745d545ed8$var$dateValueOnMap","$d4627f745d545ed8$var$dateOnMap","$d4627f745d545ed8$var$factor","$d4627f745d545ed8$var$resolution","$d4627f745d545ed8$var$recalculateCountriesPositionsBasedOnResolution","$d4627f745d545ed8$var$calculateResoluctionFactor","$d4627f745d545ed8$var$countrySpecialities","selectedCountryName1","refreshObjectsTranslation","specNbr","specialities","keys","notifyInfoValue","selectedCountry1","alert"],"version":3,"file":"index.a17e2d76.js.map"}